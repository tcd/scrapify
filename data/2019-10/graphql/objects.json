[
  {
    "name": "QueryRoot",
    "description": "The schema's entry-point for queries. This acts as the public, top-level API from which all queries must start.",
    "fields": [
      {
        "name": "app",
        "description": "Lookup an App by ID or return the currently authenticated App.",
        "required": false,
        "type": "App"
      },
      {
        "name": "appByHandle",
        "description": "Fetches app by handle.\nReturns null if the app doesn't exist.\n",
        "required": false,
        "type": "App"
      },
      {
        "name": "appByKey",
        "description": "Fetches app by apiKey.\nReturns null if the app doesn't exist.\n",
        "required": false,
        "type": "App"
      },
      {
        "name": "appInstallation",
        "description": "Lookup an AppInstallation by ID or return the AppInstallation for the currently authenticated App.",
        "required": false,
        "type": "AppInstallation"
      },
      {
        "name": "appInstallations",
        "description": "List of app installations.",
        "required": false,
        "type": null
      },
      {
        "name": "automaticDiscount",
        "description": "Returns an automatic discount resource by ID.",
        "required": false,
        "type": "DiscountAutomatic"
      },
      {
        "name": "automaticDiscountNode",
        "description": "Returns an automatic discount resource by ID.",
        "required": false,
        "type": "DiscountAutomaticNode"
      },
      {
        "name": "automaticDiscountNodes",
        "description": "List of automatic discounts.",
        "required": false,
        "type": null
      },
      {
        "name": "automaticDiscountSavedSearches",
        "description": "List of the shop's automatic discount saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "automaticDiscounts",
        "description": "List of automatic discounts.",
        "required": false,
        "type": null
      },
      {
        "name": "availableCarrierServices",
        "description": "List of activated carrier services and which shop locations support them.",
        "required": false,
        "type": null
      },
      {
        "name": "carrierService",
        "description": "Lookup a carrier service by ID.",
        "required": false,
        "type": "DeliveryCarrierService"
      },
      {
        "name": "channel",
        "description": "Lookup a channel by ID.",
        "required": false,
        "type": "Channel"
      },
      {
        "name": "channels",
        "description": "List of the active sales channels.",
        "required": false,
        "type": null
      },
      {
        "name": "codeDiscountNode",
        "description": "Returns a code discount resource by ID.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "codeDiscountNodeByCode",
        "description": "Returns a code discount identified by its code.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "codeDiscountNodes",
        "description": "List of code discounts. Special fields for query params:\n * status: active, expired, scheduled\n * type: bxgy, fixed_amount, free_shipping, percentage.",
        "required": false,
        "type": null
      },
      {
        "name": "codeDiscountSavedSearches",
        "description": "List of the shop's code discount saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "collection",
        "description": "Returns a Collection resource by ID.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "collectionByHandle",
        "description": "Return a collection by its handle.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "collectionRulesConditions",
        "description": "A list of rule conditions to define how collections with rules can be created.",
        "required": false,
        "type": null
      },
      {
        "name": "collectionSavedSearches",
        "description": "List of the shop's collection saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "collections",
        "description": "List of collections.",
        "required": false,
        "type": null
      },
      {
        "name": "currentAppInstallation",
        "description": "Return the AppInstallation for the currently authenticated App.",
        "required": false,
        "type": null
      },
      {
        "name": "currentBulkOperation",
        "description": "Returns the current app's most recent BulkOperation.",
        "required": false,
        "type": "BulkOperation"
      },
      {
        "name": "customer",
        "description": "Returns a Customer resource by ID.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "customerSavedSearches",
        "description": "List of the shop's customer saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "customers",
        "description": "List of customers.",
        "required": false,
        "type": null
      },
      {
        "name": "deletionEvents",
        "description": "The paginated list of deletion events.",
        "required": false,
        "type": null
      },
      {
        "name": "deliveryProfile",
        "description": "Lookup a Delivery Profile by ID.",
        "required": false,
        "type": "DeliveryProfile"
      },
      {
        "name": "deliveryProfiles",
        "description": "List of saved delivery profiles.",
        "required": false,
        "type": null
      },
      {
        "name": "deliverySettings",
        "description": "The shop-wide shipping settings.",
        "required": false,
        "type": "DeliverySetting"
      },
      {
        "name": "domain",
        "description": "Lookup a Domain by ID.",
        "required": false,
        "type": "Domain"
      },
      {
        "name": "draftOrder",
        "description": "Returns a DraftOrder resource by ID.",
        "required": false,
        "type": "DraftOrder"
      },
      {
        "name": "draftOrderSavedSearches",
        "description": "List of the shop's draft order saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "draftOrders",
        "description": "List of saved draft orders.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillment",
        "description": "Returns a Fulfillment resource by ID.",
        "required": false,
        "type": "Fulfillment"
      },
      {
        "name": "inventoryItem",
        "description": "Returns an InventoryItem resource by ID.",
        "required": false,
        "type": "InventoryItem"
      },
      {
        "name": "inventoryItems",
        "description": "List of inventory items.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryLevel",
        "description": "Returns an InventoryLevel resource by ID.",
        "required": false,
        "type": "InventoryLevel"
      },
      {
        "name": "job",
        "description": "Returns a Job resource by ID. Used to check the status of internal jobs and any applicable changes.\n",
        "required": false,
        "type": "Job"
      },
      {
        "name": "location",
        "description": "Returns an inventory Location resource by ID.",
        "required": false,
        "type": "Location"
      },
      {
        "name": "locations",
        "description": "List of active locations.",
        "required": false,
        "type": null
      },
      {
        "name": "locationsAvailableForDeliveryProfiles",
        "description": "Returns a list of all origin locations available for a delivery profile.",
        "required": false,
        "type": null
      },
      {
        "name": "locationsAvailableForDeliveryProfilesConnection",
        "description": "Returns a list of all origin locations available for a delivery profile.",
        "required": false,
        "type": null
      },
      {
        "name": "marketingActivities",
        "description": "List of a campaign's marketing activities.",
        "required": false,
        "type": null
      },
      {
        "name": "marketingActivity",
        "description": "Returns a MarketingActivity resource by ID.",
        "required": false,
        "type": "MarketingActivity"
      },
      {
        "name": "marketingEvent",
        "description": "Returns a MarketingEvent resource by ID.",
        "required": false,
        "type": "MarketingEvent"
      },
      {
        "name": "marketingEvents",
        "description": "List of marketing events.",
        "required": false,
        "type": null
      },
      {
        "name": "metafieldStorefrontVisibilities",
        "description": "List of metafield namespaces and keys visible to the Storefront API.",
        "required": false,
        "type": null
      },
      {
        "name": "metafieldStorefrontVisibility",
        "description": "Returns metafield storefront visibility by ID.",
        "required": false,
        "type": "MetafieldStorefrontVisibility"
      },
      {
        "name": "node",
        "description": "Returns a specific node by ID.",
        "required": false,
        "type": "Node"
      },
      {
        "name": "nodes",
        "description": "Returns the list of nodes with the given IDs.",
        "required": false,
        "type": null
      },
      {
        "name": "order",
        "description": "Returns an Order resource by ID.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "orderSavedSearches",
        "description": "List of the shop's order saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "orders",
        "description": "List of orders placed.",
        "required": false,
        "type": null
      },
      {
        "name": "priceRule",
        "description": "Lookup a price rule by ID.",
        "required": false,
        "type": "PriceRule"
      },
      {
        "name": "priceRuleSavedSearches",
        "description": "List of the shop's price rule saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "priceRules",
        "description": "List of price rules.",
        "required": false,
        "type": null
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield by ID.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "Returns a Product resource by ID.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "productByHandle",
        "description": "Return a product by its handle.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "productSavedSearches",
        "description": "List of the shop's product saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "productVariant",
        "description": "Returns a ProductVariant resource by ID.",
        "required": false,
        "type": "ProductVariant"
      },
      {
        "name": "productVariants",
        "description": "List of the product variants.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "List of products.",
        "required": false,
        "type": null
      },
      {
        "name": "publicApiVersions",
        "description": "The list of public Admin API versions, including supported, release candidate and unstable versions.",
        "required": false,
        "type": null
      },
      {
        "name": "publication",
        "description": "Lookup a publication by ID.",
        "required": false,
        "type": "Publication"
      },
      {
        "name": "publications",
        "description": "List of the active publications.",
        "required": false,
        "type": null
      },
      {
        "name": "refund",
        "description": "Returns a Refund resource by ID.",
        "required": false,
        "type": "Refund"
      },
      {
        "name": "scriptTag",
        "description": "Lookup a script tag resource by ID.",
        "required": false,
        "type": "ScriptTag"
      },
      {
        "name": "scriptTags",
        "description": "List of script tags.",
        "required": false,
        "type": null
      },
      {
        "name": "shop",
        "description": "Returns a Shop resource corresponding to access token used in request.",
        "required": false,
        "type": null
      },
      {
        "name": "shopLocales",
        "description": "List of locales available on a shop.",
        "required": false,
        "type": null
      },
      {
        "name": "shopifyPaymentsAccount",
        "description": "Shopify Payments account information, including balances and payouts.",
        "required": false,
        "type": "ShopifyPaymentsAccount"
      },
      {
        "name": "tenderTransactions",
        "description": "List of TenderTransactions associated with the Shop.",
        "required": false,
        "type": null
      },
      {
        "name": "translatableResource",
        "description": "Translatable resource.",
        "required": false,
        "type": "TranslatableResource"
      },
      {
        "name": "translatableResources",
        "description": "List of translatable resources.",
        "required": false,
        "type": null
      },
      {
        "name": "webhookSubscription",
        "description": "Returns a webhook subscription by ID.",
        "required": false,
        "type": "WebhookSubscription"
      },
      {
        "name": "webhookSubscriptions",
        "description": "List of webhook subscriptions.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Job",
    "description": "A job corresponds to some long running task that the client should poll for status.",
    "fields": [
      {
        "name": "done",
        "description": "This indicates if the job is still queued or has been run.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "query",
        "description": "This field will only resolve once the job is done. Can be used to ask for object(s) that have been changed by the job.",
        "required": false,
        "type": "QueryRoot"
      }
    ]
  },
  {
    "name": "App",
    "description": "A Shopify application.",
    "fields": [
      {
        "name": "apiKey",
        "description": "A unique application API identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "appStoreAppUrl",
        "description": "App store page URL of the app.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "appStoreDeveloperUrl",
        "description": "App store page URL of the developer who created the app.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "banner",
        "description": "Banner image for the app.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "Description of the app.",
        "required": false,
        "type": "String"
      },
      {
        "name": "developerName",
        "description": "App's developer name.",
        "required": false,
        "type": "String"
      },
      {
        "name": "developerUrl",
        "description": "Website of the developer who created the app.",
        "required": false,
        "type": null
      },
      {
        "name": "embedded",
        "description": "Whether the app uses the Embedded App SDK.",
        "required": false,
        "type": null
      },
      {
        "name": "failedRequirements",
        "description": "Requirements that must be met before the app can be installed.",
        "required": false,
        "type": null
      },
      {
        "name": "features",
        "description": "List of app features.",
        "required": false,
        "type": null
      },
      {
        "name": "feedback",
        "description": "Feedback from this app about the store.",
        "required": false,
        "type": "AppFeedback"
      },
      {
        "name": "handle",
        "description": "Handle of the app.",
        "required": false,
        "type": "String"
      },
      {
        "name": "icon",
        "description": "Icon that represents the app.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "installUrl",
        "description": "Webpage where you can install the app.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "installation",
        "description": "Corresponding AppInstallation for this shop and App.\nReturns null if the App is not installed.\n",
        "required": false,
        "type": "AppInstallation"
      },
      {
        "name": "launchUrl",
        "description": "Webpage that the app starts in.",
        "required": false,
        "type": null
      },
      {
        "name": "navigationItems",
        "description": "Menu items for the app, which also appear as submenu items in left navigation sidebar in the Shopify admin.\n",
        "required": false,
        "type": null
      },
      {
        "name": "pricingDetails",
        "description": "Detailed information about the app pricing.",
        "required": false,
        "type": "String"
      },
      {
        "name": "pricingDetailsSummary",
        "description": "Summary of the app pricing details.",
        "required": false,
        "type": null
      },
      {
        "name": "privacyPolicyUrl",
        "description": "Link to app privacy policy.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "published",
        "description": "Whether the app is published.",
        "required": false,
        "type": null
      },
      {
        "name": "screenshots",
        "description": "Screenshots of the app.",
        "required": false,
        "type": null
      },
      {
        "name": "shopifyDeveloped",
        "description": "Whether the app was developed by Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Name of the app.",
        "required": false,
        "type": null
      },
      {
        "name": "uninstallMessage",
        "description": "Message that appears when the app is uninstalled.\n\nFor example, _By removing this app, you will no longer be able to publish products to MySocialSite or view this app in your Shopify admin. You can re-enable this channel at any time._\n",
        "required": false,
        "type": null
      },
      {
        "name": "uninstallUrl",
        "description": "Webpage where you can uninstall the app.",
        "required": false,
        "type": "URL"
      }
    ]
  },
  {
    "name": "Image",
    "description": "Represents an image resource.",
    "fields": [
      {
        "name": "altText",
        "description": "A word or phrase to share the nature or contents of an image.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "A unique identifier for the image.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "originalSrc",
        "description": "The location of the original image as a URL.\n\nIf there are any existing transformations in the original source URL, they will remain and not be stripped.\n",
        "required": false,
        "type": null
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "src",
        "description": "The location of the image as a URL.",
        "required": false,
        "type": null
      },
      {
        "name": "transformedSrc",
        "description": "The location of the transformed image as a URL.\n\nAll transformation arguments are considered \"best-effort\". If they can be applied to an image, they will be.\nOtherwise any transformations which an image type does not support will be ignored.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Metafield",
    "description": "Metafields represent custom metadata attached to a resource. Metafields can be sorted into namespaces and are\ncomprised of keys, values, and value types.\n",
    "fields": [
      {
        "name": "description",
        "description": "The description of a metafield.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "key",
        "description": "The key name for a metafield.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "namespace",
        "description": "The namespace for a metafield.",
        "required": false,
        "type": null
      },
      {
        "name": "ownerType",
        "description": "Owner type of a metafield visible to the Storefront API.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of a metafield.",
        "required": false,
        "type": null
      },
      {
        "name": "valueType",
        "description": "Represents the metafield value type.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PageInfo",
    "description": "Information about pagination in a connection.",
    "fields": [
      {
        "name": "hasNextPage",
        "description": "Indicates if there are more pages to fetch.",
        "required": false,
        "type": null
      },
      {
        "name": "hasPreviousPage",
        "description": "Indicates if there are any pages prior to the current page.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of MetafieldEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PrivateMetafield",
    "description": "Private metafields represent custom metadata that is attached to a resource.\nPrivate metafields are private to the application that creates them on a shop's resources.\n",
    "fields": [
      {
        "name": "id",
        "description": "The id of the private metafield.",
        "required": false,
        "type": null
      },
      {
        "name": "key",
        "description": "The key name for a private metafield.",
        "required": false,
        "type": null
      },
      {
        "name": "namespace",
        "description": "The namespace for a private metafield.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of a private metafield.",
        "required": false,
        "type": null
      },
      {
        "name": "valueType",
        "description": "Represents the private metafield value type.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PrivateMetafieldConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PrivateMetafieldEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of PrivateMetafieldEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "NavigationItem",
    "description": "A navigation item, holding basic link attributes.",
    "fields": [
      {
        "name": "id",
        "description": "The unique identifier of the navigation item.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The name of the navigation item.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "The URL of the page that the navigation item links to.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FailedRequirement",
    "description": "Requirements that must be met before an app can be installed.",
    "fields": [
      {
        "name": "action",
        "description": "Action to be taken to resolve a failed requirement, including URL link.",
        "required": false,
        "type": "NavigationItem"
      },
      {
        "name": "message",
        "description": "A concise set of copy strings to be displayed to merchants, to guide them in resolving problems your app\nencounters when trying to make use of their Shop and its resources.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppFeedback",
    "description": "Reports the status of shops and their resources and displays this information\nwithin Shopify admin. AppFeedback is used to notify merchants about steps they need to take\nto set up an app on their store.\n",
    "fields": [
      {
        "name": "app",
        "description": "The application associated to the feedback.",
        "required": false,
        "type": null
      },
      {
        "name": "link",
        "description": "A link to where merchants can resolve errors.",
        "required": false,
        "type": "Link"
      },
      {
        "name": "messages",
        "description": "The feedback message presented to the merchant.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "UserError",
    "description": "Represents an error in the input of a mutation.",
    "fields": [
      {
        "name": "field",
        "description": "Path to the input field which caused the error.",
        "required": false,
        "type": null
      },
      {
        "name": "message",
        "description": "The error message.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Link",
    "description": "A link to direct users to.",
    "fields": [
      {
        "name": "label",
        "description": "A context-sensitive label for the link.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "The URL that the link visits.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PublishedTranslation",
    "description": "Published translation of a field of a resource.",
    "fields": [
      {
        "name": "key",
        "description": "Translation key.",
        "required": false,
        "type": null
      },
      {
        "name": "locale",
        "description": "Translation locale.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "Translation value.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "AppInstallation",
    "description": "Represents an installed application on a shop.",
    "fields": [
      {
        "name": "accessScopes",
        "description": "Access scopes granted to an app by a merchant during installation.",
        "required": false,
        "type": null
      },
      {
        "name": "activeSubscriptions",
        "description": "Active subscriptions charged to a shop on a recurring basis.",
        "required": false,
        "type": null
      },
      {
        "name": "allSubscriptions",
        "description": "All subscriptions created for a shop.",
        "required": false,
        "type": null
      },
      {
        "name": "app",
        "description": "Application which is installed.",
        "required": false,
        "type": null
      },
      {
        "name": "channel",
        "description": "Channel associated with the installed application.",
        "required": false,
        "type": "Channel"
      },
      {
        "name": "credits",
        "description": "Credits that can be used towards future app purchases.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "launchUrl",
        "description": "Url used to launch the app.",
        "required": false,
        "type": null
      },
      {
        "name": "oneTimePurchases",
        "description": "One-time purchases to a shop.",
        "required": false,
        "type": null
      },
      {
        "name": "publication",
        "description": "Publication associated with the installed application.",
        "required": false,
        "type": "Publication"
      },
      {
        "name": "subscriptions",
        "description": "Subscriptions charge to a shop on a recurring basis.",
        "required": false,
        "type": null
      },
      {
        "name": "uninstallUrl",
        "description": "Webpage where you can uninstall the app.",
        "required": false,
        "type": "URL"
      }
    ]
  },
  {
    "name": "AccessScope",
    "description": "Represents the access scope permission that is applicable to a merchant's shop, such as `read_orders`.\n",
    "fields": [
      {
        "name": "description",
        "description": "Description of the access scopes enabled on an api permission.",
        "required": false,
        "type": null
      },
      {
        "name": "handle",
        "description": "A human-friendly string for an access scope.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Channel",
    "description": "A channel is a group of products and collections that is published to an app. A channel can be a platform or marketplace such\nas Facebook or Pinterest, an online store, or POS.\n",
    "fields": [
      {
        "name": "app",
        "description": "Underlying app used by the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "collectionPublicationsV3",
        "description": "The collection publications for the list of collections published to the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "collections",
        "description": "The list of collections published to the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "handle",
        "description": "Unique identifier for the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "hasCollection",
        "description": "Whether the collection is available to the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Name of the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "navigationItems",
        "description": "Menu items for the channel, which also appear as submenu items in left navigation sidebar in the Shopify admin.\n",
        "required": false,
        "type": null
      },
      {
        "name": "overviewPath",
        "description": "Home page for the channel.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "productPublications",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "productPublicationsV3",
        "description": "The product publications for the list of products published to the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "The list of products published to the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "supportsFuturePublishing",
        "description": "Whether or not this channel supports future publishing.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ResourcePublicationConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ResourcePublicationEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ResourcePublicationEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ResourcePublication",
    "description": "A resource publication represents that a resource has been published to a publication.",
    "fields": [
      {
        "name": "channel",
        "description": "The channel the resource publication is published to.",
        "required": false,
        "type": null
      },
      {
        "name": "isPublished",
        "description": "Whether the resource publication is published or not.",
        "required": false,
        "type": null
      },
      {
        "name": "publication",
        "description": "The publication the resource publication is published to.",
        "required": false,
        "type": null
      },
      {
        "name": "publishDate",
        "description": "The date that the resource publication was or is going to be published to the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "publishable",
        "description": "The resource published to the publication.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Publication",
    "description": "A publication is a group of products and collections that is published to an app. A publication can be a platform or marketplace such\nas Facebook or Pinterest, an online store, or POS.\n",
    "fields": [
      {
        "name": "app",
        "description": "The app associated with the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "collectionPublicationsV3",
        "description": "The collection publications for the list of collections published to the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "collections",
        "description": "The list of collections published to the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "hasCollection",
        "description": "Whether the collection is available to the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Name of the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "productPublicationsV3",
        "description": "The product publications for the list of products published to the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "The list of products published to the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "supportsFuturePublishing",
        "description": "Whether or not this publication supports future publishing.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of CollectionEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Collection",
    "description": "Represents a collection of products.\n",
    "fields": [
      {
        "name": "availablePublicationCount",
        "description": "The number of publications a resource is published to without feedback errors.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "The stripped description of the collection, in a single line with HTML tags removed.",
        "required": false,
        "type": null
      },
      {
        "name": "descriptionHtml",
        "description": "The description of the collection, complete with HTML formatting.",
        "required": false,
        "type": null
      },
      {
        "name": "feedback",
        "description": "Information about the collection that's provided through resource feedback.",
        "required": false,
        "type": "ResourceFeedback"
      },
      {
        "name": "handle",
        "description": "A unique human-friendly string for the collection. Automatically generated from the collection's title.\n",
        "required": false,
        "type": null
      },
      {
        "name": "hasProduct",
        "description": "Whether the collection includes a product.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "image",
        "description": "The image associated with the collection.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "The products that are included in the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "productsCount",
        "description": "The number of products included in the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "publicationCount",
        "description": "The number of publications a resource is published on.",
        "required": false,
        "type": null
      },
      {
        "name": "publications",
        "description": "The channels where the collection is published.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedOnChannel",
        "description": "Check to see whether the resource is published to a given channel.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedOnCurrentChannel",
        "description": "Check to see whether the resource is published to the calling app's channel.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedOnCurrentPublication",
        "description": "Check to see whether the resource is published to the calling app's publication.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedOnPublication",
        "description": "Check to see whether the resource is published to a given publication.",
        "required": false,
        "type": null
      },
      {
        "name": "resourcePublications",
        "description": "The list of resources that are published to a publication.",
        "required": false,
        "type": null
      },
      {
        "name": "ruleSet",
        "description": "The rules used to assign products to the collection. This applies only to smart collections.\n",
        "required": false,
        "type": "CollectionRuleSet"
      },
      {
        "name": "seo",
        "description": "SEO information for the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "sortOrder",
        "description": "The order in which the collection's products are sorted.",
        "required": false,
        "type": null
      },
      {
        "name": "storefrontId",
        "description": "The storefront ID of the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "templateSuffix",
        "description": "The theme template used when viewing this collection in a store.",
        "required": false,
        "type": "String"
      },
      {
        "name": "title",
        "description": "The title of the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "unpublishedChannels",
        "description": "The list of channels that the resource is not published to.",
        "required": false,
        "type": null
      },
      {
        "name": "unpublishedPublications",
        "description": "The list of publications that the resource is not published to.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the collection was last modified.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ChannelConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ChannelEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ChannelEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PublicationConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PublicationEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of PublicationEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SEO",
    "description": "SEO information.",
    "fields": [
      {
        "name": "description",
        "description": "SEO Description.",
        "required": false,
        "type": "String"
      },
      {
        "name": "title",
        "description": "SEO Title.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "ResourceFeedback",
    "description": null,
    "fields": [
      {
        "name": "appFeedback",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "details",
        "description": "List of AppFeedback detailing issues regarding a resource.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "Summary of resource feedback pertaining to the resource.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ProductEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Product",
    "description": "Represents a product, including information about related collections and product variants.",
    "fields": [
      {
        "name": "availablePublicationCount",
        "description": "The number of publications a resource is published to without feedback errors.",
        "required": false,
        "type": null
      },
      {
        "name": "bodyHtml",
        "description": "The description of the product, complete with HTML formatting.",
        "required": false,
        "type": "String"
      },
      {
        "name": "collections",
        "description": "A list of the collections that include the product.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the product was created.\n",
        "required": false,
        "type": null
      },
      {
        "name": "defaultCursor",
        "description": "A default cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "A stripped description of the product, single line with HTML tags removed.",
        "required": false,
        "type": null
      },
      {
        "name": "descriptionHtml",
        "description": "The description of the product, complete with HTML formatting.",
        "required": false,
        "type": null
      },
      {
        "name": "descriptionPlainSummary",
        "description": "Stripped description of the product, single line with HTML tags removed.\nTruncated to 60 characters.\n",
        "required": false,
        "type": null
      },
      {
        "name": "featuredImage",
        "description": "The featured image for the product.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "feedback",
        "description": "Information about the product that's provided through resource feedback.",
        "required": false,
        "type": "ResourceFeedback"
      },
      {
        "name": "giftCardTemplateSuffix",
        "description": "The theme template used when viewing the gift card in a store.",
        "required": false,
        "type": "String"
      },
      {
        "name": "handle",
        "description": "A unique human-friendly string of the product's title.",
        "required": false,
        "type": null
      },
      {
        "name": "hasOnlyDefaultVariant",
        "description": "Whether the product has only a single variant with the default option and value.",
        "required": false,
        "type": null
      },
      {
        "name": "hasOutOfStockVariants",
        "description": "Whether the product has out of stock variants.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "images",
        "description": "The images associated with the product.",
        "required": false,
        "type": null
      },
      {
        "name": "inCollection",
        "description": "Whether the product is in a given collection.",
        "required": false,
        "type": null
      },
      {
        "name": "isGiftCard",
        "description": "Whether the product is a gift card.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "onlineStorePreviewUrl",
        "description": "The online store preview URL.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "onlineStoreUrl",
        "description": "The online store URL for the product.\nA value of `null` indicates that the product is not published to the Online Store sales channel.\n",
        "required": false,
        "type": "URL"
      },
      {
        "name": "options",
        "description": "A list of custom product options (maximum of 3 per product).",
        "required": false,
        "type": null
      },
      {
        "name": "priceRange",
        "description": "The price range of the product.",
        "required": false,
        "type": null
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "productPublications",
        "description": "A list of the channels where the product is published.",
        "required": false,
        "type": null
      },
      {
        "name": "productType",
        "description": "The product type specified by the merchant.",
        "required": false,
        "type": null
      },
      {
        "name": "publicationCount",
        "description": "The number of publications a resource is published on.",
        "required": false,
        "type": null
      },
      {
        "name": "publications",
        "description": "A list of the channels where the product is published.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedAt",
        "description": "The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the product was published to the Online Store.\n",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "publishedOnChannel",
        "description": "Check to see whether the resource is published to a given channel.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedOnCurrentChannel",
        "description": "Check to see whether the resource is published to the calling app's channel.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedOnCurrentPublication",
        "description": "Check to see whether the resource is published to the calling app's publication.",
        "required": false,
        "type": null
      },
      {
        "name": "publishedOnPublication",
        "description": "Check to see whether the resource is published to a given publication.",
        "required": false,
        "type": null
      },
      {
        "name": "resourcePublications",
        "description": "The list of resources that are published to a publication.",
        "required": false,
        "type": null
      },
      {
        "name": "seo",
        "description": "SEO information of the product.",
        "required": false,
        "type": null
      },
      {
        "name": "storefrontId",
        "description": "The storefront ID of the product.",
        "required": false,
        "type": null
      },
      {
        "name": "tags",
        "description": "A list of the tags that have been added to the product.",
        "required": false,
        "type": null
      },
      {
        "name": "templateSuffix",
        "description": "The theme template used when viewing the product in a store.",
        "required": false,
        "type": "String"
      },
      {
        "name": "title",
        "description": "The title of the product.",
        "required": false,
        "type": null
      },
      {
        "name": "totalInventory",
        "description": "The quantity of inventory in stock.",
        "required": false,
        "type": null
      },
      {
        "name": "totalVariants",
        "description": "The number of variants that are associated with the product.",
        "required": false,
        "type": null
      },
      {
        "name": "tracksInventory",
        "description": "Whether inventory tracking has been enabled for the product.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "unpublishedChannels",
        "description": "The list of channels that the resource is not published to.",
        "required": false,
        "type": null
      },
      {
        "name": "unpublishedPublications",
        "description": "The list of publications that the resource is not published to.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time ([ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601)) when the product was last modified.\n",
        "required": false,
        "type": null
      },
      {
        "name": "variants",
        "description": "A list of variants associated with the product.",
        "required": false,
        "type": null
      },
      {
        "name": "vendor",
        "description": "The name of the product's vendor.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductPriceRange",
    "description": "The price range of the product.",
    "fields": [
      {
        "name": "maxVariantPrice",
        "description": "The highest variant's price.",
        "required": false,
        "type": null
      },
      {
        "name": "minVariantPrice",
        "description": "The lowest variant's price.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MoneyV2",
    "description": "A monetary value with currency.\n\nTo format currencies, combine this type's amount and currencyCode fields with your client's locale.\n\nFor example, in JavaScript you could use Intl.NumberFormat:\n\n```js\nnew Intl.NumberFormat(locale, {\n  style: 'currency',\n  currency: currencyCode\n}).format(amount);\n```\n\nOther formatting libraries include:\n\n* iOS - [NumberFormatter](https://developer.apple.com/documentation/foundation/numberformatter)\n* Android - [NumberFormat](https://developer.android.com/reference/java/text/NumberFormat.html)\n* PHP - [NumberFormatter](http://php.net/manual/en/class.numberformatter.php)\n\nFor a more general solution, the [Unicode CLDR number formatting database] is available with many implementations\n(such as [TwitterCldr](https://github.com/twitter/twitter-cldr-rb)).\n",
    "fields": [
      {
        "name": "amount",
        "description": "Decimal money amount.",
        "required": false,
        "type": null
      },
      {
        "name": "currencyCode",
        "description": "Currency of the money.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ImageConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ImageEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ImageEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductPublicationConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductPublicationEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ProductPublicationEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductPublication",
    "description": "Represents the channels where a product is published.",
    "fields": [
      {
        "name": "channel",
        "description": "The channel where the product was or is published.",
        "required": false,
        "type": null
      },
      {
        "name": "isPublished",
        "description": "Whether the publication is published or not.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "The product that was or is going to be published on the channel.",
        "required": false,
        "type": null
      },
      {
        "name": "publishDate",
        "description": "The date that the product was or is going to be published on the channel.",
        "required": false,
        "type": "DateTime"
      }
    ]
  },
  {
    "name": "ProductOption",
    "description": "Custom product property names like \"Size\", \"Color\", and \"Material\".\nProducts are based on permutations of these options.\nA product may have a maximum of 3 options.\n255 characters limit each.\n",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The product option’s name.",
        "required": false,
        "type": null
      },
      {
        "name": "position",
        "description": "The product option's position.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "values",
        "description": "The corresponding value to the product option name.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ProductVariantEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariant",
    "description": "Represents a product variant.",
    "fields": [
      {
        "name": "availableForSale",
        "description": "Whether the product variant is available for sale.",
        "required": false,
        "type": null
      },
      {
        "name": "barcode",
        "description": "The value of the barcode associated with the product.",
        "required": false,
        "type": "String"
      },
      {
        "name": "compareAtPrice",
        "description": "The compare-at price of the variant in the default shop currency.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "createdAt",
        "description": "The date and time when the variant was created.",
        "required": false,
        "type": null
      },
      {
        "name": "defaultCursor",
        "description": "A default cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "deliveryProfile",
        "description": "The delivery profile for the variant.",
        "required": false,
        "type": "DeliveryProfile"
      },
      {
        "name": "displayName",
        "description": "Display name of the variant, based on product's title + variant's title.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentService",
        "description": "The fulfillment service associated with the product.",
        "required": false,
        "type": "FulfillmentService"
      },
      {
        "name": "fulfillmentServiceEditable",
        "description": "Whether changes to the fulfillment service for the product variant are allowed.",
        "required": false,
        "type": null
      },
      {
        "name": "harmonizedSystemCode",
        "description": "The Harmonized System Code (or HS Tariff Code) for the variant.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "image",
        "description": "The featured image for the variant.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "images",
        "description": "The featured image for the variant.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryItem",
        "description": "The ID for the inventory item, which is used to query for inventory information.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryManagement",
        "description": "The fulfillment service that tracks the number of items in stock for the product variant.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryPolicy",
        "description": "Whether customers are allowed to place an order for the product variant when it's out of stock.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryQuantity",
        "description": "The total sellable quantity of the variant.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "position",
        "description": "The order of the product variant in the list of product variants. The first position in the list is 1.\n",
        "required": false,
        "type": null
      },
      {
        "name": "presentmentPrices",
        "description": "List of prices and compare-at prices in the presentment currencies for this shop.",
        "required": false,
        "type": null
      },
      {
        "name": "price",
        "description": "The price of the product variant in the default shop currency.",
        "required": false,
        "type": null
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "The product that this variant belongs to.",
        "required": false,
        "type": null
      },
      {
        "name": "requiresShipping",
        "description": "Whether a customer needs to provide a shipping address when placing an order for the product variant.\n",
        "required": false,
        "type": null
      },
      {
        "name": "selectedOptions",
        "description": "List of product options applied to the variant.",
        "required": false,
        "type": null
      },
      {
        "name": "sku",
        "description": "An identifier for the product variant in the shop. Required in order to connect to a fulfillment service.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "storefrontId",
        "description": "The storefront ID of the product variant.",
        "required": false,
        "type": null
      },
      {
        "name": "taxCode",
        "description": "The tax code for the product variant.",
        "required": false,
        "type": "String"
      },
      {
        "name": "taxable",
        "description": "Whether a tax is charged when the product variant is sold.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the product variant.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time (ISO 8601 format) when the product variant was last modified.\n",
        "required": false,
        "type": null
      },
      {
        "name": "weight",
        "description": "The weight of the product variant in the unit system specified with weight_unit.",
        "required": false,
        "type": "Float"
      },
      {
        "name": "weightUnit",
        "description": "The unit of measurement that applies to the product variant's weight. If you don't specify a value for weight_unit, then the shop's default unit of measurement is applied. Valid values: `g`, `kg`, `oz`, `lb`.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentService",
    "description": "Represents a fulfillment service. A fulfillment service is a third-party service that prepares and ships orders on behalf of the store owner.\n",
    "fields": [
      {
        "name": "handle",
        "description": "Human-readable unique identifier for this fulfillment service.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "The ID of the fulfillment service.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryManagement",
        "description": "Whether the fulfillment service tracks product inventory and provides updates to Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "location",
        "description": "Location associated with the fulfillment service.",
        "required": false,
        "type": "Location"
      },
      {
        "name": "productBased",
        "description": "Whether the fulfillment service supports local deliveries.",
        "required": false,
        "type": null
      },
      {
        "name": "serviceName",
        "description": "The name of the fulfillment service as seen by merchants.",
        "required": false,
        "type": null
      },
      {
        "name": "shippingMethods",
        "description": "Shipping methods associated with the fulfillment service provider.",
        "required": false,
        "type": null
      },
      {
        "name": "type",
        "description": "Type associated with the fulfillment service.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShippingMethod",
    "description": "The shipping method for the delivery.",
    "fields": [
      {
        "name": "code",
        "description": "A unique code associated with the rate. For example: `expedited_mail`",
        "required": false,
        "type": null
      },
      {
        "name": "label",
        "description": "A description of the rate, which customers will see at checkout.\nFor example: `Includes tracking and insurance`.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Location",
    "description": "Represents the location where the physical good resides.\n",
    "fields": [
      {
        "name": "activatable",
        "description": "Whether this location can be reactivated.",
        "required": false,
        "type": null
      },
      {
        "name": "address",
        "description": "The LocationAddress object for location.",
        "required": false,
        "type": null
      },
      {
        "name": "addressVerified",
        "description": "Whether the location address has been verified.",
        "required": false,
        "type": null
      },
      {
        "name": "deactivatable",
        "description": "Whether this location can be deactivated.",
        "required": false,
        "type": null
      },
      {
        "name": "deactivatedAt",
        "description": "Date and time the location was deactivated (null if location is still active). Following UTC ISO8601 format, e.g.: \"2019-04-24T13:42:24Z\".",
        "required": false,
        "type": "String"
      },
      {
        "name": "deletable",
        "description": "Whether this location can be deleted.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentService",
        "description": "Name of the service provider that fulfills from this location.",
        "required": false,
        "type": "FulfillmentService"
      },
      {
        "name": "fulfillsOnlineOrders",
        "description": "Indicates whether this location can fulfill online orders.",
        "required": false,
        "type": null
      },
      {
        "name": "hasActiveInventory",
        "description": "Indicates whether or not this location has active inventory.",
        "required": false,
        "type": null
      },
      {
        "name": "hasUnfulfilledOrders",
        "description": "Indicates whether or not this location has unfulfilled orders.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryLevel",
        "description": "A single inventory level for the given inventory item.",
        "required": false,
        "type": "InventoryLevel"
      },
      {
        "name": "inventoryLevels",
        "description": "Paginated list of inventory levels for inventory items stocked at the location.",
        "required": false,
        "type": null
      },
      {
        "name": "isActive",
        "description": "Whether the location is active.",
        "required": false,
        "type": null
      },
      {
        "name": "isPrimary",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the location.",
        "required": false,
        "type": null
      },
      {
        "name": "shipsInventory",
        "description": "Indicates whether or not this location ships inventory.",
        "required": false,
        "type": null
      },
      {
        "name": "suggestedAddresses",
        "description": "List of suggested addresses for this location (empty if none).",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "LocationAddress",
    "description": "Represents the address of the location.\n",
    "fields": [
      {
        "name": "address1",
        "description": "The first line of the address for the location.",
        "required": false,
        "type": "String"
      },
      {
        "name": "address2",
        "description": "The second line of the address for the location.",
        "required": false,
        "type": "String"
      },
      {
        "name": "city",
        "description": "The city of the location.",
        "required": false,
        "type": "String"
      },
      {
        "name": "country",
        "description": "The country of the location.",
        "required": false,
        "type": "String"
      },
      {
        "name": "countryCode",
        "description": "The two-letter country code of the location.",
        "required": false,
        "type": "String"
      },
      {
        "name": "formatted",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "latitude",
        "description": "The latitude coordinates of the location.",
        "required": false,
        "type": "Float"
      },
      {
        "name": "longitude",
        "description": "The longitude coordinates of the location.",
        "required": false,
        "type": "Float"
      },
      {
        "name": "phone",
        "description": "The phone number of the location.",
        "required": false,
        "type": "String"
      },
      {
        "name": "province",
        "description": "The province of the location.",
        "required": false,
        "type": "String"
      },
      {
        "name": "provinceCode",
        "description": "The code for the region of the address, such as the province, state, or district.\nFor example QC for Quebec, Canada.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "zip",
        "description": "The ZIP code of the location.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "LocationSuggestedAddress",
    "description": "Represents a suggested address for a location.\n",
    "fields": [
      {
        "name": "address1",
        "description": "The first line of the suggested address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "address2",
        "description": "The second line of the suggested address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "city",
        "description": "The city of the suggested address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "country",
        "description": "The country of the suggested address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "countryCode",
        "description": "The country code of the suggested address.",
        "required": false,
        "type": "CountryCode"
      },
      {
        "name": "formatted",
        "description": "A formatted version of the suggested address.",
        "required": false,
        "type": null
      },
      {
        "name": "province",
        "description": "The province of the suggested address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "provinceCode",
        "description": "The province code of the suggested address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "zip",
        "description": "The ZIP code of the suggested address.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "InventoryLevelConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryLevelEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of InventoryLevelEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryLevel",
    "description": "Represents the inventory quantity of an inventory item at a specific location.\n",
    "fields": [
      {
        "name": "available",
        "description": "Quantity of items available at the location.",
        "required": false,
        "type": null
      },
      {
        "name": "canDeactivate",
        "description": "Whether inventoryDeactivate is allowed for this inventory level.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the inventory level was created.",
        "required": false,
        "type": null
      },
      {
        "name": "deactivationAlert",
        "description": "Reason why canDeactivate is false, or impact of deactivating the inventory level.",
        "required": false,
        "type": "String"
      },
      {
        "name": "deactivationAlertHtml",
        "description": "Reason why canDeactivate is false with URLs linked in HTML, or impact of deactivating the inventory level.",
        "required": false,
        "type": "FormattedString"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "incoming",
        "description": "Quantity of items incoming to the location.",
        "required": false,
        "type": null
      },
      {
        "name": "item",
        "description": "Inventory item associated with the inventory level.",
        "required": false,
        "type": null
      },
      {
        "name": "location",
        "description": "Location associated with the inventory level.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the inventory level was updated.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryItem",
    "description": "Represents the goods available to be shipped to a customer.\nIt holds essential information about the goods, including SKU and whether it is tracked.\n",
    "fields": [
      {
        "name": "countryCodeOfOrigin",
        "description": "The ISO code of the country of origin.",
        "required": false,
        "type": "CountryCode"
      },
      {
        "name": "countryHarmonizedSystemCodes",
        "description": "List of country specific harmonized system codes.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the inventory item was created.",
        "required": false,
        "type": null
      },
      {
        "name": "duplicateSkuCount",
        "description": "The number of inventory items that share the same SKU with this item.",
        "required": false,
        "type": null
      },
      {
        "name": "harmonizedSystemCode",
        "description": "The harmonized system code of the item.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryHistoryUrl",
        "description": "URL for inventory history web page.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "inventoryLevel",
        "description": "Get the inventory level at a specific location.",
        "required": false,
        "type": "InventoryLevel"
      },
      {
        "name": "inventoryLevels",
        "description": "Paginated list of inventory levels for each location that the inventory item is stocked at.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "locationsCount",
        "description": "The number of locations where this inventory item is stocked.",
        "required": false,
        "type": null
      },
      {
        "name": "provinceCodeOfOrigin",
        "description": "The ISO code of the province of origin.",
        "required": false,
        "type": "String"
      },
      {
        "name": "requiresShipping",
        "description": "Whether the item requires shipping or not.",
        "required": false,
        "type": null
      },
      {
        "name": "sku",
        "description": "Inventory item SKU.",
        "required": false,
        "type": "String"
      },
      {
        "name": "tracked",
        "description": "Whether the inventory quantities of inventory levels for the item are tracked or not.",
        "required": false,
        "type": null
      },
      {
        "name": "trackedEditable",
        "description": "Whether changes to the inventory item tracked attribute are allowed.",
        "required": false,
        "type": null
      },
      {
        "name": "unitCost",
        "description": "Unit cost associated with the inventory item.",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the inventory item was updated.",
        "required": false,
        "type": null
      },
      {
        "name": "variant",
        "description": "The variant that owns this inventory item.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "EditableProperty",
    "description": "The attribute editable information.",
    "fields": [
      {
        "name": "locked",
        "description": "Whether the attribute is locked for editing.",
        "required": false,
        "type": null
      },
      {
        "name": "reason",
        "description": "The reason the attribute is locked for editing.",
        "required": false,
        "type": "FormattedString"
      }
    ]
  },
  {
    "name": "CountryHarmonizedSystemCodeConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CountryHarmonizedSystemCodeEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of CountryHarmonizedSystemCodeEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CountryHarmonizedSystemCode",
    "description": "Holds the country specific harmonized system code and the country ISO code.\n",
    "fields": [
      {
        "name": "countryCode",
        "description": "Country ISO code.",
        "required": false,
        "type": null
      },
      {
        "name": "harmonizedSystemCode",
        "description": "Country specific harmonized system code.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SelectedOption",
    "description": "Custom properties that a shop owner can use to define product variants.\nMultiple options can exist. Options are represented as: option1, option2, option3, etc.\n",
    "fields": [
      {
        "name": "name",
        "description": "The product option’s name.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The product option’s value.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantPricePairConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantPricePairEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ProductVariantPricePairEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantPricePair",
    "description": "The compare-at price and price of a variant sharing a currency.\n",
    "fields": [
      {
        "name": "compareAtPrice",
        "description": "The compare-at price of the variant with associated currency.",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "price",
        "description": "The price of the variant with associated currency.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProfile",
    "description": "A profile for multi-location, per-product delivery.",
    "fields": [
      {
        "name": "activeMethodDefinitionsCount",
        "description": "The number of active shipping rates for the profile.",
        "required": false,
        "type": null
      },
      {
        "name": "default",
        "description": "Whether this is the default profile.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyMode",
        "description": "Whether this shop has enabled legacy compatibility mode for delivery profiles.",
        "required": false,
        "type": null
      },
      {
        "name": "locationsWithoutRatesCount",
        "description": "The number of locations without rates defined.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the delivery profile.",
        "required": false,
        "type": null
      },
      {
        "name": "originLocationCount",
        "description": "The number of active origin locations for the profile.",
        "required": false,
        "type": null
      },
      {
        "name": "productVariantsCount",
        "description": "The number of product variants for this profile. The count for the default profile is not supported and will return -1.",
        "required": false,
        "type": null
      },
      {
        "name": "profileItems",
        "description": "The products and variants associated with this profile.",
        "required": false,
        "type": null
      },
      {
        "name": "profileLocationGroups",
        "description": "The location groups and associated zones using this profile.",
        "required": false,
        "type": null
      },
      {
        "name": "unassignedLocations",
        "description": "List of locations that have not been assigned to a location group for this profile.",
        "required": false,
        "type": null
      },
      {
        "name": "zoneCountryCount",
        "description": "The number of countries with active rates to deliver to.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProfileItemConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProfileItemEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DeliveryProfileItemEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProfileItem",
    "description": "A product and the subset of associated variants that are part of this delivery profile.",
    "fields": [
      {
        "name": "product",
        "description": "A product associated with this profile.",
        "required": false,
        "type": null
      },
      {
        "name": "variants",
        "description": "The product variants associated with this delivery profile.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProfileLocationGroup",
    "description": "Links a location group with zones associated to a delivery profile.",
    "fields": [
      {
        "name": "countriesInAnyZone",
        "description": "The countries already selected in any zone for the given location group and profile.",
        "required": false,
        "type": null
      },
      {
        "name": "locationGroup",
        "description": "The location group associated to a delivery profile.",
        "required": false,
        "type": null
      },
      {
        "name": "locationGroupZones",
        "description": "The applicable zones associated to a location group and delivery profile.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryLocationGroup",
    "description": "A location group is a collection of active locations that share zone and delivery methods across delivery profiles.",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "locations",
        "description": "List of active locations that are part of this location group.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "LocationConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "LocationEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of LocationEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryLocationGroupZoneConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryLocationGroupZoneEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DeliveryLocationGroupZoneEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryLocationGroupZone",
    "description": "Links a location group and zone with the associated method definitions in a delivery profile.",
    "fields": [
      {
        "name": "methodDefinitions",
        "description": "The method definitions associated to a zone and location group in a delivery profile.",
        "required": false,
        "type": null
      },
      {
        "name": "zone",
        "description": "The zone associated to a location group in a delivery profile.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryZone",
    "description": "A zone is a geographical area that contains delivery methods within a delivery profile.",
    "fields": [
      {
        "name": "countries",
        "description": "The list of countries within the zone.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the zone.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCountry",
    "description": "A country that is used to define a zone.",
    "fields": [
      {
        "name": "code",
        "description": "The ISO 3166-1 alpha-2 country code of this country and a flag indicating Rest Of World.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the country.",
        "required": false,
        "type": null
      },
      {
        "name": "provinces",
        "description": "The regions associated with this country.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCountryCodeOrRestOfWorld",
    "description": "The ISO 3166-1 alpha-2 country code and a flag indicating Rest Of World.",
    "fields": [
      {
        "name": "countryCode",
        "description": "The country code.",
        "required": false,
        "type": "CountryCode"
      },
      {
        "name": "restOfWorld",
        "description": "Indicates if 'Rest of World' is applied.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProvince",
    "description": "A region that is used to define a zone.",
    "fields": [
      {
        "name": "code",
        "description": "The code of this region.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the region.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryMethodDefinitionConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryMethodDefinitionEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DeliveryMethodDefinitionEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryMethodDefinition",
    "description": "A method definition describes the delivery rate and the conditions that must be met for the method to be applied.",
    "fields": [
      {
        "name": "active",
        "description": "Whether this method definition is active.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "The description of the method definition.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "methodConditions",
        "description": "The method conditions that must pass for this method definition to be applied to an order.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the method definition.",
        "required": false,
        "type": null
      },
      {
        "name": "rateProvider",
        "description": "Provided rate for this method definition, from a rate definition or participant.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryRateDefinition",
    "description": "The merchant-defined rate of the DeliveryMethodDefinition.",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "price",
        "description": "The price of this rate.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryParticipant",
    "description": "A carrier-defined rate with possible merchant-defined fixed fee or percentage-of-rate fee.",
    "fields": [
      {
        "name": "adaptToNewServicesFlag",
        "description": "Flag to indicate if new available services should be included.",
        "required": false,
        "type": null
      },
      {
        "name": "carrierService",
        "description": "Use this carrier service for this participant.",
        "required": false,
        "type": null
      },
      {
        "name": "fixedFee",
        "description": "The merchant-set fixed fee for this participant.",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "participantServices",
        "description": "Services offered by the participant and their active status.",
        "required": false,
        "type": null
      },
      {
        "name": "percentageOfRateFee",
        "description": "The merchant-set percentage-of-rate fee for this participant.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCarrierService",
    "description": "Information about a carrier or service provider.",
    "fields": [
      {
        "name": "availableServicesForCountries",
        "description": "Services offered for given destinations.",
        "required": false,
        "type": null
      },
      {
        "name": "formattedName",
        "description": "The properly formatted name of the service provider, ready to display.",
        "required": false,
        "type": "String"
      },
      {
        "name": "icon",
        "description": "The logo of the service provider.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the service provider.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "DeliveryAvailableService",
    "description": "The service and the countries they are available for.",
    "fields": [
      {
        "name": "countries",
        "description": "The countries the service provider ships to.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the service.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCountryCodesOrRestOfWorld",
    "description": "A list of ISO 3166-1 alpha-2 country codes or the 'Rest of World'.",
    "fields": [
      {
        "name": "countryCodes",
        "description": "List of applicable country codes.",
        "required": false,
        "type": null
      },
      {
        "name": "restOfWorld",
        "description": "Indicates if 'Rest of World' is applied.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryParticipantService",
    "description": "A service provided by a participant.",
    "fields": [
      {
        "name": "active",
        "description": "If the service is active or not.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Name of the service.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCondition",
    "description": "A condition that must pass for a method definition to be applied to an order.",
    "fields": [
      {
        "name": "conditionCriteria",
        "description": "The criteria (weight or price) that the field must meet based on the operator.",
        "required": false,
        "type": null
      },
      {
        "name": "field",
        "description": "The field to compare the criteria unit against, using the operator.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "operator",
        "description": "The operator to compare the field and criteria.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Weight",
    "description": "Represents weight unit and value.",
    "fields": [
      {
        "name": "unit",
        "description": "Unit of measurement for `value`.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The weight using the unit system specified with `unit`.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCountryAndZone",
    "description": "A country with the name of the zone.",
    "fields": [
      {
        "name": "country",
        "description": "The country in the delivery zone.",
        "required": false,
        "type": null
      },
      {
        "name": "zone",
        "description": "The name of the delivery zone.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionPublicationConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionPublicationEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of CollectionPublicationEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionPublication",
    "description": "Represents the publications where a collection is published.",
    "fields": [
      {
        "name": "channel",
        "description": "The channel where the collection will be published.",
        "required": false,
        "type": null
      },
      {
        "name": "collection",
        "description": "The collection to be published on the publication.",
        "required": false,
        "type": null
      },
      {
        "name": "isPublished",
        "description": "Whether the publication is published or not.",
        "required": false,
        "type": null
      },
      {
        "name": "publication",
        "description": "The publication where the collection will be published.",
        "required": false,
        "type": null
      },
      {
        "name": "publishDate",
        "description": "The date that the publication was or is going to be published.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionRuleSet",
    "description": "The set of rules that are used to determine which products are included in the collection.",
    "fields": [
      {
        "name": "appliedDisjunctively",
        "description": "Whether products must match any or all of the rules to be included in the collection.\nIf true, then products must match one or more of the rules to be included in the collection.\nIf false, then products must match all of the rules to be included in the collection.\n",
        "required": false,
        "type": null
      },
      {
        "name": "rules",
        "description": "The rules used to assign products to the collection.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionRule",
    "description": "Represents at rule that's used to assign products to a collection.",
    "fields": [
      {
        "name": "column",
        "description": "The attribute that the rule focuses on (for example, `title` or `product_type`).",
        "required": false,
        "type": null
      },
      {
        "name": "condition",
        "description": "The value that the operator is applied to (for example, `Hats`).",
        "required": false,
        "type": null
      },
      {
        "name": "relation",
        "description": "The type of operator that the rule is based on (for example, `equals`, `contains`, or `not_equals`).\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "NavigationItemV2",
    "description": "A navigation item, holding basic link attributes, extra configuration, and nested navigation items.",
    "fields": [
      {
        "name": "children",
        "description": "Sub-navigation items for this navigation.",
        "required": false,
        "type": null
      },
      {
        "name": "disabled",
        "description": "Flag that indicates if the navigation is disabled or not.",
        "required": false,
        "type": null
      },
      {
        "name": "excludePaths",
        "description": "Extra paths that should be used to not highlight the navigation as selected.",
        "required": false,
        "type": null
      },
      {
        "name": "hasStorefrontLink",
        "description": "Flag indicating that the store front link must be shown within this navigation.",
        "required": false,
        "type": null
      },
      {
        "name": "iconBody",
        "description": "The SVG icon body to be displayed as the navigation's icon.",
        "required": false,
        "type": null
      },
      {
        "name": "label",
        "description": "The navigation's label to be displayed.",
        "required": false,
        "type": null
      },
      {
        "name": "matchExactPath",
        "description": "Flag indicating that an exact match of the path is required to highlight the navigation.",
        "required": false,
        "type": null
      },
      {
        "name": "matchPaths",
        "description": "Extra paths that should be used to highlight the navigation as selected.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "The URL that the navigation points to.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppSubscription",
    "description": "Provides users access to services and/or features for a duration of time.",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the app subscription was created.",
        "required": false,
        "type": null
      },
      {
        "name": "currentPeriodEnd",
        "description": "The date and time when the current app subscription period ends.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "lineItems",
        "description": "Attaches a plan to an app subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the app subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "returnUrl",
        "description": "The URL where the merchant is redirected after approving the app subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the app subscription. Possible values include pending, active, declined,\n         expired, frozen, and cancelled.",
        "required": false,
        "type": null
      },
      {
        "name": "test",
        "description": "Specifies whether the app subscription is a test transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "trialDays",
        "description": "The number of days of the free trial.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppSubscriptionLineItem",
    "description": "Attaches a plan to an app subscription.",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "plan",
        "description": "Defines the pricing model for the app subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "usageRecords",
        "description": "Lists the store's usage for a usage pricing plan.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppPlanV2",
    "description": "Defines the app plan the merchant is subscribed to.",
    "fields": [
      {
        "name": "pricingDetails",
        "description": "Defines the pricing model for the app subscription.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppUsagePricing",
    "description": "Defines the usage pricing model for the app subscription.",
    "fields": [
      {
        "name": "balanceUsed",
        "description": "The total usage records for interval.",
        "required": false,
        "type": null
      },
      {
        "name": "cappedAmount",
        "description": "The limit a store can be charged for usage based pricing.",
        "required": false,
        "type": null
      },
      {
        "name": "interval",
        "description": "Specifies the interval which usage records are applied.",
        "required": false,
        "type": null
      },
      {
        "name": "terms",
        "description": "The terms and conditions for app usage pricing.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppRecurringPricing",
    "description": "Price charged every interval.",
    "fields": [
      {
        "name": "interval",
        "description": "Specifies the number of days in a billing cycle of the app subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "price",
        "description": "The amount to be charged to the store every billing interval.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppUsageRecordConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppUsageRecordEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of AppUsageRecordEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppUsageRecord",
    "description": "Store usage for app subscriptions with usage pricing.",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the usage record was created.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "The description of the app usage record.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "price",
        "description": "The price of the usage record. The only permitted currency code is USD.",
        "required": false,
        "type": null
      },
      {
        "name": "subscriptionLineItem",
        "description": "Defines the usage pricing plan the merchant is subscribed to.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppPurchaseOneTimeConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppPurchaseOneTimeEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of AppPurchaseOneTimeEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppPurchaseOneTime",
    "description": "Services and features purchased once by a store.",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the app purchase was created.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of the app purchase.",
        "required": false,
        "type": null
      },
      {
        "name": "price",
        "description": "The amount to be charged to the store for the app purchase.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the app purchase. Possible values include pending, active, declined and cancelled.",
        "required": false,
        "type": null
      },
      {
        "name": "test",
        "description": "Whether the app purchase is a test transaction.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppCreditConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppCreditEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of AppCreditEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppCredit",
    "description": "App credits can be applied by the merchant towards future app purchases, subscriptions, or usage records in Shopify.",
    "fields": [
      {
        "name": "amount",
        "description": "The amount that can be used towards future app purchases in Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the app credit was created.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "The description of the app credit.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "test",
        "description": "Whether the app credit is a test transaction.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppSubscriptionConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppSubscriptionEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of AppSubscriptionEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MoneyBag",
    "description": "A collection of monetary values in their respective currencies.\n",
    "fields": [
      {
        "name": "presentmentMoney",
        "description": "Amount in presentment currency.",
        "required": false,
        "type": null
      },
      {
        "name": "shopMoney",
        "description": "Amount in shop currency.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Attribute",
    "description": "Represents a generic custom attribute.",
    "fields": [
      {
        "name": "key",
        "description": "Key or name of the attribute.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "Value of the attribute.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "Customer",
    "description": "Represents information about a customer of the shop, such as the customer's contact details, their order\nhistory, and whether they've agreed to receive email marketing.\n",
    "fields": [
      {
        "name": "acceptsMarketing",
        "description": "Whether the customer has agreed to receive marketing materials.",
        "required": false,
        "type": null
      },
      {
        "name": "acceptsMarketingUpdatedAt",
        "description": "The date and time when the customer consented or objected to receiving marketing material by email.\n",
        "required": false,
        "type": null
      },
      {
        "name": "addresses",
        "description": "A list of addresses associated with the customer.",
        "required": false,
        "type": null
      },
      {
        "name": "averageOrderAmount",
        "description": "The average amount that the customer spent per order.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "averageOrderAmountV2",
        "description": "The average amount that the customer spent per order.",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "canDelete",
        "description": "Whether the merchant can delete the customer from their store.\n\nA customer can be deleted from a store only if they have not yet made an order. After a customer makes an\norder, they can't be deleted from a store.\n",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the customer was added to the store.",
        "required": false,
        "type": null
      },
      {
        "name": "defaultAddress",
        "description": "The default address associated with the customer.",
        "required": false,
        "type": "MailingAddress"
      },
      {
        "name": "displayName",
        "description": "The full name of the customer, based on the values for first_name and last_name.\n",
        "required": false,
        "type": null
      },
      {
        "name": "email",
        "description": "The customer's email address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "events",
        "description": "A list of events associated with the customer.",
        "required": false,
        "type": null
      },
      {
        "name": "firstName",
        "description": "The customer's first name.",
        "required": false,
        "type": "String"
      },
      {
        "name": "hasNote",
        "description": "Whether the customer has a note associated with them.",
        "required": false,
        "type": null
      },
      {
        "name": "hasTimelineComment",
        "description": "Whether the merchant has added timeline comments about the customer on the customer's page.\n",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "image",
        "description": "The image associated with the customer.",
        "required": false,
        "type": null
      },
      {
        "name": "lastName",
        "description": "The customer's last name.",
        "required": false,
        "type": "String"
      },
      {
        "name": "lastOrder",
        "description": "The customer's last order.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "lifetimeDuration",
        "description": "The amount of time since the customer was first added to the store.\n\nExample: 'about 12 years'.\n",
        "required": false,
        "type": null
      },
      {
        "name": "marketingOptInLevel",
        "description": "The marketing subscription opt-in level (as described by the M3AAWG best practices guideline) that the\ncustomer gave when they consented to receive marketing material by email.\n\nIf the customer does not accept email marketing, then this property will be null.\n",
        "required": false,
        "type": "CustomerMarketingOptInLevel"
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "note",
        "description": "A note about the customer.",
        "required": false,
        "type": "String"
      },
      {
        "name": "orders",
        "description": "A list of the customer's orders.",
        "required": false,
        "type": null
      },
      {
        "name": "ordersCount",
        "description": "The number of orders that the customer has made at the store in their lifetime.\n",
        "required": false,
        "type": null
      },
      {
        "name": "phone",
        "description": "The customer's phone number.",
        "required": false,
        "type": "String"
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "state",
        "description": "The state of the customer's account with the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "tags",
        "description": "A list of tags assigned to the customer.",
        "required": false,
        "type": null
      },
      {
        "name": "taxExempt",
        "description": "Whether the customer is exempt from being charged taxes on their orders.",
        "required": false,
        "type": null
      },
      {
        "name": "taxExemptions",
        "description": "The list of tax exemptions applied to the customer.",
        "required": false,
        "type": null
      },
      {
        "name": "totalSpent",
        "description": "The total amount that the customer has spent on orders in their lifetime.",
        "required": false,
        "type": null
      },
      {
        "name": "totalSpentV2",
        "description": "The total amount that the customer has spent on orders in their lifetime.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the customer was last updated.",
        "required": false,
        "type": null
      },
      {
        "name": "validEmailAddress",
        "description": "Whether the email address is formatted correctly. This does not\nguarantee that the email address actually exists.\n",
        "required": false,
        "type": null
      },
      {
        "name": "verifiedEmail",
        "description": "Whether the customer has verified their email address.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "EventConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "EventEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of EventEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of OrderEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Order",
    "description": "An order represents an agreement to do business between a customer and a merchant.",
    "fields": [
      {
        "name": "alerts",
        "description": "Generated messages that appear at the top of an order page in the Shopify admin.\nFor example, _this is a test order_.\n",
        "required": false,
        "type": null
      },
      {
        "name": "billingAddress",
        "description": "Mailing address provided by the customer.\nNot all orders have mailing addresses.\n",
        "required": false,
        "type": "MailingAddress"
      },
      {
        "name": "billingAddressMatchesShippingAddress",
        "description": "Whether the billing address matches the shipping address.",
        "required": false,
        "type": null
      },
      {
        "name": "canMarkAsPaid",
        "description": "Whether the order can be manually marked as paid.",
        "required": false,
        "type": null
      },
      {
        "name": "canNotifyCustomer",
        "description": "Whether notifications can be sent to the customer or not.",
        "required": false,
        "type": null
      },
      {
        "name": "cancelReason",
        "description": "Reason the order was canceled.\nReturns null if the order wasn't canceled.\n",
        "required": false,
        "type": "OrderCancelReason"
      },
      {
        "name": "cancelledAt",
        "description": "Date and time when the order was canceled.\nReturns null if the order wasn't canceled.\n",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "capturable",
        "description": "Whether payment for the order can be captured.\nReturns true when the customer's credit card has been authorized for payment and the authorization period has not expired.\n",
        "required": false,
        "type": null
      },
      {
        "name": "cartDiscountAmount",
        "description": "Amount of the order-level discount (does not contain any line item discounts).",
        "required": false,
        "type": "Money"
      },
      {
        "name": "cartDiscountAmountSet",
        "description": "Amount of the order-level discount (does not contain any line item discounts) in shop and presentment currencies.",
        "required": false,
        "type": "MoneyBag"
      },
      {
        "name": "channel",
        "description": "Channel that created the order.",
        "required": false,
        "type": "Channel"
      },
      {
        "name": "clientIp",
        "description": "The ip address of the client that is associated with this order.",
        "required": false,
        "type": "String"
      },
      {
        "name": "closed",
        "description": "Whether the order is closed.",
        "required": false,
        "type": null
      },
      {
        "name": "closedAt",
        "description": "Date and time when the order closed.\nIf the order is not closed, then this field is null.\n",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "confirmed",
        "description": "Whether inventory has been reserved for the order.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "Date and time when the order was created in Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "currencyCode",
        "description": "The currency of the store at the time of the order.\nIf payment hasn't occurred, then this field is null.\n",
        "required": false,
        "type": null
      },
      {
        "name": "customAttributes",
        "description": "Custom information added to the order by your customer\n(Also referred to as note attributes).\n",
        "required": false,
        "type": null
      },
      {
        "name": "customer",
        "description": "Unique identifier of the customer who placed the order.\nNot all orders have customers associated with them.\n",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "customerAcceptsMarketing",
        "description": "Whether the customer agreed to receive marketing materials.",
        "required": false,
        "type": null
      },
      {
        "name": "customerJourney",
        "description": "Description of the customer's experience with the store leading up to the order.\n",
        "required": false,
        "type": "CustomerJourney"
      },
      {
        "name": "customerLocale",
        "description": "A two-letter or three-letter language code, optionally followed by a region modifier.\nExample values could be 'en', 'en-CA', 'en-PIRATE'.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "discountApplications",
        "description": "Discounts that have been applied on the order.",
        "required": false,
        "type": null
      },
      {
        "name": "discountCode",
        "description": "Discount code provided by the customer.",
        "required": false,
        "type": "String"
      },
      {
        "name": "displayAddress",
        "description": "Primary address of the customer, which is shown on the order.",
        "required": false,
        "type": "MailingAddress"
      },
      {
        "name": "displayFinancialStatus",
        "description": "Financial status of the order that can be shown to the merchant.\nThis field does not capture all the possible details of an order's financial state and should only be used for display summary purposes.\n",
        "required": false,
        "type": "OrderDisplayFinancialStatus"
      },
      {
        "name": "displayFulfillmentStatus",
        "description": "Fulfillment status for the order that can be shown to the merchant.\nThis field does not capture all the possible details of an order's fulfillment state. It should only be used for display summary purposes.\n",
        "required": false,
        "type": null
      },
      {
        "name": "disputes",
        "description": "Summary of each dispute associated with the order. Sorted in ascending (ASC) order by ID.",
        "required": false,
        "type": null
      },
      {
        "name": "draftFulfillments",
        "description": "List of possible fulfilments that can be made for the order (includes line items that can be partially fulfilled).\n",
        "required": false,
        "type": null
      },
      {
        "name": "email",
        "description": "Email address provided by the customer.",
        "required": false,
        "type": "String"
      },
      {
        "name": "events",
        "description": "List of internal events associated with the order.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillable",
        "description": "Whether there are items that can be fulfilled.\nAfter an order is completely fulfilled (or completely refunded without any fulfillments) then this field returns false.\n",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillments",
        "description": "List of shipments for the order.",
        "required": false,
        "type": null
      },
      {
        "name": "fullyPaid",
        "description": "Whether the order has been paid in full.",
        "required": false,
        "type": null
      },
      {
        "name": "hasTimelineComment",
        "description": "Whether the merchant added timeline comments to the order.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "landingPageDisplayText",
        "description": "First page of the online store that the customer visited before they submitted the order, for displaying to humans.",
        "required": false,
        "type": "String"
      },
      {
        "name": "landingPageUrl",
        "description": "First page of the online store that the customer visited before they submitted the order.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "lineItems",
        "description": "List of the order's line items.",
        "required": false,
        "type": null
      },
      {
        "name": "location",
        "description": "If the order was processed using Shopify POS, then this is its location as provided by the merchant.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "merchantEditable",
        "description": "Whether the order can be edited or not.",
        "required": false,
        "type": null
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Unique identifier for the order that appears on the order.\nFor example, _#1000_ or _Store1001.\nThis value is not unique across multiple stores.\n",
        "required": false,
        "type": null
      },
      {
        "name": "netPayment",
        "description": "Net payment for the order, based on the total amount received - total amount refunded.\n",
        "required": false,
        "type": null
      },
      {
        "name": "netPaymentSet",
        "description": "Net payment for the order, based on the total amount received - total amount refunded in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "nonFulfillableLineItems",
        "description": "Line items that can't be fulfilled.\nFor example, because some or all of the items have been refunded, or the item is not one which can be fulfilled, such as a tip.\nThese line items would be 'lost' if you only considered the line items in draft fulfillments or fulfillments.\n",
        "required": false,
        "type": null
      },
      {
        "name": "note",
        "description": "Contents of the note associated with the order.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "paymentGatewayNames",
        "description": "List of all payment gateways used for the order.\nFor example, _authorize_net_ and _Cash on Delivery (COD)_.\n",
        "required": false,
        "type": null
      },
      {
        "name": "phone",
        "description": "Phone number provided by the customer.",
        "required": false,
        "type": "String"
      },
      {
        "name": "physicalLocation",
        "description": "If the order was processed using Shopify POS, then this is its location as provided by the merchant.\n",
        "required": false,
        "type": "Location"
      },
      {
        "name": "presentmentCurrencyCode",
        "description": "The payment currency of the customer for this order.",
        "required": false,
        "type": null
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "processedAt",
        "description": "Date and time when the order was processed.\nWhen orders are imported from an app, this date and time may not match the date and time when the order was created.\n",
        "required": false,
        "type": null
      },
      {
        "name": "publication",
        "description": "Publication that created the order.",
        "required": false,
        "type": "Publication"
      },
      {
        "name": "referralCode",
        "description": "Marketing referral code from the link that the customer clicked to visit your store.\nSupports the following URL attributes: _ref_, _source_, or _r_. For example, if the URL is myshopifystore.com/products/slide?ref=j2tj1tn2, then this value is j2tj1tn2.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "referrerDisplayText",
        "description": "Website that sent the customer to your online store.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "referrerUrl",
        "description": "Webpage where the customer clicked a link that sent them to your online store.\nFor example, _Google_ or _randomblog.com/page1_.\n",
        "required": false,
        "type": "URL"
      },
      {
        "name": "refundable",
        "description": "Whether the order can be refunded.\n",
        "required": false,
        "type": null
      },
      {
        "name": "refunds",
        "description": "List of refunds that have been applied to the order.\n",
        "required": false,
        "type": null
      },
      {
        "name": "requiresShipping",
        "description": "Whether any line item in the order requires physical shipping.\n",
        "required": false,
        "type": null
      },
      {
        "name": "restockable",
        "description": "Whether the order can be restocked.\n",
        "required": false,
        "type": null
      },
      {
        "name": "riskLevel",
        "description": "Fraud risk level of the order.",
        "required": false,
        "type": null
      },
      {
        "name": "risks",
        "description": "The order risks associated with this order.",
        "required": false,
        "type": null
      },
      {
        "name": "shippingAddress",
        "description": "Mailing address for shipping provided by the customer.",
        "required": false,
        "type": "MailingAddress"
      },
      {
        "name": "shippingLine",
        "description": "Line item that contains the shipping costs.",
        "required": false,
        "type": "ShippingLine"
      },
      {
        "name": "subtotalLineItemsQuantity",
        "description": "The sum of the quantities for the line items that contribute to the order's subtotal.",
        "required": false,
        "type": null
      },
      {
        "name": "subtotalPrice",
        "description": "Subtotal of the line items and their discounts (does not contain shipping costs, shipping discounts, and order-level discounts).\n",
        "required": false,
        "type": "Money"
      },
      {
        "name": "subtotalPriceSet",
        "description": "Subtotal of the line items and their discounts (does not contain shipping costs, shipping discounts, and order-level discounts) in shop and presentment currencies.",
        "required": false,
        "type": "MoneyBag"
      },
      {
        "name": "suggestedRefund",
        "description": "The details of the suggested refund. This response can be used to submit a RefundCreate mutation.",
        "required": false,
        "type": "SuggestedRefund"
      },
      {
        "name": "tags",
        "description": "List of tags.",
        "required": false,
        "type": null
      },
      {
        "name": "taxLines",
        "description": "Taxes charged for the line item.",
        "required": false,
        "type": null
      },
      {
        "name": "taxesIncluded",
        "description": "Whether taxes are included in the subtotal price of the order.",
        "required": false,
        "type": null
      },
      {
        "name": "test",
        "description": "Whether the order is a test.\nTest orders are made using the Shopify Bogus Gateway or the Shopify Payments test mode.\n",
        "required": false,
        "type": null
      },
      {
        "name": "totalCapturable",
        "description": "Amount authorized for the order, that is uncaptured or undercaptured.",
        "required": false,
        "type": null
      },
      {
        "name": "totalCapturableSet",
        "description": "Amount authorized for the order, that is uncaptured or undercaptured in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalDiscounts",
        "description": "Total amount discounted from the order (includes order-level and line item discounts).",
        "required": false,
        "type": "Money"
      },
      {
        "name": "totalDiscountsSet",
        "description": "Total amount discounted from the order (includes order-level and line item discounts) in shop and presentment currencies.",
        "required": false,
        "type": "MoneyBag"
      },
      {
        "name": "totalPrice",
        "description": "Total amount of the order (includes taxes and discounts).",
        "required": false,
        "type": null
      },
      {
        "name": "totalPriceSet",
        "description": "Total amount of the order (includes taxes and discounts) in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalReceived",
        "description": "Total amount received by the customer for the order.",
        "required": false,
        "type": null
      },
      {
        "name": "totalReceivedSet",
        "description": "Total amount received by the customer for the order in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalRefunded",
        "description": "Total amount refunded for the order.",
        "required": false,
        "type": null
      },
      {
        "name": "totalRefundedSet",
        "description": "Total amount refunded for the order in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalRefundedShippingSet",
        "description": "Total amount refunded for shipping in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalShippingPrice",
        "description": "Total amount charged for shipping the order.",
        "required": false,
        "type": null
      },
      {
        "name": "totalShippingPriceSet",
        "description": "Total amount charged for shipping the order in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalTax",
        "description": "Total of all taxes applied to the order.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "totalTaxSet",
        "description": "Total of all taxes applied to the order in shop and presentment currencies.",
        "required": false,
        "type": "MoneyBag"
      },
      {
        "name": "totalWeight",
        "description": "Total weight (grams) of the order.",
        "required": false,
        "type": "UnsignedInt64"
      },
      {
        "name": "transactions",
        "description": "List of all transactions associated with the order.",
        "required": false,
        "type": null
      },
      {
        "name": "unpaid",
        "description": "Whether no payments have been made for the order.\nIf no payments have been made for the order, then this returns true.\n",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "Date and time when the order was last modified.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ResourceAlert",
    "description": "Presents information or problems to merchants, with 1 or more actions that they can take.\nThey can optionally have a specific icon and be dismissed by merchants.\n",
    "fields": [
      {
        "name": "actions",
        "description": "Buttons in the alert that link to related information.\nFor example, _View risk assessment_.\n",
        "required": false,
        "type": null
      },
      {
        "name": "content",
        "description": "Details about the alert.",
        "required": false,
        "type": null
      },
      {
        "name": "dismissibleHandle",
        "description": "Unique identifier that appears when an alert is manually closed by the merchant.\nMost alerts cannot be manually closed.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "icon",
        "description": "Icon that displays with the alert.",
        "required": false,
        "type": "ResourceAlertIcon"
      },
      {
        "name": "severity",
        "description": "Indication of how important the alert is.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The name of the alert.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ResourceAlertAction",
    "description": "An action associated to a resource alert.",
    "fields": [
      {
        "name": "primary",
        "description": "Whether the action is primary or not.",
        "required": false,
        "type": null
      },
      {
        "name": "show",
        "description": "Resource for the action to show.",
        "required": false,
        "type": "String"
      },
      {
        "name": "title",
        "description": "Action title.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "Action target URL.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MailingAddress",
    "description": "Represents a customer mailing address.\n\nFor example, a customer's default address and an order's billing address are both mailling addresses.\n",
    "fields": [
      {
        "name": "address1",
        "description": "The first line of the address. Typically the street address or PO Box number.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "address2",
        "description": "The second line of the address. Typically the number of the apartment, suite, or unit.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "city",
        "description": "The name of the city, district, village, or town.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "company",
        "description": "The name of the customer's company or organization.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "country",
        "description": "The name of the country.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "countryCode",
        "description": "The two-letter code for the country of the address.\n\nFor example, US.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "countryCodeV2",
        "description": "The two-letter code for the country of the address.\n\nFor example, US.\n",
        "required": false,
        "type": "CountryCode"
      },
      {
        "name": "firstName",
        "description": "The first name of the customer.",
        "required": false,
        "type": "String"
      },
      {
        "name": "formatted",
        "description": "A formatted version of the address, customized by the provided arguments.",
        "required": false,
        "type": null
      },
      {
        "name": "formattedArea",
        "description": "A comma-separated list of the values for city, province, and country.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "lastName",
        "description": "The last name of the customer.",
        "required": false,
        "type": "String"
      },
      {
        "name": "latitude",
        "description": "The latitude coordinate of the customer address.",
        "required": false,
        "type": "Float"
      },
      {
        "name": "longitude",
        "description": "The longitude coordinate of the customer address.",
        "required": false,
        "type": "Float"
      },
      {
        "name": "name",
        "description": "The full name of the customer, based on firstName and lastName.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "phone",
        "description": "A unique phone number for the customer.\n\nFormatted using E.164 standard. For example, _+16135551111_.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "province",
        "description": "The region of the address, such as the province, state, or district.",
        "required": false,
        "type": "String"
      },
      {
        "name": "provinceCode",
        "description": "The two-letter code for the region.\n\nFor example, ON.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "zip",
        "description": "The zip or postal code of the address.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "CustomerJourney",
    "description": "Represents a customer's activity on a shop's online store.",
    "fields": [
      {
        "name": "customerOrderIndex",
        "description": "The position of the current order within the customer's order history.",
        "required": false,
        "type": null
      },
      {
        "name": "daysToConversion",
        "description": "The amount of days between first session and order creation date. First session represents first session since the last order, or first session within the 30 day attribution window, if more than 30 days has passed since the last order.",
        "required": false,
        "type": null
      },
      {
        "name": "firstVisit",
        "description": "The customer's first session going into the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "lastVisit",
        "description": "The last session before an order is made.",
        "required": false,
        "type": "CustomerVisit"
      },
      {
        "name": "moments",
        "description": "Events preceding a customer order, such as shop sessions.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerVisit",
    "description": "Information about a customer's session on a shop's online store.",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "landingPage",
        "description": "URL of the first page the customer landed on for the session.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "landingPageHtml",
        "description": "Landing page information with URL linked in HTML. For example, the first page the customer visited was store.myshopify.com/products/1.",
        "required": false,
        "type": "HTML"
      },
      {
        "name": "marketingEvent",
        "description": "Represent actions taken by an app, on behalf of a merchant,\nto market Shopify resources such as products, collections, and discounts.\n",
        "required": false,
        "type": "MarketingEvent"
      },
      {
        "name": "occurredAt",
        "description": "When the customer moment occurred.",
        "required": false,
        "type": null
      },
      {
        "name": "referralCode",
        "description": "Marketing referral code from the link that the customer clicked to visit the store.\nSupports the following URL attributes: _ref_, _source_, or _r_.\nFor example, if the URL is myshopifystore.com/products/slide?ref=j2tj1tn2, then this value is j2tj1tn2.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "referralInfoHtml",
        "description": "Referral information with URLs linked in HTML.",
        "required": false,
        "type": null
      },
      {
        "name": "referrerUrl",
        "description": "Webpage where the customer clicked a link that sent them to the online store.\nFor example, _https://randomblog.com/page1_ or _android-app://com.google.android.gm_.\n",
        "required": false,
        "type": "URL"
      },
      {
        "name": "source",
        "description": "Source from which the customer visited the store, such as a platform (Facebook, Google), email, direct,\na website domain, QR code, or unknown.\n",
        "required": false,
        "type": null
      },
      {
        "name": "sourceDescription",
        "description": "Describes the source explicitly for first or last session.",
        "required": false,
        "type": "String"
      },
      {
        "name": "sourceType",
        "description": "Type of marketing tactic.",
        "required": false,
        "type": "MarketingTactic"
      },
      {
        "name": "utmParameters",
        "description": "A set of UTM parameters gathered from the URL parameters of the referrer.",
        "required": false,
        "type": "UTMParameters"
      }
    ]
  },
  {
    "name": "MarketingEvent",
    "description": "Represents actions that market a merchant's store or products.",
    "fields": [
      {
        "name": "app",
        "description": "The app that the marketing event is attributed to.",
        "required": false,
        "type": null
      },
      {
        "name": "channel",
        "description": "The marketing channel used by the marketing event.",
        "required": false,
        "type": "MarketingChannel"
      },
      {
        "name": "description",
        "description": "A human-readable description of the marketing event.",
        "required": false,
        "type": "String"
      },
      {
        "name": "endedAt",
        "description": "The date and time when the marketing event ended.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "manageUrl",
        "description": "The URL where the marketing event can be managed.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "previewUrl",
        "description": "The URL where the marketing event can be previewed.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "remoteId",
        "description": "An optional ID that helps Shopify validate engagement data.",
        "required": false,
        "type": "String"
      },
      {
        "name": "scheduledToEndAt",
        "description": "The date and time when the marketing event is scheduled to end.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "sourceAndMedium",
        "description": "Where the `MarketingEvent` occurred and what kind of content was used.\nBecause `utmSource` and `utmMedium` are often used interchangeably, this is\nbased on a combination of `marketingChannel`, `referringDomain`, and `type` to\nprovide a consistent representation for any given piece of marketing\nregardless of the app that created it.\n",
        "required": false,
        "type": null
      },
      {
        "name": "startedAt",
        "description": "The date and time when the marketing event started.",
        "required": false,
        "type": null
      },
      {
        "name": "targetTypeDisplayText",
        "description": "The display text for the marketing event type.",
        "required": false,
        "type": null
      },
      {
        "name": "type",
        "description": "The marketing event type.",
        "required": false,
        "type": null
      },
      {
        "name": "utmCampaign",
        "description": "The name of the marketing campaign.",
        "required": false,
        "type": "String"
      },
      {
        "name": "utmMedium",
        "description": "The medium that the marketing campaign is using. Example values: `cpc`, `banner`.",
        "required": false,
        "type": "String"
      },
      {
        "name": "utmSource",
        "description": "The referrer of the marketing event. Example values: `google`, `newsletter`.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "UTMParameters",
    "description": null,
    "fields": [
      {
        "name": "campaign",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "content",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "medium",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "source",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "term",
        "description": null,
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "DiscountApplicationConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountApplicationEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DiscountApplicationEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PricingPercentageValue",
    "description": "The value of the percentage pricing object.",
    "fields": [
      {
        "name": "percentage",
        "description": "The percentage value of the object.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderDisputeSummary",
    "description": "A summary of the important details for a dispute on an order.",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "initiatedAs",
        "description": "The type that the dispute was initiated as.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The current status of the dispute.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftFulfillment",
    "description": "Returns unfulfilled line items grouped by their fulfillment service. Each draft fulfillment contains additional information, such as whether the fulfillment requires shipping and whether a shipping label can be printed for it.\n",
    "fields": [
      {
        "name": "allowLabelPurchase",
        "description": "Whether a label can be purchased.",
        "required": false,
        "type": null
      },
      {
        "name": "lineItems",
        "description": "The line items (which might correspond to a variant) that are part of this draft fulfillment.",
        "required": false,
        "type": null
      },
      {
        "name": "requiresShipping",
        "description": "Whether a fulfillment requires shipping.",
        "required": false,
        "type": null
      },
      {
        "name": "service",
        "description": "The service responsible for fulfilling the fulfillment.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "LineItem",
    "description": "Represents a single line in a shopping cart.",
    "fields": [
      {
        "name": "canRestock",
        "description": "Whether the line item's variant has an ID and inventory is managed by Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "customAttributes",
        "description": "List of additional information (metafields) about the line item.",
        "required": false,
        "type": null
      },
      {
        "name": "discountAllocations",
        "description": "The discounts that have been allocated onto the line item by discount applications.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedTotal",
        "description": "The total line price after discounts are applied.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedTotalSet",
        "description": "The total line price after discounts are applied in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedUnitPrice",
        "description": "The price of a single variant unit after line item discounts are applied.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedUnitPriceSet",
        "description": "The price of a single variant unit after line item discounts are applied in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillableQuantity",
        "description": "The total number of units to fulfill.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentService",
        "description": "Name of the service provider who fulfilled the order.\n\nValid values are either **manual** or the name of the provider.\nFor example, **amazon**, **shipwire**.\n",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentStatus",
        "description": "The line item's fulfillment status. Returns 'fulfilled' if fulfillableQuantity >= quantity,\n'partial' if  fulfillableQuantity > 0, and 'unfulfilled' otherwise.\n",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "image",
        "description": "The Image object associated to the line item's variant.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "merchantEditable",
        "description": "Whether the line item can be edited or not.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Name of the product.",
        "required": false,
        "type": null
      },
      {
        "name": "nonFulfillableQuantity",
        "description": "A count of the number of line items that cannot be fulfilled.",
        "required": false,
        "type": null
      },
      {
        "name": "originalTotal",
        "description": "Total price (without discounts) of the line item, based on the original unit price of the variant x quantity.\n",
        "required": false,
        "type": null
      },
      {
        "name": "originalTotalSet",
        "description": "Total price (without discounts) of the line item, based on the original unit price of the  variant x quantity in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "originalUnitPrice",
        "description": "Variant price without any discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "originalUnitPriceSet",
        "description": "Variant price without any discounts applied in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "The Product object associated with this line item's variant.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "quantity",
        "description": "Number of variant items ordered.",
        "required": false,
        "type": null
      },
      {
        "name": "refundableQuantity",
        "description": "The line item's quantity minus its refundedQuantity.",
        "required": false,
        "type": null
      },
      {
        "name": "requiresShipping",
        "description": "Whether physical shipping is required for the variant.",
        "required": false,
        "type": null
      },
      {
        "name": "restockable",
        "description": "Whether the line item's variant has an ID and inventory is managed by Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "sku",
        "description": "Variant SKU number.",
        "required": false,
        "type": "String"
      },
      {
        "name": "taxLines",
        "description": "The TaxLine object connected to this line item.",
        "required": false,
        "type": null
      },
      {
        "name": "taxable",
        "description": "Whether the variant is taxable.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Title of the product or variant (this field only applies to custom line items).",
        "required": false,
        "type": null
      },
      {
        "name": "totalDiscount",
        "description": "The sum of all AppliedDiscounts on this line item.",
        "required": false,
        "type": null
      },
      {
        "name": "totalDiscountSet",
        "description": "The sum of all AppliedDiscounts on this line item in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "unfulfilledDiscountedTotal",
        "description": "The total discounted value of unfulfilled units.",
        "required": false,
        "type": null
      },
      {
        "name": "unfulfilledDiscountedTotalSet",
        "description": "The total discounted value of unfulfilled units in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "unfulfilledOriginalTotal",
        "description": "The total value before discount of all unfulfilled units.",
        "required": false,
        "type": null
      },
      {
        "name": "unfulfilledOriginalTotalSet",
        "description": "The total value before discount of all unfulfilled units in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "unfulfilledQuantity",
        "description": "The number of units not yet fulfilled.",
        "required": false,
        "type": null
      },
      {
        "name": "variant",
        "description": "The Variant object associated with this line item.",
        "required": false,
        "type": "ProductVariant"
      },
      {
        "name": "variantTitle",
        "description": "Name of the variant.",
        "required": false,
        "type": "String"
      },
      {
        "name": "vendor",
        "description": "Name of the vendor who made the variant.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "TaxLine",
    "description": "Represents the information about the tax charged on the associated line item.",
    "fields": [
      {
        "name": "price",
        "description": "The amount of tax to be charged.",
        "required": false,
        "type": null
      },
      {
        "name": "priceSet",
        "description": "The amount of tax to be charged in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "rate",
        "description": "The tax rate to be applied.",
        "required": false,
        "type": "Float"
      },
      {
        "name": "ratePercentage",
        "description": "The percentage of the price that the tax rate represents.",
        "required": false,
        "type": "Float"
      },
      {
        "name": "title",
        "description": "The name of the tax.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAllocation",
    "description": "An amount discounting the line that has been allocated by an associated discount application.\n",
    "fields": [
      {
        "name": "allocatedAmount",
        "description": "Money amount allocated by the discount application.",
        "required": false,
        "type": null
      },
      {
        "name": "allocatedAmountSet",
        "description": "Money amount allocated by the discount application in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "discountApplication",
        "description": "The discount of which this allocated amount originated from.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StaffMemberPrivateData",
    "description": "Data used to customize the Shopify admin for a logged-in staff member.",
    "fields": [
      {
        "name": "accountSettingsUrl",
        "description": "URL to the user's account settings page.",
        "required": false,
        "type": null
      },
      {
        "name": "activityFeed",
        "description": "Paginated list of activities.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date when the user was created.",
        "required": false,
        "type": null
      },
      {
        "name": "permissions",
        "description": "Access permisions for the staff member.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ActivityConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ActivityEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ActivityEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Activity",
    "description": "Succinct overview of a shop activity.",
    "fields": [
      {
        "name": "attributed",
        "description": "True if the message already contains the author name.",
        "required": false,
        "type": null
      },
      {
        "name": "author",
        "description": "Event author name. This may be a user name, app name or `Shopify`.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "When the activity event occured.",
        "required": false,
        "type": null
      },
      {
        "name": "messages",
        "description": "An array of formatted messages, each providing detail about the activity. Typically only a single message is present.",
        "required": false,
        "type": null
      },
      {
        "name": "topic",
        "description": "The topic of the activity, used to display an appropriate icon.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "RefundLineItem",
    "description": "Represents the details about a refunded line item.",
    "fields": [
      {
        "name": "lineItem",
        "description": "Returns a LineItem resource. This represents the LineItem in the non-refund context.",
        "required": false,
        "type": null
      },
      {
        "name": "location",
        "description": "The inventory restock location.",
        "required": false,
        "type": "Location"
      },
      {
        "name": "price",
        "description": "Returns the price of a refunded line item.",
        "required": false,
        "type": null
      },
      {
        "name": "priceSet",
        "description": "Returns the price of a refunded line item in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "quantity",
        "description": "Returns the quantity of a refunded line item.",
        "required": false,
        "type": null
      },
      {
        "name": "refundType",
        "description": "Represents the type of restock for the refunded line item.",
        "required": false,
        "type": null
      },
      {
        "name": "restockType",
        "description": "Represents the type of restock for the refunded line item.",
        "required": false,
        "type": null
      },
      {
        "name": "restocked",
        "description": "Whether the refunded line item was restocked. Not applicable in the context of a SuggestedRefund.",
        "required": false,
        "type": null
      },
      {
        "name": "subtotal",
        "description": "Returns the subtotal price of a refunded line item.",
        "required": false,
        "type": null
      },
      {
        "name": "subtotalSet",
        "description": "Returns the subtotal price of a refunded line item in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalTax",
        "description": "Returns the total tax charged on a refunded line item.",
        "required": false,
        "type": null
      },
      {
        "name": "totalTaxSet",
        "description": "Returns the total tax charged on a refunded line item in shop and presentment currencies.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentLineItem",
    "description": "Represents a line item from an order that's included in a fulfillment.",
    "fields": [
      {
        "name": "discountedTotal",
        "description": "The total price after discounts are applied.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedTotalSet",
        "description": "The total price after discounts are applied in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "lineItem",
        "description": "The associated order's line item.",
        "required": false,
        "type": null
      },
      {
        "name": "originalTotal",
        "description": "The total price before discounts are applied.",
        "required": false,
        "type": null
      },
      {
        "name": "originalTotalSet",
        "description": "The total price before discounts are applied in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "quantity",
        "description": "Number of line items in the fulfillment.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "ShippingRefund",
    "description": "Represents the shipping costs refunded on the Refund.",
    "fields": [
      {
        "name": "amount",
        "description": "The monetary value of the shipping fees to be returned.",
        "required": false,
        "type": null
      },
      {
        "name": "amountSet",
        "description": "The monetary value of the shipping fees to be returned in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "maximumRefundable",
        "description": "The maximum amount of shipping fees currently refundable.",
        "required": false,
        "type": null
      },
      {
        "name": "maximumRefundableSet",
        "description": "The maximum amount of shipping fees currently refundable in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "tax",
        "description": "The monetary value of the tax allocated to shipping fees to be returned.",
        "required": false,
        "type": null
      },
      {
        "name": "taxSet",
        "description": "The monetary value of the tax allocated to shipping fees to be returned in shop and presentment currencies.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SuggestedOrderTransaction",
    "description": "Represents a suggested transaction.",
    "fields": [
      {
        "name": "accountNumber",
        "description": "The masked account number associated with the payment method.",
        "required": false,
        "type": "String"
      },
      {
        "name": "amount",
        "description": "The amount of the transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "amountSet",
        "description": "The amount on the order transaction in applicable currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "formattedGateway",
        "description": "The human-readable payment gateway name used to process the transaction.",
        "required": false,
        "type": "String"
      },
      {
        "name": "gateway",
        "description": "The payment gateway used to process the transaction.",
        "required": false,
        "type": "String"
      },
      {
        "name": "kind",
        "description": "Specifies the kind of the suggested order transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "maximumRefundable",
        "description": "Specifies the available amount to refund on the gateway. Only available within SuggestedRefund.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "maximumRefundableSet",
        "description": "Specifies the available amount to refund on the gateway in shop and presentment currencies. Only available within SuggestedRefund.",
        "required": false,
        "type": "MoneyBag"
      },
      {
        "name": "parentTransaction",
        "description": "The associated parent transaction, for example the authorization of a capture.",
        "required": false,
        "type": "OrderTransaction"
      }
    ]
  },
  {
    "name": "OrderTransaction",
    "description": "A transaction represents an exchange of money as part of an order.",
    "fields": [
      {
        "name": "accountNumber",
        "description": "The masked account number associated with the payment method.",
        "required": false,
        "type": "String"
      },
      {
        "name": "amount",
        "description": "The amount of money.",
        "required": false,
        "type": null
      },
      {
        "name": "amountSet",
        "description": "The amount and currency of the transaction in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "amountV2",
        "description": "The amount and currency of the transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "authorizationCode",
        "description": "Authorization code associated with the transaction.",
        "required": false,
        "type": "String"
      },
      {
        "name": "createdAt",
        "description": "Date and time when the transaction was created.",
        "required": false,
        "type": null
      },
      {
        "name": "errorCode",
        "description": "A standardized error code, independent of the payment provider.",
        "required": false,
        "type": "OrderTransactionErrorCode"
      },
      {
        "name": "formattedGateway",
        "description": "The human-readable payment gateway name used to process the transaction.",
        "required": false,
        "type": "String"
      },
      {
        "name": "gateway",
        "description": "The payment gateway used to process the transaction.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "kind",
        "description": "The kind of transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "manuallyCapturable",
        "description": "Whether the transaction can be manually captured.",
        "required": false,
        "type": "Boolean"
      },
      {
        "name": "maximumRefundable",
        "description": "Specifies the available amount to refund on the gateway. Only available within SuggestedRefund.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "maximumRefundableV2",
        "description": "Specifies the available amount with currency to refund on the gateway.\nOnly available within SuggestedRefund.\n",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "order",
        "description": "The associated order.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "parentTransaction",
        "description": "The associated parent transaction, for example the authorization of a capture.",
        "required": false,
        "type": "OrderTransaction"
      },
      {
        "name": "paymentIcon",
        "description": "Specifies the payment icon to display for this transaction.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "paymentMethod",
        "description": "Specifies the credit card company used to pay for this transaction.",
        "required": false,
        "type": "PaymentMethods"
      },
      {
        "name": "processedAt",
        "description": "Date and time when the transaction was processed.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "receipt",
        "description": "A transaction receipt attached to the transaction by the gateway.\nThe value of this field depends on which gateway processed the transaction.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "status",
        "description": "The status of this transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "test",
        "description": "Whether the transaction is a test transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "totalUnsettled",
        "description": "Specifies the available amount to capture on the gateway.\nOnly available when an amount is capturable or manually mark as paid.\n",
        "required": false,
        "type": "Money"
      },
      {
        "name": "totalUnsettledSet",
        "description": "Specifies the available amount with currency to capture on the gateway in shop and presentment currencies.\nOnly available when an amount is capturable or manually mark as paid.\n",
        "required": false,
        "type": "MoneyBag"
      },
      {
        "name": "totalUnsettledV2",
        "description": "Specifies the available amount with currency to capture on the gateway.\nOnly available when an amount is capturable or manually mark as paid.\n",
        "required": false,
        "type": "MoneyV2"
      }
    ]
  },
  {
    "name": "CurrencySetting",
    "description": "Represents a currency setting.",
    "fields": [
      {
        "name": "currencyCode",
        "description": "The currency's ISO code.",
        "required": false,
        "type": null
      },
      {
        "name": "currencyName",
        "description": "The full name of the currency.",
        "required": false,
        "type": null
      },
      {
        "name": "enabled",
        "description": "Flag describing whether the currency is enabled.",
        "required": false,
        "type": null
      },
      {
        "name": "rateUpdatedAt",
        "description": "Date and time when the exchange rate for the currency was last modified.",
        "required": false,
        "type": "DateTime"
      }
    ]
  },
  {
    "name": "Refund",
    "description": "Represents a refund of items or transactions in an order.",
    "fields": [
      {
        "name": "createdAt",
        "description": "When the refund was created.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "note",
        "description": "Note associated with the refund.",
        "required": false,
        "type": "String"
      },
      {
        "name": "refundLineItems",
        "description": "The RefundLineItem resources attached to the refund.",
        "required": false,
        "type": null
      },
      {
        "name": "restocked",
        "description": "Whether the RefundLineItem resources were restocked when the refund was created.",
        "required": false,
        "type": null
      },
      {
        "name": "totalRefunded",
        "description": "Total amount refunded across all the transactions for this refund.",
        "required": false,
        "type": null
      },
      {
        "name": "totalRefundedSet",
        "description": "Total amount refunded across all the transactions for this refund in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "transactions",
        "description": "Transactions associated with the refund.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "When the refund was last updated.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderTransactionConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderTransactionEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of OrderTransactionEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "RefundLineItemConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "RefundLineItemEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of RefundLineItemEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Fulfillment",
    "description": "Represents a fulfillment. In Shopify, a fulfillment represents a shipment of one or more items in an order. When an order has been completely fulfilled, it means that all the items that are included in the order have been sent to the customer. There can be more than one fulfillment for an order.\n",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the fulfillment was created.",
        "required": false,
        "type": null
      },
      {
        "name": "deliveredAt",
        "description": "The date that this fulfillment was delivered.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "displayStatus",
        "description": "Human readable display status for this fulfillment.",
        "required": false,
        "type": "FulfillmentDisplayStatus"
      },
      {
        "name": "estimatedDeliveryAt",
        "description": "The estimated date that this fulfillment will arrive.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "events",
        "description": "The history of events associated with this fulfillment.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentLineItems",
        "description": "List of the fulfillment's line items.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "inTransitAt",
        "description": "The date and time when the fulfillment went into transit.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "location",
        "description": "The location that the fulfillment was processed at.",
        "required": false,
        "type": "Location"
      },
      {
        "name": "name",
        "description": "Human readable reference identifier for this fulfillment.",
        "required": false,
        "type": null
      },
      {
        "name": "requiresShipping",
        "description": "Whether any of the line items in the fulfillment require shipping.",
        "required": false,
        "type": null
      },
      {
        "name": "service",
        "description": "Fulfillment service associated with the fulfillment.",
        "required": false,
        "type": "FulfillmentService"
      },
      {
        "name": "status",
        "description": "The status of the fulfillment.",
        "required": false,
        "type": null
      },
      {
        "name": "totalQuantity",
        "description": "Sum of all line item quantities for the fulfillment.",
        "required": false,
        "type": null
      },
      {
        "name": "trackingInfo",
        "description": "Tracking information associated with the fulfillment,\nsuch as the tracking company, tracking number, and tracking URL.\n",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the fulfillment was last modified.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentTrackingInfo",
    "description": "Represents the tracking information for a fulfillment.",
    "fields": [
      {
        "name": "company",
        "description": "The name of the tracking company.",
        "required": false,
        "type": "String"
      },
      {
        "name": "number",
        "description": "The tracking number of the fulfillment.",
        "required": false,
        "type": "String"
      },
      {
        "name": "url",
        "description": "The URLs to track the fulfillment.",
        "required": false,
        "type": "URL"
      }
    ]
  },
  {
    "name": "FulfillmentLineItemConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentLineItemEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of FulfillmentLineItemEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "BoxDimensions",
    "description": "Represents the dimensions of a three-dimensional box.",
    "fields": [
      {
        "name": "height",
        "description": "The height in `unit`s.",
        "required": false,
        "type": null
      },
      {
        "name": "length",
        "description": "The length in `unit`s.",
        "required": false,
        "type": null
      },
      {
        "name": "unit",
        "description": "Unit of measurement for `length`, `width`, and `height`.",
        "required": false,
        "type": null
      },
      {
        "name": "width",
        "description": "The width in `unit`s.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentEventConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentEventEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of FulfillmentEventEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentEvent",
    "description": "An event that describes a fulfillment at a time.",
    "fields": [
      {
        "name": "happenedAt",
        "description": "The time at which this fulfillment event happened.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of this fulfillment event.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of FulfillmentEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "LineItemConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "LineItemEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of LineItemEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderRisk",
    "description": "Represents a fraud check on an order.",
    "fields": [
      {
        "name": "display",
        "description": "Whether the risk level is shown in the Shopify admin. If false, then this order risk is ignored when Shopify determines the overall risk level for the order.",
        "required": false,
        "type": null
      },
      {
        "name": "level",
        "description": "The likelihood that an order is fraudulent, based on this order risk.\n\nThe level can be set by Shopify risk analysis or by an app.\n",
        "required": false,
        "type": "OrderRiskLevel"
      },
      {
        "name": "message",
        "description": "The risk message that's shown to the merchant in the Shopify admin.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "ShippingLine",
    "description": "Represents the shipping details that the customer chose for their order.",
    "fields": [
      {
        "name": "carrierIdentifier",
        "description": "A reference to the carrier service that provided the rate.\nPresent when the rate was computed by a third-party carrier service.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "code",
        "description": "A reference to the shipping method.",
        "required": false,
        "type": "String"
      },
      {
        "name": "custom",
        "description": "Whether the shipping line is custom or not.",
        "required": false,
        "type": null
      },
      {
        "name": "deliveryCategory",
        "description": "The general classification of the delivery method.",
        "required": false,
        "type": "String"
      },
      {
        "name": "discountAllocations",
        "description": "The discounts that have been allocated to the shipping line.\n",
        "required": false,
        "type": null
      },
      {
        "name": "discountedPrice",
        "description": "The pre-tax shipping price with discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedPriceSet",
        "description": "The pre-tax shipping price with discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "originalPrice",
        "description": "The pre-tax shipping price without any discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "originalPriceSet",
        "description": "The pre-tax shipping price without any discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "phone",
        "description": "The phone number at the shipping address.",
        "required": false,
        "type": "String"
      },
      {
        "name": "price",
        "description": "Returns the price of the shipping line.",
        "required": false,
        "type": null
      },
      {
        "name": "requestedFulfillmentService",
        "description": "The fulfillment service requested for the shipping method.\nPresent if the shipping method requires processing by a third party fulfillment service.\n",
        "required": false,
        "type": "FulfillmentService"
      },
      {
        "name": "shippingRateHandle",
        "description": "A unique identifier for the shipping rate. The format can change without notice and is not meant to be shown to users.",
        "required": false,
        "type": "String"
      },
      {
        "name": "source",
        "description": "Returns the rate source for the shipping line.",
        "required": false,
        "type": "String"
      },
      {
        "name": "taxLines",
        "description": "The TaxLine objects connected to this shipping line.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Returns the title of the shipping line.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SuggestedRefund",
    "description": "Represents the suggested refund to be submitted based on the items being returned.",
    "fields": [
      {
        "name": "amount",
        "description": "The total monetary value to be refunded.",
        "required": false,
        "type": null
      },
      {
        "name": "amountSet",
        "description": "The total monetary value to be refunded in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedSubtotalSet",
        "description": "The sum of all the discounted prices of the line items being refunded.",
        "required": false,
        "type": null
      },
      {
        "name": "maximumRefundable",
        "description": "The total monetary value available to refund.",
        "required": false,
        "type": null
      },
      {
        "name": "maximumRefundableSet",
        "description": "The total monetary value available to refund in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "refundLineItems",
        "description": "Array of returned line items.",
        "required": false,
        "type": null
      },
      {
        "name": "shipping",
        "description": "Refund details for shipping costs paid by customer.",
        "required": false,
        "type": null
      },
      {
        "name": "subtotal",
        "description": "The sum of all the prices of the line items being refunded.",
        "required": false,
        "type": null
      },
      {
        "name": "subtotalSet",
        "description": "The sum of all the prices of the line items being refunded in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "suggestedTransactions",
        "description": "Array of SuggestedOrderTransaction items.",
        "required": false,
        "type": null
      },
      {
        "name": "totalCartDiscountAmountSet",
        "description": "The total cart discount amount that was applied to all line items in this refund.",
        "required": false,
        "type": null
      },
      {
        "name": "totalTaxSet",
        "description": "The sum of all the taxes being refunded from the order (must be positive) in shop and presentment currencies.",
        "required": false,
        "type": null
      },
      {
        "name": "totalTaxes",
        "description": "The sum of all the taxes being refunded from the order (must be positive).",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShippingRate",
    "description": "A shipping rate to be applied to an order.",
    "fields": [
      {
        "name": "handle",
        "description": "Human-readable unique identifier for this shipping rate.",
        "required": false,
        "type": null
      },
      {
        "name": "price",
        "description": "Price of this shipping rate.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Title of this shipping rate.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MailingAddressEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of MailingAddressEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionRuleConditions",
    "description": "Collections may use rules to automatically include the matching products. This defines restrictions for a type of rule.",
    "fields": [
      {
        "name": "allowedRelations",
        "description": "Allowed relations of the rule.",
        "required": false,
        "type": null
      },
      {
        "name": "defaultRelation",
        "description": "Most commonly used relation for this rule.",
        "required": false,
        "type": null
      },
      {
        "name": "ruleType",
        "description": "Type of the rule.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrder",
    "description": "Represents a draft order. Merchants can use draft orders to create orders on behalf of their customers.\n",
    "fields": [
      {
        "name": "appliedDiscount",
        "description": "Order-level discount applied to the draft order.",
        "required": false,
        "type": "DraftOrderAppliedDiscount"
      },
      {
        "name": "billingAddress",
        "description": "Billing address of the customer.\n",
        "required": false,
        "type": "MailingAddress"
      },
      {
        "name": "completedAt",
        "description": "Date and time when the draft order converted to a new order,\nand the draft order's status changed to **Completed**.\n",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "createdAt",
        "description": "Date and time when the draft order was created in Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "currencyCode",
        "description": "Three letter code for the currency of the store at the time that the invoice is sent.\n",
        "required": false,
        "type": null
      },
      {
        "name": "customAttributes",
        "description": "Custom information added to the draft order on behalf of your customer.\n",
        "required": false,
        "type": null
      },
      {
        "name": "customer",
        "description": "Customer who will be sent an invoice for the draft order, if there is one.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "email",
        "description": "Email address of the customer, which is used to send notifications to.",
        "required": false,
        "type": "String"
      },
      {
        "name": "events",
        "description": "List of events associated with the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "hasTimelineComment",
        "description": "Whether the merchant has added timeline comments to the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "invoiceSentAt",
        "description": "Date and time when the invoice was last emailed to the customer.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "invoiceUrl",
        "description": "Link to the checkout, which is sent to your customer in the invoice email.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "lineItems",
        "description": "List of the line items in the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Unique identifier for the draft order, which is unique within the store. For example, _#D1223_.\n",
        "required": false,
        "type": null
      },
      {
        "name": "note2",
        "description": "Text from an optional note attached to the draft order.",
        "required": false,
        "type": "String"
      },
      {
        "name": "order",
        "description": "Order that was created from this draft order.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "shippingAddress",
        "description": "Shipping mailing address of the customer.",
        "required": false,
        "type": "MailingAddress"
      },
      {
        "name": "shippingLine",
        "description": "Line item that contains the shipping costs.",
        "required": false,
        "type": "ShippingLine"
      },
      {
        "name": "status",
        "description": "Status of the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "subtotalPrice",
        "description": "Subtotal of the line items and their discounts (does not contain shipping charges or shipping discounts, or taxes).\n",
        "required": false,
        "type": null
      },
      {
        "name": "tags",
        "description": "Tags added to the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "taxExempt",
        "description": "Whether the draft order is tax exempt.",
        "required": false,
        "type": null
      },
      {
        "name": "taxLines",
        "description": "Total amount of taxes charged for each line item and shipping line.",
        "required": false,
        "type": null
      },
      {
        "name": "taxesIncluded",
        "description": "Whether the line item prices include taxes.",
        "required": false,
        "type": null
      },
      {
        "name": "totalPrice",
        "description": "Total amount of the draft order (includes taxes, shipping charges, and discounts).",
        "required": false,
        "type": null
      },
      {
        "name": "totalShippingPrice",
        "description": "Total shipping charge for the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "totalTax",
        "description": "Total amount of taxes for the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "totalWeight",
        "description": "Total weight (grams) of the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "Date and time when the draft order was last changed.\nThe format is YYYY-MM-DD HH:mm:ss (for example, 2016-02-05 17:04:01).\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderAppliedDiscount",
    "description": "The order-level discount applied to a draft order.",
    "fields": [
      {
        "name": "amount",
        "description": "Amount of the order-level discount that is applied to the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "amountV2",
        "description": "Amount of money discounted.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "Description of the order-level discount.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Name of the order-level discount.",
        "required": false,
        "type": "String"
      },
      {
        "name": "value",
        "description": "Amount of the order level discount (when value_type is percentage,\nthe value in this field is the percentage discount).\n",
        "required": false,
        "type": null
      },
      {
        "name": "valueType",
        "description": "Type of the order-level discount.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderLineItemConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderLineItemEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DraftOrderLineItemEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderLineItem",
    "description": "Represents a line item included in a draft order.",
    "fields": [
      {
        "name": "appliedDiscount",
        "description": "Discount which will be applied to the line item or the overall order.\n",
        "required": false,
        "type": "DraftOrderAppliedDiscount"
      },
      {
        "name": "custom",
        "description": "Whether this is a product variant line item, or a custom line item.\nIf set to true indicates a custom line item. If set to false indicates a product variant line item.\n",
        "required": false,
        "type": null
      },
      {
        "name": "customAttributes",
        "description": "List of additional information (metafields) about the line item.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedTotal",
        "description": "Line item price after discounts are applied.\n",
        "required": false,
        "type": null
      },
      {
        "name": "discountedUnitPrice",
        "description": "The `discountedTotal` divided by `quantity`, resulting in the value of the discount per unit.\n",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentService",
        "description": "Name of the service provider who fulfilled the order.\n\nValid values are either **manual** or the name of the provider.\nFor example, **amazon**, **shipwire**.\n",
        "required": false,
        "type": null
      },
      {
        "name": "grams",
        "description": "Weight in grams. Can only be specified if this is a custom line item.\n",
        "required": false,
        "type": "Int"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "image",
        "description": "Image associated with the draft order line item.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "isGiftCard",
        "description": "Whether the line item represents the puchase of a gift card.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Name of the product.",
        "required": false,
        "type": null
      },
      {
        "name": "originalTotal",
        "description": "Total price (without discounts) of the line item, based on the original unit price of the variant x quantity.\n",
        "required": false,
        "type": null
      },
      {
        "name": "originalUnitPrice",
        "description": "Variant price without any discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "The product corresponding to the line item’s product variant.\n",
        "required": false,
        "type": "Product"
      },
      {
        "name": "quantity",
        "description": "Number of variant items requested in the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "requiresShipping",
        "description": "Whether physical shipping is required for the variant.",
        "required": false,
        "type": null
      },
      {
        "name": "sku",
        "description": "Variant SKU number.",
        "required": false,
        "type": "String"
      },
      {
        "name": "taxLines",
        "description": "A list of tax line objects, each of which details the total taxes applicable to the order.\n",
        "required": false,
        "type": null
      },
      {
        "name": "taxable",
        "description": "Whether the variant is taxable.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Title of the product or variant (this field only applies to custom line items).",
        "required": false,
        "type": null
      },
      {
        "name": "totalDiscount",
        "description": "Total value of the discount applied to the line item.\n",
        "required": false,
        "type": null
      },
      {
        "name": "variant",
        "description": "Associated variant for the line item.\n",
        "required": false,
        "type": "ProductVariant"
      },
      {
        "name": "variantTitle",
        "description": "Name of the variant.",
        "required": false,
        "type": "String"
      },
      {
        "name": "vendor",
        "description": "Name of the vendor who made the variant.",
        "required": false,
        "type": "String"
      },
      {
        "name": "weight",
        "description": "Weight unit and value for a draft order line item.",
        "required": false,
        "type": "Weight"
      }
    ]
  },
  {
    "name": "PriceRule",
    "description": "Price rules are a set of conditions, including entitlements and prerequisites, that must be met in order for a discount code to apply.",
    "fields": [
      {
        "name": "allocationLimit",
        "description": "The maximum number of times the price rule will be allocated onto an order.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "allocationMethod",
        "description": "The method by which the price rule's value is allocated to its entitled items.",
        "required": false,
        "type": null
      },
      {
        "name": "app",
        "description": "The application that created the price rule.",
        "required": false,
        "type": "App"
      },
      {
        "name": "createdAt",
        "description": "When the price rule was created.",
        "required": false,
        "type": null
      },
      {
        "name": "customerSelection",
        "description": "A selection of customers for whom the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "discountCodes",
        "description": "List of the price rule's discount codes.",
        "required": false,
        "type": null
      },
      {
        "name": "discountCodesCount",
        "description": "How many discount codes associated with the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "endsAt",
        "description": "When the price rule expires, or never if null.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "entitlementToPrerequisiteQuantityRatio",
        "description": "Quantity of prerequisite items required for the price rule to be applicable,  compared to quantity of entitled items.",
        "required": false,
        "type": "PriceRuleEntitlementToPrerequisiteQuantityRatio"
      },
      {
        "name": "events",
        "description": "The paginated list of events associated with the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "features",
        "description": "A list of features used by the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "hasTimelineComment",
        "description": "Indicates whether or not any timeline comments have been made on the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "itemEntitlements",
        "description": "The items to which the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "itemPrerequisites",
        "description": "The line item objects required for the price rule to be applicable.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "oncePerCustomer",
        "description": "Whether the price rule can be applied only once per customer.",
        "required": false,
        "type": null
      },
      {
        "name": "prerequisiteQuantityRange",
        "description": "The number of the entitled items must fall within this range for the price rule to be applicable.",
        "required": false,
        "type": "PriceRuleQuantityRange"
      },
      {
        "name": "prerequisiteShippingPriceRange",
        "description": "The shipping cost must fall within this range for the price rule to be applicable.",
        "required": false,
        "type": "PriceRuleMoneyRange"
      },
      {
        "name": "prerequisiteSubtotalRange",
        "description": "The sum of the entitled items subtotal prices must fall within this range for the price rule to be applicable.",
        "required": false,
        "type": "PriceRuleMoneyRange"
      },
      {
        "name": "prerequisiteToEntitlementQuantityRatio",
        "description": "Quantity of prerequisite items required for the price rule to be applicable,  compared to quantity of entitled items.",
        "required": false,
        "type": "PriceRulePrerequisiteToEntitlementQuantityRatio"
      },
      {
        "name": "shareableUrls",
        "description": "URLs that can be used to share the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "shippingEntitlements",
        "description": "The shipping lines to which the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "startsAt",
        "description": "When the price rule is starting to be active.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "A summary of the price rule.",
        "required": false,
        "type": "String"
      },
      {
        "name": "target",
        "description": "The type of lines (line_item or shipping_line) to which the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "totalSales",
        "description": "The total sales brought by the price rule.",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "traits",
        "description": "A list of features used by the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "usageCount",
        "description": "How many times the price rule has been used.",
        "required": false,
        "type": null
      },
      {
        "name": "usageLimit",
        "description": "The maximum number of times the price rule can be applied.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "validityPeriod",
        "description": "A time period during which a price rule is applicable.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of the price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "valueV2",
        "description": "The value of the price rule.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleValidityPeriod",
    "description": "A time period during which a price rule is applicable.",
    "fields": [
      {
        "name": "end",
        "description": "The time after which the price rule becomes invalid.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "start",
        "description": "The time after which the price rule is valid.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleCustomerSelection",
    "description": "A selection of customers for whom the price rule applies.",
    "fields": [
      {
        "name": "customers",
        "description": "List of customers to whom the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "forAllCustomers",
        "description": "Whether the price rule applies to all customers.",
        "required": false,
        "type": null
      },
      {
        "name": "savedSearches",
        "description": "List of customer saved searches that contain the customers to whom the price rule applies.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SavedSearch",
    "description": "A saved search is a representation of a search query saved in the admin.",
    "fields": [
      {
        "name": "filters",
        "description": "The filters of a saved search.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The name of a saved search.",
        "required": false,
        "type": null
      },
      {
        "name": "query",
        "description": "The query string of a saved search. This includes search terms and filters.",
        "required": false,
        "type": null
      },
      {
        "name": "resourceType",
        "description": "The type of resource this saved search is searching in.",
        "required": false,
        "type": null
      },
      {
        "name": "searchTerms",
        "description": "The search terms of a saved search.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SearchFilter",
    "description": "A filter in a search query represented by a key value pair.",
    "fields": [
      {
        "name": "key",
        "description": "The key of the search filter.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of the search filter.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of CustomerEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleDiscountCodeConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleDiscountCodeEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of PriceRuleDiscountCodeEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleDiscountCode",
    "description": "A discount code of a price rule.",
    "fields": [
      {
        "name": "app",
        "description": "The application that created the discount code.",
        "required": false,
        "type": "App"
      },
      {
        "name": "code",
        "description": "The code of a discount.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "usageCount",
        "description": "The usage count of the discount code.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRulePercentValue",
    "description": "The value of a percent price rule.",
    "fields": [
      {
        "name": "percentage",
        "description": "The percent value of the price rule.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleFixedAmountValue",
    "description": "The value of a fixed amount price rule.",
    "fields": [
      {
        "name": "amount",
        "description": "The monetary value of the price rule.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleItemEntitlements",
    "description": "The items to which this price rule applies. This may be multiple products, product variants, collections or combinations of the aforementioned.",
    "fields": [
      {
        "name": "collections",
        "description": "The collections to which the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "productVariants",
        "description": "The product variants to which the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "The products to which the price rule applies.",
        "required": false,
        "type": null
      },
      {
        "name": "targetAllLineItems",
        "description": "Whether the price rule applies to all line items.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleShippingLineEntitlements",
    "description": "The shipping lines to which the price rule applies to.",
    "fields": [
      {
        "name": "countryCodes",
        "description": "The codes for the countries to which the price rule applies to.",
        "required": false,
        "type": null
      },
      {
        "name": "includeRestOfWorld",
        "description": "Whether the price rule is applicable to countries that have not been defined in the shop's shipping zones.",
        "required": false,
        "type": null
      },
      {
        "name": "targetAllShippingLines",
        "description": "Whether the price rule applies to all shipping lines.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleMoneyRange",
    "description": "A money range within which the price rule is applicable.",
    "fields": [
      {
        "name": "greaterThan",
        "description": "The lower bound of the money range.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "greaterThanOrEqualTo",
        "description": "The lower bound or equal of the money range.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "lessThan",
        "description": "The upper bound of the money range.",
        "required": false,
        "type": "Money"
      },
      {
        "name": "lessThanOrEqualTo",
        "description": "The upper bound or equal of the money range.",
        "required": false,
        "type": "Money"
      }
    ]
  },
  {
    "name": "PriceRuleQuantityRange",
    "description": "A quantity range within which the price rule is applicable.",
    "fields": [
      {
        "name": "greaterThan",
        "description": "The lower bound of the quantity range.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "greaterThanOrEqualTo",
        "description": "The lower bound or equal of the quantity range.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "lessThan",
        "description": "The upper bound of the quantity range.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "lessThanOrEqualTo",
        "description": "The upper bound or equal of the quantity range.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "PriceRuleLineItemPrerequisites",
    "description": "Single or multiple line item products, product variants or collections required for the price rule to be applicable, can also be provided in combination.",
    "fields": [
      {
        "name": "collections",
        "description": "The collections required for the price rule to be applicable.",
        "required": false,
        "type": null
      },
      {
        "name": "productVariants",
        "description": "The product variants required for the price rule to be applicable.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "The products required for the price rule to be applicable.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleEntitlementToPrerequisiteQuantityRatio",
    "description": "Quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items.",
    "fields": [
      {
        "name": "entitlementQuantity",
        "description": "The quantity of entitlements in the ratio.",
        "required": false,
        "type": null
      },
      {
        "name": "prerequisiteQuantity",
        "description": "The quantity of prerequisites in the ratio.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRulePrerequisiteToEntitlementQuantityRatio",
    "description": "Quantity of prerequisite items required for the price rule to be applicable, compared to quantity of entitled items.",
    "fields": [
      {
        "name": "entitlementQuantity",
        "description": "The quantity of entitlements in the ratio.",
        "required": false,
        "type": null
      },
      {
        "name": "prerequisiteQuantity",
        "description": "The quantity of prerequisites in the ratio.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleShareableUrl",
    "description": "Shareable URL for the discount code associated with the price rule.",
    "fields": [
      {
        "name": "targetItemImage",
        "description": "Image URL of the item (product or collection) to which discount applies.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "targetType",
        "description": "Type of page where URL lands.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Title for the page where URL lands.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "Actual URL for the discount code.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingActivityConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingActivityEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of MarketingActivityEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingActivity",
    "description": "A marketing activity represents marketing created by an app on behalf of the merchant.",
    "fields": [
      {
        "name": "activityListUrl",
        "description": "The url of the activity listing page of this marketing activity in the marketing section.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "adSpend",
        "description": "Amount spent on this marketing activity.",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "app",
        "description": "The app which created this marketing activity.",
        "required": false,
        "type": null
      },
      {
        "name": "appErrors",
        "description": "Errors generated when app was trying to complete this activity.",
        "required": false,
        "type": "MarketingActivityExtensionAppErrors"
      },
      {
        "name": "budget",
        "description": "The budget for this marketing activity.",
        "required": false,
        "type": "MarketingBudget"
      },
      {
        "name": "createdAt",
        "description": "The date and time when the marketing activity was created.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "marketingChannel",
        "description": "The broad category of marketing, used for reporting aggregation.",
        "required": false,
        "type": null
      },
      {
        "name": "marketingEvent",
        "description": "Associated marketing event of this marketing activity.",
        "required": false,
        "type": "MarketingEvent"
      },
      {
        "name": "sourceAndMedium",
        "description": "A contextual description of the marketing activity based on the platform and tactic used.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "Status helps to identify if this marketing activity has been completed, queued, failed etc.",
        "required": false,
        "type": null
      },
      {
        "name": "statusTransitionedAt",
        "description": "The [date and time](\n          https://help.shopify.com/https://en.wikipedia.org/wiki/ISO_8601\n          ) when the activity's status last changed.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "tactic",
        "description": "The method of marketing used for this marketing activity.",
        "required": false,
        "type": null
      },
      {
        "name": "targetStatus",
        "description": "Expected status set by app in prior to an asynchronous operation.",
        "required": false,
        "type": "MarketingActivityStatus"
      },
      {
        "name": "title",
        "description": "Title of this marketing activity.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the marketing activity was updated.",
        "required": false,
        "type": null
      },
      {
        "name": "utmParameters",
        "description": "The set of UTM parameters being tracked for this marketing activity.",
        "required": false,
        "type": "UTMParameters"
      }
    ]
  },
  {
    "name": "MarketingBudget",
    "description": "This type combines budget amount and its marketing budget type.\n",
    "fields": [
      {
        "name": "budgetType",
        "description": "The budget type for a marketing activity.",
        "required": false,
        "type": null
      },
      {
        "name": "total",
        "description": "The amount of budget for marketing activity.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingActivityExtensionAppErrors",
    "description": "Represents errors returned from apps when using the marketing activity extension.",
    "fields": [
      {
        "name": "code",
        "description": "The app error type.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "The list of errors returned by the app.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingEventConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingEventEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of MarketingEventEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ScriptTag",
    "description": "A script tag represents remote JavaScript code that is loaded into the pages of a shop's storefront or the order status page of checkout.\n",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the script tag was created.",
        "required": false,
        "type": null
      },
      {
        "name": "displayScope",
        "description": "The page or pages on the online store that the script should be included.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "src",
        "description": "The URL to the remote script.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the script tag was last updated.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Domain",
    "description": "A unique string that represents the address of a Shopify store on the Internet.",
    "fields": [
      {
        "name": "host",
        "description": "The host name of the domain (eg: `example.com`).",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "sslEnabled",
        "description": "Whether SSL is enabled or not.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "The URL of the domain (eg: `https://example.com`).",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "Shop",
    "description": "Represents the shop object.\n",
    "fields": [
      {
        "name": "alerts",
        "description": "Alert message that appears in the Shopify admin.",
        "required": false,
        "type": null
      },
      {
        "name": "analyticsToken",
        "description": "The token required to query the shop's reports or dashboards.",
        "required": false,
        "type": null
      },
      {
        "name": "appInstallations",
        "description": "List of app installations on the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "availableChannelApps",
        "description": "List of sales channels not currently installed on the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "billingAddress",
        "description": "The shop's billing address information.",
        "required": false,
        "type": null
      },
      {
        "name": "channelAppInstallations",
        "description": "List of channel app installations on the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "channelCount",
        "description": "Exposes the number of channels.",
        "required": false,
        "type": null
      },
      {
        "name": "channels",
        "description": "List of the shop's active sales channels.",
        "required": false,
        "type": null
      },
      {
        "name": "checkoutApiSupported",
        "description": "Specifies whether the shop supports checkouts via Checkout API.",
        "required": false,
        "type": null
      },
      {
        "name": "collectionByHandle",
        "description": "Return a collection by its handle.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "collectionSavedSearches",
        "description": "List of the shop's collection saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "collections",
        "description": "List of the shop's collections.",
        "required": false,
        "type": null
      },
      {
        "name": "contactEmail",
        "description": "The public-facing contact email address for the shop.\nCustomers will use this email to communicate with the shop owner.\n",
        "required": false,
        "type": null
      },
      {
        "name": "countriesInShippingZones",
        "description": "Countries that have been defined in shipping zones for the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "currencyCode",
        "description": "The three letter code for the shop's currency.",
        "required": false,
        "type": null
      },
      {
        "name": "currencyFormats",
        "description": "How currencies are displayed on your store.",
        "required": false,
        "type": null
      },
      {
        "name": "currencySettings",
        "description": "The currency settings for the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "customerAccounts",
        "description": "The shop's customer account requirement preference.",
        "required": false,
        "type": null
      },
      {
        "name": "customerSavedSearches",
        "description": "List of the shop's customer saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "customerTags",
        "description": "Tags added to customer accounts.",
        "required": false,
        "type": null
      },
      {
        "name": "customers",
        "description": "Customer accounts associated to the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "The shop's meta description used in search engine results.",
        "required": false,
        "type": "String"
      },
      {
        "name": "draftOrderSavedSearches",
        "description": "List of the shop's draft order saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "draftOrderTags",
        "description": "Tags added to draft orders.",
        "required": false,
        "type": null
      },
      {
        "name": "draftOrders",
        "description": "List of saved draft orders on the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "email",
        "description": "The shop owner's email address.\nShopify will use this email address to communicate with the shop owner.\n",
        "required": false,
        "type": null
      },
      {
        "name": "enabledPresentmentCurrencies",
        "description": "The presentment currencies enabled for the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "features",
        "description": "The shop's features.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentServices",
        "description": "List of the shop's installed fulfillment services.",
        "required": false,
        "type": null
      },
      {
        "name": "ianaTimezone",
        "description": "The shop's time zone as defined by the IANA.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "installedApps",
        "description": "List of apps that are installed on the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "inventoryItems",
        "description": "List of the shop's inventory items.",
        "required": false,
        "type": null
      },
      {
        "name": "limitedPendingOrderCount",
        "description": "The number of pendings orders on the shop.\nLimited to a maximum of 10000.\n",
        "required": false,
        "type": null
      },
      {
        "name": "locations",
        "description": "List of active locations of the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "marketingEvents",
        "description": "List of a shop's marketing events.",
        "required": false,
        "type": null
      },
      {
        "name": "metafield",
        "description": "The metafield associated with the resource.",
        "required": false,
        "type": "Metafield"
      },
      {
        "name": "metafields",
        "description": "A paginated list of metafields associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "myshopifyDomain",
        "description": "The shop's .myshopify.com domain name.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "The shop's name.",
        "required": false,
        "type": null
      },
      {
        "name": "navigationSettings",
        "description": "The navigation settings of the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "orderNumberFormatPrefix",
        "description": "The prefix that appears before order numbers.",
        "required": false,
        "type": null
      },
      {
        "name": "orderNumberFormatSuffix",
        "description": "The suffix that appears after order numbers.",
        "required": false,
        "type": null
      },
      {
        "name": "orderSavedSearches",
        "description": "List of the shop's order saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "orderTags",
        "description": "Tags added to orders.",
        "required": false,
        "type": null
      },
      {
        "name": "orders",
        "description": "List of orders placed on the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "paymentSettings",
        "description": "Settings related to payments.",
        "required": false,
        "type": null
      },
      {
        "name": "pendingOrderCount",
        "description": "Number of pending orders on the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "plan",
        "description": "The shop's plan.",
        "required": false,
        "type": null
      },
      {
        "name": "priceRuleSavedSearches",
        "description": "List of the shop's price rule saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "priceRules",
        "description": "List of the shop’s price rules.",
        "required": false,
        "type": null
      },
      {
        "name": "primaryDomain",
        "description": "The shop's primary domain name.",
        "required": false,
        "type": null
      },
      {
        "name": "privateMetafield",
        "description": "Returns a private metafield found by namespace and key.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "privateMetafields",
        "description": "List of private metafields.",
        "required": false,
        "type": null
      },
      {
        "name": "productByHandle",
        "description": "Return a product by its handle.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "productImages",
        "description": "All images of all products of the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "productSavedSearches",
        "description": "List of the shop's product saved searches.",
        "required": false,
        "type": null
      },
      {
        "name": "productTags",
        "description": "Tags added to products.",
        "required": false,
        "type": null
      },
      {
        "name": "productTypes",
        "description": "Types added to products.",
        "required": false,
        "type": null
      },
      {
        "name": "productVariants",
        "description": "List of the shop's product variants.",
        "required": false,
        "type": null
      },
      {
        "name": "productVendors",
        "description": "Vendors added to products.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "List of the shop's products.",
        "required": false,
        "type": null
      },
      {
        "name": "publicationCount",
        "description": "Exposes the number of publications.",
        "required": false,
        "type": null
      },
      {
        "name": "resourceLimits",
        "description": "Resource limits of a shop.",
        "required": false,
        "type": null
      },
      {
        "name": "richTextEditorUrl",
        "description": "The URL of the rich text editor.",
        "required": false,
        "type": null
      },
      {
        "name": "search",
        "description": "Return admin search results.",
        "required": false,
        "type": null
      },
      {
        "name": "searchFilters",
        "description": "List of search filter options.",
        "required": false,
        "type": null
      },
      {
        "name": "setupRequired",
        "description": "Whether the shop has outstanding setup steps.",
        "required": false,
        "type": null
      },
      {
        "name": "shipsToCountries",
        "description": "Countries that the shop ships to.",
        "required": false,
        "type": null
      },
      {
        "name": "shopifyPaymentsAccount",
        "description": "Shopify Payments account information, including balances and payouts.",
        "required": false,
        "type": "ShopifyPaymentsAccount"
      },
      {
        "name": "storefrontAccessTokens",
        "description": "Storefront access token of a private application. Scoped per-application.",
        "required": false,
        "type": null
      },
      {
        "name": "storefrontUrl",
        "description": "The URL of the shop's storefront.",
        "required": false,
        "type": null
      },
      {
        "name": "taxShipping",
        "description": "Specifies whether or not taxes are charged for shipping.",
        "required": false,
        "type": null
      },
      {
        "name": "taxesIncluded",
        "description": "The setting for whether applicable taxes are included in product prices.",
        "required": false,
        "type": null
      },
      {
        "name": "timezoneAbbreviation",
        "description": "The shop's time zone abbreviation.",
        "required": false,
        "type": null
      },
      {
        "name": "timezoneOffset",
        "description": "The shop's time zone offset.",
        "required": false,
        "type": null
      },
      {
        "name": "timezoneOffsetMinutes",
        "description": "The shop's time zone offset expressed in number of minutes.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "unitSystem",
        "description": "The shop's unit system.",
        "required": false,
        "type": null
      },
      {
        "name": "uploadedImages",
        "description": "All images uploaded to the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "uploadedImagesByIds",
        "description": "Fetch list of images uploaded to shop by ids.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "The URL of the shop's storefront.",
        "required": false,
        "type": null
      },
      {
        "name": "weightUnit",
        "description": "The shop's primary unit of weight for products and shipping.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopAlert",
    "description": "Alert message that appears in the Shopify admin.",
    "fields": [
      {
        "name": "action",
        "description": "Button in the alert that links to related information.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "Description of the alert.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopAlertAction",
    "description": "An action associated to a shop alert.",
    "fields": [
      {
        "name": "title",
        "description": "Action title.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "Action target URL.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ResourceLimit",
    "description": "A resource limit represents the limits that the resource has.",
    "fields": [
      {
        "name": "available",
        "description": "Whether or not the resource is available.",
        "required": false,
        "type": null
      },
      {
        "name": "quantityAvailable",
        "description": "Quantity available. If null the quantity available is unlimited.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "quantityLimit",
        "description": "Quantity limit of the resource. If null the quantity is unlimited.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "quantityUsed",
        "description": "Quantity used of the resource. If null the quantity used cannot be retrieved.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "OnlineStoreBlogEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of OnlineStoreBlogEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OnlineStoreBlog",
    "description": "Shopify stores come with a built-in blogging engine, allowing a shop to have one or more blogs.  Blogs are meant\nto be used as a type of magazine or newsletter for the shop, with content that changes over time.\n",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OnlineStoreArticleEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of OnlineStoreArticleEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OnlineStoreArticle",
    "description": "Represents an article in an OnlineStoreBlog object. Articles appear in reverse chronological order, with the\nmost recent entry at the top of the blog's page. A blog can contain any number of articles.\n",
    "fields": [
      {
        "name": "defaultCursor",
        "description": "A default cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SavedSearchConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SavedSearchEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of SavedSearchEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StringConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StringEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of StringEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OnlineStorePageEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of OnlineStorePageEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OnlineStorePage",
    "description": "A custom page on the Online Store.",
    "fields": [
      {
        "name": "defaultCursor",
        "description": "A default cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "The translations associated with the resource.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopFeatures",
    "description": "Represents the feature set available to the shop.\n",
    "fields": [
      {
        "name": "avalaraAvatax",
        "description": "Whether a shop has access to avalara avatax.",
        "required": false,
        "type": null
      },
      {
        "name": "branding",
        "description": "Branding of the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "captcha",
        "description": "Whether a shop's storefront can have CAPTCHA protection.",
        "required": false,
        "type": null
      },
      {
        "name": "captchaExternalDomains",
        "description": "Whether a shop's storefront can have CAPTCHA protection for domains not managed by Shopify.",
        "required": false,
        "type": null
      },
      {
        "name": "deliveryProfiles",
        "description": "Whether the delivery profiles functionality is enabled for this shop.",
        "required": false,
        "type": null
      },
      {
        "name": "dynamicRemarketing",
        "description": "Whether a shop has access to the dynamic remarketing feature.",
        "required": false,
        "type": null
      },
      {
        "name": "giftCards",
        "description": "Whether a shop can create gift cards.",
        "required": false,
        "type": null
      },
      {
        "name": "harmonizedSystemCode",
        "description": "Display Harmonized System codes on products.  Used for customs when shipping cross-border.",
        "required": false,
        "type": null
      },
      {
        "name": "liveView",
        "description": "Whether to show the live view. Live view is hidden from merchants that are on a trial or don't have a storefront.",
        "required": false,
        "type": null
      },
      {
        "name": "multiLocation",
        "description": "Whether the multi-location functionality is enabled for this shop.",
        "required": false,
        "type": null
      },
      {
        "name": "onboardingVisual",
        "description": "Whether a shop has access to the onboarding visual.",
        "required": false,
        "type": null
      },
      {
        "name": "reports",
        "description": "Whether a shop has access to all reporting features.",
        "required": false,
        "type": null
      },
      {
        "name": "shopifyPlus",
        "description": "Whether the shop has a Shopify Plus subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "showMetrics",
        "description": "Whether to show metrics. Metrics are hidden for new merchants until they become meaningful.",
        "required": false,
        "type": null
      },
      {
        "name": "storefront",
        "description": "Whether the shop has an online storefront.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopPlan",
    "description": "Represents the billing plan of the shop.\n",
    "fields": [
      {
        "name": "displayName",
        "description": "The name of the shop's billing plan.",
        "required": false,
        "type": null
      },
      {
        "name": "partnerDevelopment",
        "description": "Whether the shop is a partner development shop for testing purposes.",
        "required": false,
        "type": null
      },
      {
        "name": "shopifyPlus",
        "description": "Whether the shop has a Shopify Plus subscription.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CurrencySettingConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CurrencySettingEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of CurrencySettingEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CurrencyFormats",
    "description": "Currency formats.",
    "fields": [
      {
        "name": "moneyFormat",
        "description": "HTML without currency.",
        "required": false,
        "type": null
      },
      {
        "name": "moneyInEmailsFormat",
        "description": "Email without currency.",
        "required": false,
        "type": null
      },
      {
        "name": "moneyWithCurrencyFormat",
        "description": "HTML with currency.",
        "required": false,
        "type": null
      },
      {
        "name": "moneyWithCurrencyInEmailsFormat",
        "description": "Email with currency.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of PriceRuleEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryItemConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryItemEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of InventoryItemEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DraftOrderEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StorefrontAccessTokenConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StorefrontAccessTokenEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of StorefrontAccessTokenEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StorefrontAccessToken",
    "description": "Token used to delegate unauthenticated access scopes to clients that need to access the unautheticated Storefront API.\n",
    "fields": [
      {
        "name": "accessScopes",
        "description": "List of permissions associated with the token.",
        "required": false,
        "type": null
      },
      {
        "name": "accessToken",
        "description": "The issued public access token.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the public access token was created.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "An arbitrary title for each token determined by the developer, used for reference         purposes.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the storefront access token was updated.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of AppEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppInstallationConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppInstallationEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of AppInstallationEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "LimitedPendingOrderCount",
    "description": "The total number of pending orders on a shop if less then a maximum, or that maximum.\nThe atMax field indicates when this maximum has been reached.\n",
    "fields": [
      {
        "name": "atMax",
        "description": "This is set when the number of pending orders has reached the maximum.",
        "required": false,
        "type": null
      },
      {
        "name": "count",
        "description": "The number of pendings orders on the shop.\nLimited to a maximum of 10000.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SearchResultConnection",
    "description": "The connection type for SearchResult.",
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "resultsAfterCount",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SearchResultEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of SearchResultEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SearchResult",
    "description": "Represents an individual result returned from a search.",
    "fields": [
      {
        "name": "description",
        "description": "Returns the search result description text.",
        "required": false,
        "type": "String"
      },
      {
        "name": "image",
        "description": "Returns the Image resource presented to accompany a search result.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "reference",
        "description": "Returns the ID of the resource returned in the search result.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Returns the resource title.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "Returns the absolute URL to the resource in the search result.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CountriesInShippingZones",
    "description": "Countries that have been defined in shipping zones for the shop.",
    "fields": [
      {
        "name": "countryCodes",
        "description": "Countries that have been defined in shipping zones.",
        "required": false,
        "type": null
      },
      {
        "name": "includeRestOfWorld",
        "description": "Whether 'Rest of World' has been defined in any shipping zones.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PaymentSettings",
    "description": "Settings related to payments.",
    "fields": [
      {
        "name": "supportedDigitalWallets",
        "description": "List of the digital wallets which the shop supports.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopResourceLimits",
    "description": "Resource limits of a shop.",
    "fields": [
      {
        "name": "locationLimit",
        "description": "Maximum number of locations allowed.",
        "required": false,
        "type": null
      },
      {
        "name": "maxProductOptions",
        "description": "Maximum number of product options allowed.",
        "required": false,
        "type": null
      },
      {
        "name": "maxProductVariants",
        "description": "Maximum number of variants allowed.",
        "required": false,
        "type": null
      },
      {
        "name": "redirectLimitReached",
        "description": "Whether the shop has reached the limit of the number of URL redirects it can make for resources.",
        "required": false,
        "type": null
      },
      {
        "name": "skuResourceLimits",
        "description": "SKU limits. If the shop has unlimited skus the quantity used cannot be retrieved.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SearchFilterOptions",
    "description": "A list of search filters along with their specific options in value and label pair for filtering.",
    "fields": [
      {
        "name": "productAvailability",
        "description": "A list of options that can be use to filter product availability.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FilterOption",
    "description": "A filter option is one possible value in a search filter.",
    "fields": [
      {
        "name": "label",
        "description": "The filter option's label for display purposes.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The filter option's value.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsAccount",
    "description": "Balance and payout information for a\n[Shopify Payments](https://help.shopify.com/manual/payments/shopify-payments/getting-paid-with-shopify-payments)\naccount. Balance includes all balances for the currencies supported by the shop.\nYou can also query for a list of payouts, where each payout includes the corresponding currencyCode field.\n",
    "fields": [
      {
        "name": "activated",
        "description": "Whether the Shopify Payments setup is completed.",
        "required": false,
        "type": null
      },
      {
        "name": "balance",
        "description": "Current balances in all currencies for the account.",
        "required": false,
        "type": null
      },
      {
        "name": "bankAccounts",
        "description": "All bank accounts configured for the Shopify Payments account.",
        "required": false,
        "type": null
      },
      {
        "name": "chargeStatementDescriptor",
        "description": "Statement descriptor used for charges.\n\nThis is what buyers will see on their credit card or bank statements when making a purchase.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "chargeStatementDescriptors",
        "description": "Statement descriptors used for charges.\n\nThis is what buyers will see on their credit card or bank statements when making a purchase.\n",
        "required": false,
        "type": "ShopifyPaymentsChargeStatementDescriptor"
      },
      {
        "name": "country",
        "description": "The Shopify Payments account country.",
        "required": false,
        "type": null
      },
      {
        "name": "defaultCurrency",
        "description": "The default payout currency for the Shopify Payments account.",
        "required": false,
        "type": null
      },
      {
        "name": "disputes",
        "description": "All disputes related to the Shopify Payments account.",
        "required": false,
        "type": null
      },
      {
        "name": "fraudSettings",
        "description": "The fraud settings of the Shopify Payments account.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "notificationSettings",
        "description": "The notifications settings for the account.",
        "required": false,
        "type": null
      },
      {
        "name": "onboardable",
        "description": "Whether the Shopify Payments account can be onboarded.",
        "required": false,
        "type": null
      },
      {
        "name": "payoutSchedule",
        "description": "Payout schedule for the account.",
        "required": false,
        "type": null
      },
      {
        "name": "payoutStatementDescriptor",
        "description": "Descriptor used for payouts.\n\nThis is what merchants will see on their bank statement when receiving a payout.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "payouts",
        "description": "All current and previous payouts made between the account and the bank account.",
        "required": false,
        "type": null
      },
      {
        "name": "permittedVerificationDocuments",
        "description": "The permitted documents for identity verification.",
        "required": false,
        "type": null
      },
      {
        "name": "verifications",
        "description": "The verifications necessary for this account.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsPayoutConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsPayoutEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ShopifyPaymentsPayoutEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsPayout",
    "description": "Payouts represent the movement of money between a merchant's Shopify\nPayments balance and their bank account.\n",
    "fields": [
      {
        "name": "bankAccount",
        "description": "The bank account for the payout.",
        "required": false,
        "type": null
      },
      {
        "name": "gross",
        "description": "The total amount and currency of the payout.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "issuedAt",
        "description": "The exact time when the payout was issued. The payout only contains\nbalance transactions that were available at this time.\n",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "net",
        "description": "The total amount and currency of the payout.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The transfer status of the payout.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "The summary of the payout.",
        "required": false,
        "type": null
      },
      {
        "name": "transactionType",
        "description": "The direction of the payout.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsPayoutSummary",
    "description": "Breakdown of the total fees and gross of each of the different types of transactions associated\nwith the payout.\n",
    "fields": [
      {
        "name": "adjustmentsFee",
        "description": "Total fees for all adjustments including disputes.",
        "required": false,
        "type": null
      },
      {
        "name": "adjustmentsGross",
        "description": "Total gross amount for all adjustments including disputes.",
        "required": false,
        "type": null
      },
      {
        "name": "chargesFee",
        "description": "Total fees for all charges.",
        "required": false,
        "type": null
      },
      {
        "name": "chargesGross",
        "description": "Total gross amount for all charges.",
        "required": false,
        "type": null
      },
      {
        "name": "refundsFee",
        "description": "Total fees for all refunds.",
        "required": false,
        "type": null
      },
      {
        "name": "refundsFeeGross",
        "description": "Total gross amount for all refunds.",
        "required": false,
        "type": null
      },
      {
        "name": "reservedFundsFee",
        "description": "Total fees for all reserved funds.",
        "required": false,
        "type": null
      },
      {
        "name": "reservedFundsGross",
        "description": "Total gross amount for all reserved funds.",
        "required": false,
        "type": null
      },
      {
        "name": "retriedPayoutsFee",
        "description": "Total fees for all retried payouts.",
        "required": false,
        "type": null
      },
      {
        "name": "retriedPayoutsGross",
        "description": "Total gross amount for all retried payouts.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsBankAccount",
    "description": "A bank account that can receive payouts.\n",
    "fields": [
      {
        "name": "accountNumber",
        "description": "The account number of the bank account.\n",
        "required": false,
        "type": null
      },
      {
        "name": "accountNumberLastDigits",
        "description": "The last digits of the account number (the rest is redacted).\n",
        "required": false,
        "type": null
      },
      {
        "name": "bankName",
        "description": "The name of the bank.\n",
        "required": false,
        "type": "String"
      },
      {
        "name": "country",
        "description": "The country of the bank.\n",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date that the bank account was created.",
        "required": false,
        "type": null
      },
      {
        "name": "currency",
        "description": "The currency of the bank account.\n",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "payouts",
        "description": "All current and previous payouts made between the account and the bank account.",
        "required": false,
        "type": null
      },
      {
        "name": "routingNumber",
        "description": "The routing number of the bank account.\n",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the bank account.\n",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsBankAccountConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsBankAccountEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ShopifyPaymentsBankAccountEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsVerification",
    "description": "Each subject (individual) of an account has a verification object giving\n information about the verification state.\n",
    "fields": [
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the verification.",
        "required": false,
        "type": null
      },
      {
        "name": "subject",
        "description": "The subject/individual who has to be verified.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsVerificationSubject",
    "description": "The verification subject represents an individual that has to be verified.",
    "fields": [
      {
        "name": "familyName",
        "description": "The family name of the individual to verify.",
        "required": false,
        "type": null
      },
      {
        "name": "givenName",
        "description": "The given name of the individual to verify.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsVerificationDocument",
    "description": "A document which can be used to verify an individual.",
    "fields": [
      {
        "name": "backRequired",
        "description": "True if the back side of the document is required.",
        "required": false,
        "type": null
      },
      {
        "name": "frontRequired",
        "description": "True if the front side of the document is required.",
        "required": false,
        "type": null
      },
      {
        "name": "type",
        "description": "The type of the document which can be used for verification.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsPayoutSchedule",
    "description": "The payment schedule for a payments account.",
    "fields": [
      {
        "name": "interval",
        "description": "The interval at which payouts are sent to the connected bank account.",
        "required": false,
        "type": null
      },
      {
        "name": "monthlyAnchor",
        "description": "The day of the month funds will be paid out.\n\nThe value can be any day of the month from the 1st to the 31st.\nIf the payment interval is set to monthly, this value will be used.\nPayouts scheduled between 29-31st of the month are sent on the last day of shorter months.\n",
        "required": false,
        "type": "Int"
      },
      {
        "name": "weeklyAnchor",
        "description": "The day of the week funds will be paid out.\n\nThe value can be any weekday from Monday to Friday.\nIf the payment interval is set to weekly, this value will be used.\n",
        "required": false,
        "type": "DayOfTheWeek"
      }
    ]
  },
  {
    "name": "ShopifyPaymentsFraudSettings",
    "description": "The fraud settings of a payments account.",
    "fields": [
      {
        "name": "declineChargeOnAvsFailure",
        "description": "Decline a charge if there is an AVS failure.",
        "required": false,
        "type": null
      },
      {
        "name": "declineChargeOnCvcFailure",
        "description": "Decline a charge if there is an CVC failure.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsNotificationSettings",
    "description": "The notification settings for the account.",
    "fields": [
      {
        "name": "payouts",
        "description": "Receive email notifications when new payouts are sent or payouts fail.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsDisputeConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsDisputeEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ShopifyPaymentsDisputeEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsDispute",
    "description": "A dispute occurs when a buyer questions the legitimacy of a charge with their financial institution.",
    "fields": [
      {
        "name": "amount",
        "description": "The total amount disputed by the cardholder.",
        "required": false,
        "type": null
      },
      {
        "name": "evidenceDueBy",
        "description": "The deadline for evidence submission.",
        "required": false,
        "type": "Date"
      },
      {
        "name": "evidenceSentOn",
        "description": "The date when evidence was sent. Returns null if evidence has not yet been sent.",
        "required": false,
        "type": "Date"
      },
      {
        "name": "finalizedOn",
        "description": "The date when this dispute was resolved. Returns null if the dispute is not yet resolved.",
        "required": false,
        "type": "Date"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "initiatedAt",
        "description": "The date when this dispute was initiated.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "order",
        "description": "The order that contains the charge that is under dispute.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "reasonDetails",
        "description": "The reason of the dispute.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The current state of the dispute.",
        "required": false,
        "type": null
      },
      {
        "name": "type",
        "description": "Indicates if this dispute is still in the inquiry phase or has turned into a chargeback.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsDisputeReasonDetails",
    "description": "Details regarding a dispute reason.",
    "fields": [
      {
        "name": "networkReasonCode",
        "description": "The raw code provided by the payment network.",
        "required": false,
        "type": "String"
      },
      {
        "name": "reason",
        "description": "The reason for the dispute provided by the cardholder's banks.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TenderTransactionConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TenderTransactionEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of TenderTransactionEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TenderTransaction",
    "description": "A tender transaction represents a transaction which modifies the shop's balance.",
    "fields": [
      {
        "name": "amount",
        "description": "The amount and currency of the tender transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "paymentMethod",
        "description": "Information about the payment method used for this transaction.",
        "required": false,
        "type": "String"
      },
      {
        "name": "processedAt",
        "description": "Date and time when the transaction was processed.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "remoteReference",
        "description": "The remote gateway reference associated with the tender transaction.",
        "required": false,
        "type": "String"
      },
      {
        "name": "test",
        "description": "Whether the transaction is a test transaction.",
        "required": false,
        "type": null
      },
      {
        "name": "transactionDetails",
        "description": "Information about the payment instrument used for this transaction.",
        "required": false,
        "type": "TenderTransactionDetails"
      }
    ]
  },
  {
    "name": "TenderTransactionCreditCardDetails",
    "description": "Information about the credit card used for this transaction.",
    "fields": [
      {
        "name": "creditCardCompany",
        "description": "The name of the company that issued the customer's credit card.",
        "required": false,
        "type": "String"
      },
      {
        "name": "creditCardNumber",
        "description": "The customer's credit card number, with most of the leading digits redacted.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "DeletionEventConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeletionEventEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DeletionEventEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeletionEvent",
    "description": "Deletion events chronicle the destruction of resources (e.g. products and collections).\nOnce deleted, the deletion event is the only trace of the original's existence,\nas the resource itself has been removed and can no longer be accessed.\n",
    "fields": [
      {
        "name": "occurredAt",
        "description": "The date and time when the deletion event for the related resource was generated.",
        "required": false,
        "type": null
      },
      {
        "name": "subjectId",
        "description": "The id of the resource that was deleted.",
        "required": false,
        "type": null
      },
      {
        "name": "subjectType",
        "description": "The type of resource that was deleted.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DiscountAutomaticEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticBxgy",
    "description": "An automatic BXGY discount.",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the discount was created.",
        "required": false,
        "type": null
      },
      {
        "name": "customerBuys",
        "description": "The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "customerGets",
        "description": "The qualifying items in an order, the quantity of each one, and the total value of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "endsAt",
        "description": "The date and time when the discount ends. For open-ended discounts, use `null`.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "events",
        "description": "The paginated list of events associated with the host subject.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "A legacy unique identifier for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "startsAt",
        "description": "The date and time when the discount starts.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "A detailed summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "usageCount",
        "description": "The number of times that the discount has been used.",
        "required": false,
        "type": null
      },
      {
        "name": "usesPerOrderLimit",
        "description": "The maximum number of times that the discount can be applied to an order.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "DiscountCustomerGets",
    "description": "The qualifying items in an order, the quantity of each one, and the total value of the discount.",
    "fields": [
      {
        "name": "items",
        "description": "Entitled items.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "Entitled quantity and the discount value.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountOnQuantity",
    "description": "The quantity of items discounted, the discount value, and how the discount will be applied.",
    "fields": [
      {
        "name": "effect",
        "description": "The discount's effect on qualifying items.",
        "required": false,
        "type": null
      },
      {
        "name": "quantity",
        "description": "The number of items being discounted.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountQuantity",
    "description": "The quantity of items in discount.",
    "fields": [
      {
        "name": "quantity",
        "description": "The quantity of items.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountPercentage",
    "description": "The percentage value of the discount.",
    "fields": [
      {
        "name": "percentage",
        "description": "The percentage value of the discount.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAmount",
    "description": "The fixed amount value of a discount.",
    "fields": [
      {
        "name": "amount",
        "description": "The value of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "appliesOnEachItem",
        "description": "If true, then the discount is applied to each of the entitled items. If false, then the amount is split across all of the entitled items.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AllDiscountItems",
    "description": "Whether all items in the cart are entitled to the discount.",
    "fields": [
      {
        "name": "allItems",
        "description": "Whether all items are selected. The value is hardcoded to `true`.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountProducts",
    "description": "The entitled or prerequisite products and product variants for a discount.",
    "fields": [
      {
        "name": "productVariants",
        "description": "A list of product variants that the discount can have as a prerequisite or entitlement.",
        "required": false,
        "type": null
      },
      {
        "name": "products",
        "description": "A list of products that the discount can have as a prerequisite or entitlement.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCollections",
    "description": "A list of collections that the discount can have as a prerequisite or entitlement.",
    "fields": [
      {
        "name": "collections",
        "description": "A list of collections that the discount can have as a prerequisite or entitlement.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCustomerBuys",
    "description": "The prerequisite items and prerequisite value.",
    "fields": [
      {
        "name": "items",
        "description": "The prerequisite items for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The prerequisite value.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticBasic",
    "description": "An automatic basic discount.",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the discount was created.",
        "required": false,
        "type": null
      },
      {
        "name": "customerGets",
        "description": "The qualifying items in an order, the quantity of each one, and the total value of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "endsAt",
        "description": "The date and time when the discount ends. For open-ended discounts, use `null`.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "minimumRequirement",
        "description": "The minimum subtotal or quantity that's required for the discount to be applied.",
        "required": false,
        "type": null
      },
      {
        "name": "shortSummary",
        "description": "A short summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "startsAt",
        "description": "The date and time when the discount starts.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "A detailed summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "usageCount",
        "description": "The number of times that the discount has been used.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountMinimumQuantity",
    "description": "The minimum quantity of items required for the discount to apply.",
    "fields": [
      {
        "name": "greaterThanOrEqualToQuantity",
        "description": "The minimum quantity of items that's required for the discount to be applied.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountMinimumSubtotal",
    "description": "The minimum subtotal required for the discount to apply.",
    "fields": [
      {
        "name": "greaterThanOrEqualToSubtotal",
        "description": "The minimum subtotal that's required for the discount to be applied.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticNode",
    "description": "An automatic discount wrapper node.",
    "fields": [
      {
        "name": "automaticDiscount",
        "description": "An automatic discount.",
        "required": false,
        "type": null
      },
      {
        "name": "events",
        "description": "The paginated list of events associated with the host subject.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticNodeConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticNodeEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DiscountAutomaticNodeEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeNode",
    "description": "A code discount wrapper node.",
    "fields": [
      {
        "name": "codeDiscount",
        "description": "A code discount.",
        "required": false,
        "type": null
      },
      {
        "name": "events",
        "description": "The paginated list of events associated with the host subject.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeBasic",
    "description": "A basic code discount.",
    "fields": [
      {
        "name": "appliesOncePerCustomer",
        "description": "Whether the discount can be applied only once per customer.",
        "required": false,
        "type": null
      },
      {
        "name": "asyncUsageCount",
        "description": "The number of times that the discount has been used.",
        "required": false,
        "type": null
      },
      {
        "name": "codeCount",
        "description": "The number of redeem codes for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "codes",
        "description": "A list of redeem codes for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the discount was created.",
        "required": false,
        "type": null
      },
      {
        "name": "customerGets",
        "description": "The qualifying items in an order, the quantity of each one, and the total value of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "customerSelection",
        "description": "The customers that can use the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "endsAt",
        "description": "The date and time when the discount ends. For open-ended discounts, use `null`.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "minimumRequirement",
        "description": "The minimum subtotal or quantity that's required for the discount to be applied.",
        "required": false,
        "type": "DiscountMinimumRequirement"
      },
      {
        "name": "shortSummary",
        "description": "A short summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "startsAt",
        "description": "The date and time when the discount starts.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "A detailed summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the Discount.",
        "required": false,
        "type": null
      },
      {
        "name": "usageLimit",
        "description": "The maximum number of times the code discount can be used.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "DiscountRedeemCodeConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountRedeemCodeEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DiscountRedeemCodeEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountRedeemCode",
    "description": "A redeem code for a code discount.",
    "fields": [
      {
        "name": "code",
        "description": "The code of a discount.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCustomerAll",
    "description": "Whether the discount applies to all customers.",
    "fields": [
      {
        "name": "allCustomers",
        "description": "Always true when resolved to this type.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCustomers",
    "description": "A list of customers to whom the discount applies.",
    "fields": [
      {
        "name": "customers",
        "description": "A list of the customers that can use the discount.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCustomerSavedSearches",
    "description": "A list of customer saved searches that contain the customers to whom the discount applies.",
    "fields": [
      {
        "name": "savedSearches",
        "description": "A list of customer saved searches that contain the customers who are eligible to use the discount.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeBxgy",
    "description": "A BXGY code discount.",
    "fields": [
      {
        "name": "appliesOncePerCustomer",
        "description": "Whether the discount can be applied only once per customer.",
        "required": false,
        "type": null
      },
      {
        "name": "asyncUsageCount",
        "description": "The number of times that the discount has been used.",
        "required": false,
        "type": null
      },
      {
        "name": "codeCount",
        "description": "The number of redeem codes for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "codes",
        "description": "A list of redeem codes for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the discount was created.",
        "required": false,
        "type": null
      },
      {
        "name": "customerBuys",
        "description": "The qualifying items and the quantity of each one that the customer has to buy to be eligible for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "customerGets",
        "description": "The qualifying items in an order, the quantity of each one, and the total value of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "customerSelection",
        "description": "The customers that can use the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "endsAt",
        "description": "The date and time when the discount ends. For open-ended discounts, use `null`.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "startsAt",
        "description": "The date and time when the discount starts.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "A detailed summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the Discount.",
        "required": false,
        "type": null
      },
      {
        "name": "usageLimit",
        "description": "The maximum number of times the code discount can be used.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "usesPerOrderLimit",
        "description": "The maximum number of times that the discount can be applied to an order.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "DiscountCodeFreeShipping",
    "description": "A free shipping code discount.",
    "fields": [
      {
        "name": "appliesOncePerCustomer",
        "description": "Whether the discount can be applied only once per customer.",
        "required": false,
        "type": null
      },
      {
        "name": "asyncUsageCount",
        "description": "The number of times that the discount has been used.",
        "required": false,
        "type": null
      },
      {
        "name": "codeCount",
        "description": "The number of redeem codes for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "codes",
        "description": "A list of redeem codes for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the discount was created.",
        "required": false,
        "type": null
      },
      {
        "name": "customerSelection",
        "description": "The customers that can use the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "destinationSelection",
        "description": "A shipping destination that qualifies for the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "endsAt",
        "description": "The date and time when the discount ends. For open-ended discounts, use `null`.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "minimumRequirement",
        "description": "The minimum subtotal or quantity that's required for the discount to be applied.",
        "required": false,
        "type": "DiscountMinimumRequirement"
      },
      {
        "name": "shortSummary",
        "description": "A short summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "startsAt",
        "description": "The date and time when the discount starts.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "The status of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "summary",
        "description": "A detailed summary of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "usageLimit",
        "description": "The maximum number of times the code discount can be used.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "DiscountCountryAll",
    "description": "Whether the discount applies to all countries.",
    "fields": [
      {
        "name": "allCountries",
        "description": "Always true when resolved to this type.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCountries",
    "description": "The shipping destination where the discount applies.",
    "fields": [
      {
        "name": "countries",
        "description": "The codes for the countries where the discount can be used.",
        "required": false,
        "type": null
      },
      {
        "name": "includeRestOfWorld",
        "description": "Whether the discount is applicable to countries that have not been defined in the shop's shipping zones.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeNodeConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeNodeEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DiscountCodeNodeEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ScriptTagConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ScriptTagEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of ScriptTagEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "WebhookSubscription",
    "description": "Represents a subscription to a webhook.\n",
    "fields": [
      {
        "name": "callbackUrl",
        "description": "URL where the webhook subscription should send the POST request when the event occurs.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the webhook subscription was created.",
        "required": false,
        "type": null
      },
      {
        "name": "format",
        "description": "The format in which the webhook subscription should send the data.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "includeFields",
        "description": "The list of fields to be included in the webhook subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "metafieldNamespaces",
        "description": "The list of namespaces for any metafields that should be included in the webhook subscription.",
        "required": false,
        "type": null
      },
      {
        "name": "topic",
        "description": "The type of event that triggers the webhook.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the webhook subscription was updated.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "WebhookSubscriptionConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "WebhookSubscriptionEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of WebhookSubscriptionEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldStorefrontVisibility",
    "description": "Represents a whitelist record that enables a metafield to be visible to the storefront.\n",
    "fields": [
      {
        "name": "createdAt",
        "description": "The date and time when the whitelist record was created.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "key",
        "description": "Key of a metafield in the visibility whitelist.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyResourceId",
        "description": "The ID of the corresponding resource in the REST Admin API.",
        "required": false,
        "type": null
      },
      {
        "name": "namespace",
        "description": "Namespace of a metafield in the visibility whitelist.",
        "required": false,
        "type": null
      },
      {
        "name": "ownerType",
        "description": "Owner type of a metafield in the visibility whitelist.",
        "required": false,
        "type": null
      },
      {
        "name": "updatedAt",
        "description": "The date and time when the whitelist record was updated.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldStorefrontVisibilityConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldStorefrontVisibilityEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of MetafieldStorefrontVisibilityEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProfileConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryProfileEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DeliveryProfileEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliverySetting",
    "description": "Delivery shop-level settings.",
    "fields": [
      {
        "name": "legacyModeBlocked",
        "description": "Whether the shop is blocked from converting to full multi-location delivery profiles mode. If the shop is blocked, then the blocking reasons are also returned.",
        "required": false,
        "type": null
      },
      {
        "name": "legacyModeProfiles",
        "description": "Enables legacy compatability mode for the multi-location delivery profiles feature.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryLegacyModeBlocked",
    "description": "Whether the shop is blocked from converting to full multi-location delivery profiles mode. If the shop is blocked, then the blocking reasons are also returned.",
    "fields": [
      {
        "name": "blocked",
        "description": "Whether the shop can convert to full multi-location delivery profiles mode.",
        "required": false,
        "type": null
      },
      {
        "name": "reasons",
        "description": "The reasons why the shop is blocked from converting to full multi-location delivery profiles mode.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCarrierServiceEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of DeliveryCarrierServiceEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopLocale",
    "description": "Available locale for a shop.",
    "fields": [
      {
        "name": "locale",
        "description": "Locale identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Locale name.",
        "required": false,
        "type": null
      },
      {
        "name": "primary",
        "description": "Whether or not this is the default locale for the shop.",
        "required": false,
        "type": null
      },
      {
        "name": "published",
        "description": "Whether or not the locale is published.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TranslatableResourceConnection",
    "description": null,
    "fields": [
      {
        "name": "edges",
        "description": "A list of edges.",
        "required": false,
        "type": null
      },
      {
        "name": "pageInfo",
        "description": "Information to aid in pagination.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TranslatableResourceEdge",
    "description": null,
    "fields": [
      {
        "name": "cursor",
        "description": "A cursor for use in pagination.",
        "required": false,
        "type": null
      },
      {
        "name": "node",
        "description": "The item at the end of TranslatableResourceEdge.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TranslatableResource",
    "description": "A resource that has translatable fields.",
    "fields": [
      {
        "name": "resourceId",
        "description": "GID of the resource.",
        "required": false,
        "type": null
      },
      {
        "name": "translatableContent",
        "description": "Translatable content.",
        "required": false,
        "type": null
      },
      {
        "name": "translations",
        "description": "Translatable content translations.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TranslatableContent",
    "description": "Translatable content of a resource's field.",
    "fields": [
      {
        "name": "digest",
        "description": "Digest (hash) of the content.",
        "required": false,
        "type": "String"
      },
      {
        "name": "key",
        "description": "Content key.",
        "required": false,
        "type": null
      },
      {
        "name": "locale",
        "description": "Content locale.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "Content value.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "Translation",
    "description": "Translation of a field of a resource.",
    "fields": [
      {
        "name": "key",
        "description": "Translation key.",
        "required": false,
        "type": null
      },
      {
        "name": "locale",
        "description": "Translation locale.",
        "required": false,
        "type": null
      },
      {
        "name": "outdated",
        "description": "Marked as outdated.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "Translation value.",
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "ApiVersion",
    "description": "A version of the API.",
    "fields": [
      {
        "name": "displayName",
        "description": "The human-readable name of the version.",
        "required": false,
        "type": null
      },
      {
        "name": "handle",
        "description": "The unique identifier of an ApiVersion. All supported API versions have a date-based (YYYY-MM) or `unstable` handle.",
        "required": false,
        "type": null
      },
      {
        "name": "supported",
        "description": "Whether the version is supported by Shopify.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryCarrierServiceAndLocations",
    "description": "A carrier services and their set of shop locations that can be used.",
    "fields": [
      {
        "name": "carrierService",
        "description": "The carrier service.",
        "required": false,
        "type": null
      },
      {
        "name": "locations",
        "description": "The locations that support this carrier service.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "BulkOperation",
    "description": "An asynchronous long-running operation to fetch data in bulk.\n\nBulk operations are created using the `bulkOperationRunQuery` mutation. After they are created,\nclients should poll the `status` field for updates. When `COMPLETED`, the `url` field contains\na link to the data in [JSONL](http://jsonlines.org/) format.\n\nSee the [bulk operations guide](https://help.shopify.com/api/guides/bulk-operations) for more details.\n",
    "fields": [
      {
        "name": "completedAt",
        "description": "When the bulk operation was successfully completed.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "createdAt",
        "description": "When the bulk operation was created.",
        "required": false,
        "type": null
      },
      {
        "name": "errorCode",
        "description": "Error code for failed operations.",
        "required": false,
        "type": "BulkOperationErrorCode"
      },
      {
        "name": "fileSize",
        "description": "File size in bytes of the file in the `url` field.",
        "required": false,
        "type": "UnsignedInt64"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "objectCount",
        "description": "The running count of objects processed. This can be used to track operation progress.",
        "required": false,
        "type": null
      },
      {
        "name": "partialDataUrl",
        "description": "URL to partial/incomplete response data (in [JSONL](http://jsonlines.org/) format) returned by a failed operation.\nExpires **one week** after the operation fails. Returns `null` when there's no data available.\n",
        "required": false,
        "type": "URL"
      },
      {
        "name": "query",
        "description": "GraphQL query document specified in `bulkOperationRunQuery`.",
        "required": false,
        "type": null
      },
      {
        "name": "status",
        "description": "Status of the bulk operation.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "URL to the response data in [JSONL](http://jsonlines.org/) format.\nExpires **one week** after the operation completes.\n",
        "required": false,
        "type": "URL"
      }
    ]
  },
  {
    "name": "Mutation",
    "description": null,
    "fields": [
      {
        "name": "appCreditCreate",
        "description": "Allows an app to create a credit for a shop that can be used towards future app purchases.",
        "required": false,
        "type": "AppCreditCreatePayload"
      },
      {
        "name": "appPurchaseOneTimeCreate",
        "description": "Allows an app to charge a shop for features or services one time.",
        "required": false,
        "type": "AppPurchaseOneTimeCreatePayload"
      },
      {
        "name": "appSubscriptionCancel",
        "description": "Cancels an app subscription on a store.",
        "required": false,
        "type": "AppSubscriptionCancelPayload"
      },
      {
        "name": "appSubscriptionCreate",
        "description": "Allows an app to charge a store for features or services on a recurring basis.",
        "required": false,
        "type": "AppSubscriptionCreatePayload"
      },
      {
        "name": "appSubscriptionLineItemUpdate",
        "description": "Updates the app plan's pricing details attached to an app subscription.",
        "required": false,
        "type": "AppSubscriptionLineItemUpdatePayload"
      },
      {
        "name": "appUsageRecordCreate",
        "description": "Allows an app to charge a store for usage.",
        "required": false,
        "type": "AppUsageRecordCreatePayload"
      },
      {
        "name": "bulkOperationCancel",
        "description": "Starts the cancelation process of a running bulk operation.\n\nThere may be a short delay from when a cancelation starts until the operation is actually canceled.\n",
        "required": false,
        "type": "BulkOperationCancelPayload"
      },
      {
        "name": "bulkOperationRunQuery",
        "description": "Creates and runs a bulk operation query.\n\nSee the [bulk operations guide](https://help.shopify.com/api/guides/bulk-operations) for more details.\n",
        "required": false,
        "type": "BulkOperationRunQueryPayload"
      },
      {
        "name": "collectionAddProducts",
        "description": "Adds products to a collection.",
        "required": false,
        "type": "CollectionAddProductsPayload"
      },
      {
        "name": "collectionCreate",
        "description": "Creates a collection.\n",
        "required": false,
        "type": "CollectionCreatePayload"
      },
      {
        "name": "collectionDelete",
        "description": "Deletes a collection.",
        "required": false,
        "type": "CollectionDeletePayload"
      },
      {
        "name": "collectionPublish",
        "description": "Publishes a collection to a channel.",
        "required": false,
        "type": "CollectionPublishPayload"
      },
      {
        "name": "collectionRemoveProducts",
        "description": "Removes a set of products from a given collection. It can take a long time to run. Instead of returning a collection it returns a job, which should be polled.",
        "required": false,
        "type": "CollectionRemoveProductsPayload"
      },
      {
        "name": "collectionReorderProducts",
        "description": "Asynchronously reorders a set of products from a given collection.",
        "required": false,
        "type": "CollectionReorderProductsPayload"
      },
      {
        "name": "collectionUnpublish",
        "description": "Unpublishes a collection.",
        "required": false,
        "type": "CollectionUnpublishPayload"
      },
      {
        "name": "collectionUpdate",
        "description": "Updates a collection.",
        "required": false,
        "type": "CollectionUpdatePayload"
      },
      {
        "name": "customerAddTaxExemptions",
        "description": "Add tax exemptions to a customer.",
        "required": false,
        "type": "CustomerAddTaxExemptionsPayload"
      },
      {
        "name": "customerCreate",
        "description": "Creates a new customer.",
        "required": false,
        "type": "CustomerCreatePayload"
      },
      {
        "name": "customerDelete",
        "description": "Deletes a customer.",
        "required": false,
        "type": "CustomerDeletePayload"
      },
      {
        "name": "customerRemoveTaxExemptions",
        "description": "Remove tax exemptions from a customer.",
        "required": false,
        "type": "CustomerRemoveTaxExemptionsPayload"
      },
      {
        "name": "customerReplaceTaxExemptions",
        "description": "Replace tax exemptions on a customer.",
        "required": false,
        "type": "CustomerReplaceTaxExemptionsPayload"
      },
      {
        "name": "customerUpdate",
        "description": "Updates a customer's attributes.",
        "required": false,
        "type": "CustomerUpdatePayload"
      },
      {
        "name": "customerUpdateDefaultAddress",
        "description": "Updates a customer's default address.",
        "required": false,
        "type": "CustomerUpdateDefaultAddressPayload"
      },
      {
        "name": "deliveryProfileCreate",
        "description": "Creates a delivery profile.",
        "required": false,
        "type": "deliveryProfileCreatePayload"
      },
      {
        "name": "deliveryProfileRemove",
        "description": "Enqueues the deletion/removal of a delivery profile.",
        "required": false,
        "type": "deliveryProfileRemovePayload"
      },
      {
        "name": "deliveryProfileUpdate",
        "description": "Updates a delivery profile.",
        "required": false,
        "type": "deliveryProfileUpdatePayload"
      },
      {
        "name": "deliverySettingUpdate",
        "description": "Set the delivery settings for a shop.",
        "required": false,
        "type": "DeliverySettingUpdatePayload"
      },
      {
        "name": "deliveryShippingOriginAssign",
        "description": "Assign a location as the shipping origin while in legacy compatibility mode profiles.",
        "required": false,
        "type": "DeliveryShippingOriginAssignPayload"
      },
      {
        "name": "discountAutomaticActivate",
        "description": "Activates the automatic discount.",
        "required": false,
        "type": "DiscountAutomaticActivatePayload"
      },
      {
        "name": "discountAutomaticBasicCreate",
        "description": "Creates a basic automatic discount.",
        "required": false,
        "type": "DiscountAutomaticBasicCreatePayload"
      },
      {
        "name": "discountAutomaticBasicUpdate",
        "description": "Update basic automatic discount using its id and input.",
        "required": false,
        "type": "DiscountAutomaticBasicUpdatePayload"
      },
      {
        "name": "discountAutomaticBulkDelete",
        "description": "Asynchronously delete automatic discounts in bulk if a `search` or `saved_search_id` argument is provided or if a\nmaximum discount threshold is reached (1,000). Otherwise, deletions will occur inline.\n**Warning:** All automatic discounts will be deleted if a blank `search` argument is provided.\n",
        "required": false,
        "type": "DiscountAutomaticBulkDeletePayload"
      },
      {
        "name": "discountAutomaticBxgyCreate",
        "description": "Creates a BXGY automatic discount.",
        "required": false,
        "type": "DiscountAutomaticBxgyCreatePayload"
      },
      {
        "name": "discountAutomaticBxgyUpdate",
        "description": "Updates a BXGY automatic discount using its ID and input.",
        "required": false,
        "type": "DiscountAutomaticBxgyUpdatePayload"
      },
      {
        "name": "discountAutomaticDeactivate",
        "description": "Deactivates the automatic discount.",
        "required": false,
        "type": "DiscountAutomaticDeactivatePayload"
      },
      {
        "name": "discountAutomaticDelete",
        "description": "Deletes the automatic discount.",
        "required": false,
        "type": "DiscountAutomaticDeletePayload"
      },
      {
        "name": "discountCodeActivate",
        "description": "Activates a code discount.",
        "required": false,
        "type": "DiscountCodeActivatePayload"
      },
      {
        "name": "discountCodeBasicCreate",
        "description": "Creates a basic code discount.",
        "required": false,
        "type": "DiscountCodeBasicCreatePayload"
      },
      {
        "name": "discountCodeBasicUpdate",
        "description": "Updates a basic code discount.",
        "required": false,
        "type": "DiscountCodeBasicUpdatePayload"
      },
      {
        "name": "discountCodeBxgyCreate",
        "description": "Creates a BXGY code discount.",
        "required": false,
        "type": "DiscountCodeBxgyCreatePayload"
      },
      {
        "name": "discountCodeBxgyUpdate",
        "description": "Updates a BXGY code discount.",
        "required": false,
        "type": "DiscountCodeBxgyUpdatePayload"
      },
      {
        "name": "discountCodeDeactivate",
        "description": "Deactivates the code discount.",
        "required": false,
        "type": "DiscountCodeDeactivatePayload"
      },
      {
        "name": "discountCodeDelete",
        "description": "Deletes the code discount.",
        "required": false,
        "type": "DiscountCodeDeletePayload"
      },
      {
        "name": "discountCodeFreeShippingCreate",
        "description": "Creates a free shipping code discount.",
        "required": false,
        "type": "DiscountCodeFreeShippingCreatePayload"
      },
      {
        "name": "discountCodeFreeShippingUpdate",
        "description": "Updates a free shipping code discount.",
        "required": false,
        "type": "DiscountCodeFreeShippingUpdatePayload"
      },
      {
        "name": "draftOrderCalculate",
        "description": "Calculates the properties of a draft order. Useful for determining information\nsuch as total taxes or price without actually creating a draft order.\n",
        "required": false,
        "type": "DraftOrderCalculatePayload"
      },
      {
        "name": "draftOrderComplete",
        "description": "Completes a draft order.",
        "required": false,
        "type": "DraftOrderCompletePayload"
      },
      {
        "name": "draftOrderCreate",
        "description": "Creates a draft order.",
        "required": false,
        "type": "DraftOrderCreatePayload"
      },
      {
        "name": "draftOrderDelete",
        "description": "Deletes a draft order.",
        "required": false,
        "type": "DraftOrderDeletePayload"
      },
      {
        "name": "draftOrderInvoicePreview",
        "description": "Previews a draft order invoice email.",
        "required": false,
        "type": "DraftOrderInvoicePreviewPayload"
      },
      {
        "name": "draftOrderInvoiceSend",
        "description": "Sends an email invoice for a draft order.",
        "required": false,
        "type": "DraftOrderInvoiceSendPayload"
      },
      {
        "name": "draftOrderUpdate",
        "description": "Updates a draft order.",
        "required": false,
        "type": "DraftOrderUpdatePayload"
      },
      {
        "name": "flowTriggerReceive",
        "description": "Triggers a workflow defined by the merchant in Shopify Flow. To learn more, see [_Create Shopify Flow triggers_](https://help.shopify.com/api/embedded-apps/app-extensions/flow/create-triggers).",
        "required": false,
        "type": "FlowTriggerReceivePayload"
      },
      {
        "name": "fulfillmentCreate",
        "description": "Creates a fulfillment for an order.",
        "required": false,
        "type": "FulfillmentCreatePayload"
      },
      {
        "name": "fulfillmentServiceCreate",
        "description": "Creates a fulfillment service.",
        "required": false,
        "type": "FulfillmentServiceCreatePayload"
      },
      {
        "name": "fulfillmentServiceDelete",
        "description": "Deletes a fulfillment service.",
        "required": false,
        "type": "FulfillmentServiceDeletePayload"
      },
      {
        "name": "fulfillmentServiceUpdate",
        "description": "Updates a fulfillment service.",
        "required": false,
        "type": "FulfillmentServiceUpdatePayload"
      },
      {
        "name": "fulfillmentTrackingInfoUpdate",
        "description": "Updates tracking information for a fulfillment.",
        "required": false,
        "type": "FulfillmentTrackingInfoUpdatePayload"
      },
      {
        "name": "inventoryActivate",
        "description": "Activate an inventory item at a location.",
        "required": false,
        "type": "InventoryActivatePayload"
      },
      {
        "name": "inventoryAdjustQuantity",
        "description": "Adjusts the inventory by a certain quantity.",
        "required": false,
        "type": "InventoryAdjustQuantityPayload"
      },
      {
        "name": "inventoryBulkAdjustQuantityAtLocation",
        "description": "Adjusts the inventory at a location for multiple inventory items.",
        "required": false,
        "type": "InventoryBulkAdjustQuantityAtLocationPayload"
      },
      {
        "name": "inventoryDeactivate",
        "description": "Deactivate an inventory item at a location.",
        "required": false,
        "type": "InventoryDeactivatePayload"
      },
      {
        "name": "inventoryItemUpdate",
        "description": "Updates an inventory item.",
        "required": false,
        "type": "InventoryItemUpdatePayload"
      },
      {
        "name": "kitSkillTriggerRequest",
        "description": "Kit Skill requested by developer for app and shop.",
        "required": false,
        "type": "KitSkillTriggerRequestPayload"
      },
      {
        "name": "marketingActivityUpdate",
        "description": "Updates a marketing activity.",
        "required": false,
        "type": "MarketingActivityUpdatePayload"
      },
      {
        "name": "marketingEngagementCreate",
        "description": "Creates a new marketing event engagement for a marketing activity.",
        "required": false,
        "type": "MarketingEngagementCreatePayload"
      },
      {
        "name": "metafieldDelete",
        "description": null,
        "required": false,
        "type": "MetafieldDeletePayload"
      },
      {
        "name": "metafieldStorefrontVisibilityCreate",
        "description": "Makes a Metafield with a specific namespace and key visible to the storefront API.\n",
        "required": false,
        "type": "MetafieldStorefrontVisibilityCreatePayload"
      },
      {
        "name": "metafieldStorefrontVisibilityDelete",
        "description": "Deletes a Metafield Storefront Visibility.\n",
        "required": false,
        "type": "MetafieldStorefrontVisibilityDeletePayload"
      },
      {
        "name": "orderCapture",
        "description": "Captures from an authorized transaction on an order.",
        "required": false,
        "type": "OrderCapturePayload"
      },
      {
        "name": "orderClose",
        "description": "Closes an open order.\n",
        "required": false,
        "type": "OrderClosePayload"
      },
      {
        "name": "orderMarkAsPaid",
        "description": "Marks an order as paid.\n",
        "required": false,
        "type": "OrderMarkAsPaidPayload"
      },
      {
        "name": "orderOpen",
        "description": "Opens a closed order.\n",
        "required": false,
        "type": "OrderOpenPayload"
      },
      {
        "name": "orderUpdate",
        "description": "Updates an order.",
        "required": false,
        "type": "OrderUpdatePayload"
      },
      {
        "name": "priceRuleActivate",
        "description": "Activate a price rule.",
        "required": false,
        "type": "PriceRuleActivatePayload"
      },
      {
        "name": "priceRuleCreate",
        "description": "Create a price rule using the input.",
        "required": false,
        "type": "PriceRuleCreatePayload"
      },
      {
        "name": "priceRuleDeactivate",
        "description": "Deactivate a price rule.",
        "required": false,
        "type": "PriceRuleDeactivatePayload"
      },
      {
        "name": "priceRuleDelete",
        "description": "Delete a price rule.",
        "required": false,
        "type": "PriceRuleDeletePayload"
      },
      {
        "name": "priceRuleDiscountCodeCreate",
        "description": "Create a discount code for a price rule.",
        "required": false,
        "type": "PriceRuleDiscountCodeCreatePayload"
      },
      {
        "name": "priceRuleDiscountCodeUpdate",
        "description": "Update a discount code for a price rule.",
        "required": false,
        "type": "PriceRuleDiscountCodeUpdatePayload"
      },
      {
        "name": "priceRuleUpdate",
        "description": "Update a price rule using its id and an input.",
        "required": false,
        "type": "PriceRuleUpdatePayload"
      },
      {
        "name": "privateMetafieldDelete",
        "description": "Deletes a private metafield.\n",
        "required": false,
        "type": "PrivateMetafieldDeletePayload"
      },
      {
        "name": "privateMetafieldUpsert",
        "description": "Creates or update a private metafield.\n",
        "required": false,
        "type": "PrivateMetafieldUpsertPayload"
      },
      {
        "name": "productAppendImages",
        "description": "Appends images to a product.",
        "required": false,
        "type": "ProductAppendImagesPayload"
      },
      {
        "name": "productCreate",
        "description": "Creates a product.",
        "required": false,
        "type": "ProductCreatePayload"
      },
      {
        "name": "productDelete",
        "description": "Deletes a product.",
        "required": false,
        "type": "ProductDeletePayload"
      },
      {
        "name": "productDeleteImages",
        "description": "Removes a product images from the product.",
        "required": false,
        "type": "ProductDeleteImagesPayload"
      },
      {
        "name": "productDuplicate",
        "description": "Duplicates a product.",
        "required": false,
        "type": "ProductDuplicatePayload"
      },
      {
        "name": "productImageUpdate",
        "description": "Updates an image of a product.",
        "required": false,
        "type": "ProductImageUpdatePayload"
      },
      {
        "name": "productPublish",
        "description": "Publishes a product.",
        "required": false,
        "type": "ProductPublishPayload"
      },
      {
        "name": "productReorderImages",
        "description": "Asynchronously reorders a set of images for a given product.",
        "required": false,
        "type": "ProductReorderImagesPayload"
      },
      {
        "name": "productUnpublish",
        "description": "Unpublishes a product.",
        "required": false,
        "type": "ProductUnpublishPayload"
      },
      {
        "name": "productUpdate",
        "description": "Updates a product.",
        "required": false,
        "type": "ProductUpdatePayload"
      },
      {
        "name": "productVariantCreate",
        "description": "Creates a product variant.",
        "required": false,
        "type": "ProductVariantCreatePayload"
      },
      {
        "name": "productVariantDelete",
        "description": "Deletes a product variant.",
        "required": false,
        "type": "ProductVariantDeletePayload"
      },
      {
        "name": "productVariantUpdate",
        "description": "Updates a product variant.",
        "required": false,
        "type": "ProductVariantUpdatePayload"
      },
      {
        "name": "publishablePublish",
        "description": "Publishes a resource to a channel.",
        "required": false,
        "type": "PublishablePublishPayload"
      },
      {
        "name": "publishablePublishToCurrentChannel",
        "description": "Publishes a resource to current channel.",
        "required": false,
        "type": "PublishablePublishToCurrentChannelPayload"
      },
      {
        "name": "publishableUnpublish",
        "description": "Unpublishes a resource to a channel.",
        "required": false,
        "type": "PublishableUnpublishPayload"
      },
      {
        "name": "publishableUnpublishToCurrentChannel",
        "description": "Unpublishes a resource to current channel.",
        "required": false,
        "type": "PublishableUnpublishToCurrentChannelPayload"
      },
      {
        "name": "refundCreate",
        "description": "Creates a refund.",
        "required": false,
        "type": "RefundCreatePayload"
      },
      {
        "name": "savedSearchCreate",
        "description": "Creates a saved search.",
        "required": false,
        "type": "SavedSearchCreatePayload"
      },
      {
        "name": "savedSearchDelete",
        "description": "Delete a saved search.",
        "required": false,
        "type": "SavedSearchDeletePayload"
      },
      {
        "name": "savedSearchUpdate",
        "description": "Update a saved search.",
        "required": false,
        "type": "SavedSearchUpdatePayload"
      },
      {
        "name": "scriptTagCreate",
        "description": "Creates a new script tag.\n",
        "required": false,
        "type": "ScriptTagCreatePayload"
      },
      {
        "name": "scriptTagDelete",
        "description": "Deletes a script tag.\n",
        "required": false,
        "type": "ScriptTagDeletePayload"
      },
      {
        "name": "scriptTagUpdate",
        "description": "Updates a script tag.\n",
        "required": false,
        "type": "ScriptTagUpdatePayload"
      },
      {
        "name": "shippingPackageDelete",
        "description": "Deletes a shipping package.",
        "required": false,
        "type": "ShippingPackageDeletePayload"
      },
      {
        "name": "shippingPackageMakeDefault",
        "description": "Sets a Shipping Package as the default shipping package. The default shipping package is the one used to calculate shipping costs on checkout.",
        "required": false,
        "type": "ShippingPackageMakeDefaultPayload"
      },
      {
        "name": "shippingPackageUpdate",
        "description": "Updates a custom shipping package.",
        "required": false,
        "type": "ShippingPackageUpdatePayload"
      },
      {
        "name": "shopLocaleDisable",
        "description": "Disables a locale for a shop.",
        "required": false,
        "type": "ShopLocaleDisablePayload"
      },
      {
        "name": "shopLocaleEnable",
        "description": "Enables a locale for a shop.",
        "required": false,
        "type": "ShopLocaleEnablePayload"
      },
      {
        "name": "shopLocaleUpdate",
        "description": "Updates a locale for a shop.",
        "required": false,
        "type": "ShopLocaleUpdatePayload"
      },
      {
        "name": "stagedUploadTargetGenerate",
        "description": null,
        "required": false,
        "type": "StagedUploadTargetGeneratePayload"
      },
      {
        "name": "stagedUploadTargetsGenerate",
        "description": "Uploads multiple images.",
        "required": false,
        "type": "StagedUploadTargetsGeneratePayload"
      },
      {
        "name": "storefrontAccessTokenCreate",
        "description": "Creates a storefront access token.",
        "required": false,
        "type": "StorefrontAccessTokenCreatePayload"
      },
      {
        "name": "storefrontAccessTokenDelete",
        "description": "Deletes a storefront access token.",
        "required": false,
        "type": "StorefrontAccessTokenDeletePayload"
      },
      {
        "name": "tagsAdd",
        "description": "Add tags to a taggable object.",
        "required": false,
        "type": "TagsAddPayload"
      },
      {
        "name": "tagsRemove",
        "description": "Remove tags from a taggable object.",
        "required": false,
        "type": "TagsRemovePayload"
      },
      {
        "name": "translationsRegister",
        "description": "Creates or updates translations.",
        "required": false,
        "type": "TranslationsRegisterPayload"
      },
      {
        "name": "translationsRemove",
        "description": "Removes translations.",
        "required": false,
        "type": "TranslationsRemovePayload"
      },
      {
        "name": "webhookSubscriptionCreate",
        "description": "Creates a new webhook subscription.\n",
        "required": false,
        "type": "WebhookSubscriptionCreatePayload"
      },
      {
        "name": "webhookSubscriptionDelete",
        "description": "Deletes a webhook subscription.\n",
        "required": false,
        "type": "WebhookSubscriptionDeletePayload"
      },
      {
        "name": "webhookSubscriptionUpdate",
        "description": "Updates a webhook subscription.\n",
        "required": false,
        "type": "WebhookSubscriptionUpdatePayload"
      }
    ]
  },
  {
    "name": "AppPurchaseOneTimeCreatePayload",
    "description": "Return type for `appPurchaseOneTimeCreate` mutation.",
    "fields": [
      {
        "name": "appPurchaseOneTime",
        "description": "The newly created app one-time purchase.",
        "required": false,
        "type": "AppPurchaseOneTime"
      },
      {
        "name": "confirmationUrl",
        "description": "The URL where the merchant can approve or decline the app one-time purchase.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppCreditCreatePayload",
    "description": "Return type for `appCreditCreate` mutation.",
    "fields": [
      {
        "name": "appCredit",
        "description": "The newly created app credit.",
        "required": false,
        "type": "AppCredit"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppSubscriptionCreatePayload",
    "description": "Return type for `appSubscriptionCreate` mutation.",
    "fields": [
      {
        "name": "appSubscription",
        "description": "The newly created app subscription.",
        "required": false,
        "type": "AppSubscription"
      },
      {
        "name": "confirmationUrl",
        "description": "The URL where the merchant approves or declines an app subscription.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppSubscriptionCancelPayload",
    "description": "Return type for `appSubscriptionCancel` mutation.",
    "fields": [
      {
        "name": "appSubscription",
        "description": "The cancelled app subscription.",
        "required": false,
        "type": "AppSubscription"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppUsageRecordCreatePayload",
    "description": "Return type for `appUsageRecordCreate` mutation.",
    "fields": [
      {
        "name": "appUsageRecord",
        "description": "The newly created app usage record.",
        "required": false,
        "type": "AppUsageRecord"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AppSubscriptionLineItemUpdatePayload",
    "description": "Return type for `appSubscriptionLineItemUpdate` mutation.",
    "fields": [
      {
        "name": "appSubscription",
        "description": "The updated app subscription.",
        "required": false,
        "type": "AppSubscription"
      },
      {
        "name": "confirmationUrl",
        "description": "The URL where the merchant approves or declines the updated app subscription line item.",
        "required": false,
        "type": "URL"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "BulkOperationCancelPayload",
    "description": "Return type for `bulkOperationCancel` mutation.",
    "fields": [
      {
        "name": "bulkOperation",
        "description": "The bulk operation to be canceled.",
        "required": false,
        "type": "BulkOperation"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "BulkOperationRunQueryPayload",
    "description": "Return type for `bulkOperationRunQuery` mutation.",
    "fields": [
      {
        "name": "bulkOperation",
        "description": "The newly created bulk operation.",
        "required": false,
        "type": "BulkOperation"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionCreatePayload",
    "description": "Return type for `collectionCreate` mutation.",
    "fields": [
      {
        "name": "collection",
        "description": "The collection that has been created.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionDeletePayload",
    "description": "Return type for `collectionDelete` mutation.",
    "fields": [
      {
        "name": "deletedCollectionId",
        "description": "The ID of the collection that was deleted.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "shop",
        "description": "The shop associated with the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionUpdatePayload",
    "description": "Return type for `collectionUpdate` mutation.",
    "fields": [
      {
        "name": "collection",
        "description": "The updated collection.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "job",
        "description": "The asynchronous job updating the products based on the new rule set.",
        "required": false,
        "type": "Job"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionPublishPayload",
    "description": "Return type for `collectionPublish` mutation.",
    "fields": [
      {
        "name": "collection",
        "description": "The published collection.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "collectionPublications",
        "description": "The channels where the collection has been published.",
        "required": false,
        "type": null
      },
      {
        "name": "shop",
        "description": "The shop associated with the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionUnpublishPayload",
    "description": "Return type for `collectionUnpublish` mutation.",
    "fields": [
      {
        "name": "collection",
        "description": "The collection that has been unpublished.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "shop",
        "description": "The shop associated with the collection.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionAddProductsPayload",
    "description": "Return type for `collectionAddProducts` mutation.",
    "fields": [
      {
        "name": "collection",
        "description": "The updated collection.",
        "required": false,
        "type": "Collection"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionRemoveProductsPayload",
    "description": "Return type for `collectionRemoveProducts` mutation.",
    "fields": [
      {
        "name": "job",
        "description": "The asynchronous job removing the products.",
        "required": false,
        "type": "Job"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CollectionReorderProductsPayload",
    "description": "Return type for `collectionReorderProducts` mutation.",
    "fields": [
      {
        "name": "job",
        "description": "The asynchronous job reordering the products.",
        "required": false,
        "type": "Job"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerAddTaxExemptionsPayload",
    "description": "Return type for `customerAddTaxExemptions` mutation.",
    "fields": [
      {
        "name": "customer",
        "description": "The updated customer.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerCreatePayload",
    "description": "Return type for `customerCreate` mutation.",
    "fields": [
      {
        "name": "customer",
        "description": "The created customer.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerDeletePayload",
    "description": "Return type for `customerDelete` mutation.",
    "fields": [
      {
        "name": "deletedCustomerId",
        "description": "ID of the deleted customer.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "shop",
        "description": "Shop of the deleted customer.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerRemoveTaxExemptionsPayload",
    "description": "Return type for `customerRemoveTaxExemptions` mutation.",
    "fields": [
      {
        "name": "customer",
        "description": "The updated customer.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerReplaceTaxExemptionsPayload",
    "description": "Return type for `customerReplaceTaxExemptions` mutation.",
    "fields": [
      {
        "name": "customer",
        "description": "The updated customer.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerUpdatePayload",
    "description": "Return type for `customerUpdate` mutation.",
    "fields": [
      {
        "name": "customer",
        "description": "The updated customer.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CustomerUpdateDefaultAddressPayload",
    "description": "Return type for `customerUpdateDefaultAddress` mutation.",
    "fields": [
      {
        "name": "customer",
        "description": "The customer whose address was updated.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "deliveryProfileCreatePayload",
    "description": "Return type for `deliveryProfileCreate` mutation.",
    "fields": [
      {
        "name": "profile",
        "description": "The delivery profile that was created.",
        "required": false,
        "type": "DeliveryProfile"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "deliveryProfileRemovePayload",
    "description": "Return type for `deliveryProfileRemove` mutation.",
    "fields": [
      {
        "name": "job",
        "description": "The profile deletion job triggered by the mutation.",
        "required": false,
        "type": "Job"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "deliveryProfileUpdatePayload",
    "description": "Return type for `deliveryProfileUpdate` mutation.",
    "fields": [
      {
        "name": "profile",
        "description": "The delivery profile that was updated.",
        "required": false,
        "type": "DeliveryProfile"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliverySettingUpdatePayload",
    "description": "Return type for `deliverySettingUpdate` mutation.",
    "fields": [
      {
        "name": "setting",
        "description": "The updated delivery shop level settings.",
        "required": false,
        "type": "DeliverySetting"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DeliveryShippingOriginAssignPayload",
    "description": "Return type for `deliveryShippingOriginAssign` mutation.",
    "fields": [
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticActivatePayload",
    "description": "Return type for `discountAutomaticActivate` mutation.",
    "fields": [
      {
        "name": "automaticDiscountNode",
        "description": "The activated automatic discount.",
        "required": false,
        "type": "DiscountAutomaticNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountUserError",
    "description": "An error that occurs during the execution of a discount mutation.",
    "fields": [
      {
        "name": "code",
        "description": "An error code to uniquely identify the error.",
        "required": false,
        "type": "DiscountErrorCode"
      },
      {
        "name": "field",
        "description": "Path to the input field which caused the error.",
        "required": false,
        "type": null
      },
      {
        "name": "message",
        "description": "The error message.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticBxgyCreatePayload",
    "description": "Return type for `discountAutomaticBxgyCreate` mutation.",
    "fields": [
      {
        "name": "automaticDiscountNode",
        "description": "The created discount.",
        "required": false,
        "type": "DiscountAutomaticNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticBxgyUpdatePayload",
    "description": "Return type for `discountAutomaticBxgyUpdate` mutation.",
    "fields": [
      {
        "name": "automaticDiscountNode",
        "description": "The updated discount.",
        "required": false,
        "type": "DiscountAutomaticNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticBasicCreatePayload",
    "description": "Return type for `discountAutomaticBasicCreate` mutation.",
    "fields": [
      {
        "name": "automaticDiscountNode",
        "description": "The created discount.",
        "required": false,
        "type": "DiscountAutomaticNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticBasicUpdatePayload",
    "description": "Return type for `discountAutomaticBasicUpdate` mutation.",
    "fields": [
      {
        "name": "automaticDiscountNode",
        "description": "The updated discount.",
        "required": false,
        "type": "DiscountAutomaticNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticDeactivatePayload",
    "description": "Return type for `discountAutomaticDeactivate` mutation.",
    "fields": [
      {
        "name": "automaticDiscountNode",
        "description": "The deactivated automatic discount.",
        "required": false,
        "type": "DiscountAutomaticNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticBulkDeletePayload",
    "description": "Return type for `discountAutomaticBulkDelete` mutation.",
    "fields": [
      {
        "name": "job",
        "description": "The asynchronous job removing the automatic discounts.",
        "required": false,
        "type": "Job"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountAutomaticDeletePayload",
    "description": "Return type for `discountAutomaticDelete` mutation.",
    "fields": [
      {
        "name": "deletedAutomaticDiscountId",
        "description": "The deleted automatic discount ID.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeActivatePayload",
    "description": "Return type for `discountCodeActivate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The activated code discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeBasicCreatePayload",
    "description": "Return type for `discountCodeBasicCreate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The created discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeBasicUpdatePayload",
    "description": "Return type for `discountCodeBasicUpdate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The updated discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeBxgyCreatePayload",
    "description": "Return type for `discountCodeBxgyCreate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The created discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeBxgyUpdatePayload",
    "description": "Return type for `discountCodeBxgyUpdate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The updated discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeDeactivatePayload",
    "description": "Return type for `discountCodeDeactivate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The deactivated code discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeDeletePayload",
    "description": "Return type for `discountCodeDelete` mutation.",
    "fields": [
      {
        "name": "deletedCodeDiscountId",
        "description": "The deleted code discount ID.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeFreeShippingCreatePayload",
    "description": "Return type for `discountCodeFreeShippingCreate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The created discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeFreeShippingUpdatePayload",
    "description": "Return type for `discountCodeFreeShippingUpdate` mutation.",
    "fields": [
      {
        "name": "codeDiscountNode",
        "description": "The updated discount.",
        "required": false,
        "type": "DiscountCodeNode"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderCalculatePayload",
    "description": "Return type for `draftOrderCalculate` mutation.",
    "fields": [
      {
        "name": "calculatedDraftOrder",
        "description": "The calculated properties for a draft order.",
        "required": false,
        "type": "CalculatedDraftOrder"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CalculatedDraftOrder",
    "description": "The computed properties for a draft order.",
    "fields": [
      {
        "name": "appliedDiscount",
        "description": "Order-level discount applied to the draft order.",
        "required": false,
        "type": "DraftOrderAppliedDiscount"
      },
      {
        "name": "availableShippingRates",
        "description": "The available shipping rates for the draft order. Requires a customer with a valid shipping address and at least one line item.",
        "required": false,
        "type": null
      },
      {
        "name": "customer",
        "description": "Customer who will be sent an invoice for the draft order, if there is one.",
        "required": false,
        "type": "Customer"
      },
      {
        "name": "lineItems",
        "description": "Line items in the draft order with their computed properties.",
        "required": false,
        "type": null
      },
      {
        "name": "shippingLine",
        "description": "Line item that contains the shipping costs.",
        "required": false,
        "type": "ShippingLine"
      },
      {
        "name": "subtotalPrice",
        "description": "Subtotal of the line items and their discounts (does not contain shipping charges or shipping discounts, or taxes).\n",
        "required": false,
        "type": null
      },
      {
        "name": "taxLines",
        "description": "Total amount of taxes charged for each line item and shipping line.",
        "required": false,
        "type": null
      },
      {
        "name": "totalPrice",
        "description": "Total amount of the draft order (includes taxes, shipping charges, and discounts).",
        "required": false,
        "type": null
      },
      {
        "name": "totalShippingPrice",
        "description": "Total shipping charge for the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "totalTax",
        "description": "Total amount of taxes for the draft order.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CalculatedDraftOrderLineItem",
    "description": "The computed line items for a draft order.",
    "fields": [
      {
        "name": "appliedDiscount",
        "description": "Discount applied to the line item.",
        "required": false,
        "type": "DraftOrderAppliedDiscount"
      },
      {
        "name": "custom",
        "description": "Indicates if this is a product variant line item, or a custom line item.",
        "required": false,
        "type": null
      },
      {
        "name": "customAttributes",
        "description": "List of additional information (metafields) about the line item.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedTotal",
        "description": "Total price with discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "discountedUnitPrice",
        "description": "Unit price with discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "fulfillmentService",
        "description": "Name of the service provider who fulfilled the order.\n\nValid values are either **manual** or the name of the provider.\nFor example, **amazon**, **shipwire**.\n",
        "required": false,
        "type": null
      },
      {
        "name": "image",
        "description": "Image associated with the draft order line item.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "isGiftCard",
        "description": "Indicates whether the line item represents the puchase of a gift card.",
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": "Name of the product.",
        "required": false,
        "type": null
      },
      {
        "name": "originalTotal",
        "description": "Total price (without discounts) of the line item, based on the original unit price of the variant x quantity.\n",
        "required": false,
        "type": null
      },
      {
        "name": "originalUnitPrice",
        "description": "Variant price without any discounts applied.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "Product associated with the draft order line item.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "quantity",
        "description": "Number of variant items requested in the draft order.",
        "required": false,
        "type": null
      },
      {
        "name": "requiresShipping",
        "description": "Whether physical shipping is required for the variant.",
        "required": false,
        "type": null
      },
      {
        "name": "sku",
        "description": "Variant SKU number.",
        "required": false,
        "type": "String"
      },
      {
        "name": "taxable",
        "description": "Whether the variant is taxable.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "Title of the product or variant (this field only applies to custom line items).",
        "required": false,
        "type": null
      },
      {
        "name": "totalDiscount",
        "description": "Total value of the discount.",
        "required": false,
        "type": null
      },
      {
        "name": "variant",
        "description": "Variant associated with the draft order line item.",
        "required": false,
        "type": "ProductVariant"
      },
      {
        "name": "variantTitle",
        "description": "Name of the variant.",
        "required": false,
        "type": "String"
      },
      {
        "name": "vendor",
        "description": "Name of the vendor who made the variant.",
        "required": false,
        "type": "String"
      },
      {
        "name": "weight",
        "description": "Weight unit and value for a draft order line item.",
        "required": false,
        "type": "Weight"
      }
    ]
  },
  {
    "name": "DraftOrderCompletePayload",
    "description": "Return type for `draftOrderComplete` mutation.",
    "fields": [
      {
        "name": "draftOrder",
        "description": "The completed draft order.",
        "required": false,
        "type": "DraftOrder"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderCreatePayload",
    "description": "Return type for `draftOrderCreate` mutation.",
    "fields": [
      {
        "name": "draftOrder",
        "description": "The created draft order.\n",
        "required": false,
        "type": "DraftOrder"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderDeletePayload",
    "description": "Return type for `draftOrderDelete` mutation.",
    "fields": [
      {
        "name": "deletedId",
        "description": "The ID of the deleted draft order.\n",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderInvoicePreviewPayload",
    "description": "Return type for `draftOrderInvoicePreview` mutation.",
    "fields": [
      {
        "name": "previewHtml",
        "description": "HTML to preview the draft order invoice email.",
        "required": false,
        "type": "HTML"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderInvoiceSendPayload",
    "description": "Return type for `draftOrderInvoiceSend` mutation.",
    "fields": [
      {
        "name": "draftOrder",
        "description": "The draft order an invoice email is sent for.",
        "required": false,
        "type": "DraftOrder"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DraftOrderUpdatePayload",
    "description": "Return type for `draftOrderUpdate` mutation.",
    "fields": [
      {
        "name": "draftOrder",
        "description": "The updated draft order.",
        "required": false,
        "type": "DraftOrder"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FlowTriggerReceivePayload",
    "description": "Return type for `flowTriggerReceive` mutation.",
    "fields": [
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentCreatePayload",
    "description": "Return type for `fulfillmentCreate` mutation.",
    "fields": [
      {
        "name": "fulfillment",
        "description": "The created fulfillment.",
        "required": false,
        "type": "Fulfillment"
      },
      {
        "name": "order",
        "description": "The order for which the fulfillment is created.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentTrackingInfoUpdatePayload",
    "description": "Return type for `fulfillmentTrackingInfoUpdate` mutation.",
    "fields": [
      {
        "name": "fulfillment",
        "description": "The updated fulfillment with tracking information.",
        "required": false,
        "type": "Fulfillment"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentServiceCreatePayload",
    "description": "Return type for `fulfillmentServiceCreate` mutation.",
    "fields": [
      {
        "name": "fulfillmentService",
        "description": "The created fulfillment service.",
        "required": false,
        "type": "FulfillmentService"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentServiceUpdatePayload",
    "description": "Return type for `fulfillmentServiceUpdate` mutation.",
    "fields": [
      {
        "name": "fulfillmentService",
        "description": "The updated fulfillment service.",
        "required": false,
        "type": "FulfillmentService"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "FulfillmentServiceDeletePayload",
    "description": "Return type for `fulfillmentServiceDelete` mutation.",
    "fields": [
      {
        "name": "deletedId",
        "description": "The ID of the deleted fulfillment service.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryActivatePayload",
    "description": "Return type for `inventoryActivate` mutation.",
    "fields": [
      {
        "name": "inventoryLevel",
        "description": "The newly activated inventory level.",
        "required": false,
        "type": "InventoryLevel"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryAdjustQuantityPayload",
    "description": "Return type for `inventoryAdjustQuantity` mutation.",
    "fields": [
      {
        "name": "inventoryLevel",
        "description": "Represents the updated inventory quantity of an inventory item at a specific location.",
        "required": false,
        "type": "InventoryLevel"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryBulkAdjustQuantityAtLocationPayload",
    "description": "Return type for `inventoryBulkAdjustQuantityAtLocation` mutation.",
    "fields": [
      {
        "name": "inventoryLevels",
        "description": "The updated inventory quantities.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryDeactivatePayload",
    "description": "Return type for `inventoryDeactivate` mutation.",
    "fields": [
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "InventoryItemUpdatePayload",
    "description": "Return type for `inventoryItemUpdate` mutation.",
    "fields": [
      {
        "name": "inventoryItem",
        "description": "The updated inventory item.",
        "required": false,
        "type": "InventoryItem"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldDeletePayload",
    "description": "Return type for `metafieldDelete` mutation.",
    "fields": [
      {
        "name": "deletedId",
        "description": null,
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingActivityUpdatePayload",
    "description": "Return type for `marketingActivityUpdate` mutation.",
    "fields": [
      {
        "name": "marketingActivity",
        "description": "The updated marketing activity.",
        "required": false,
        "type": "MarketingActivity"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingEngagementCreatePayload",
    "description": "Return type for `marketingEngagementCreate` mutation.",
    "fields": [
      {
        "name": "marketingEngagement",
        "description": "The marketing engagement that was created.",
        "required": false,
        "type": "MarketingEngagement"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MarketingEngagement",
    "description": "Marketing engagement represents customer activity taken on a marketing event.",
    "fields": [
      {
        "name": "adSpend",
        "description": "The total ad spend for the day, if the marketing event is a paid ad with a daily spend.",
        "required": false,
        "type": "MoneyV2"
      },
      {
        "name": "clicksCount",
        "description": "The total number of clicks on the marketing event for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "commentsCount",
        "description": "The total number of comments for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "complaintsCount",
        "description": "The total number of complaints for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "failsCount",
        "description": "The total number of fails for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "favoritesCount",
        "description": "The total number of favorites for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "fetchedAt",
        "description": "The date time at which the data was fetched.",
        "required": false,
        "type": "DateTime"
      },
      {
        "name": "impressionsCount",
        "description": "The total number of impressions for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "isCumulative",
        "description": "Whether the engagements are reported as lifetime values rather than daily totals.",
        "required": false,
        "type": "Boolean"
      },
      {
        "name": "marketingActivity",
        "description": "The marketing activity related to this engagement.",
        "required": false,
        "type": null
      },
      {
        "name": "occurredOn",
        "description": "The date that these engagements occurred on.",
        "required": false,
        "type": null
      },
      {
        "name": "sendsCount",
        "description": "The total number of sends for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "sharesCount",
        "description": "The total number of shares for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "uniqueClicksCount",
        "description": "The total number of unique clicks for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "uniqueViewsCount",
        "description": "The total number of unique views for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "unsubscribesCount",
        "description": "The total number of unsubscribes for the day.",
        "required": false,
        "type": "Int"
      },
      {
        "name": "utcOffset",
        "description": "The UTC Offset that the app is using to determine which date to allocate spend to.",
        "required": false,
        "type": "UtcOffset"
      },
      {
        "name": "viewsCount",
        "description": "The total number of views for the day.",
        "required": false,
        "type": "Int"
      }
    ]
  },
  {
    "name": "KitSkillTriggerRequestPayload",
    "description": "Return type for `kitSkillTriggerRequest` mutation.",
    "fields": [
      {
        "name": "conversationUid",
        "description": "Conversation unique identifier sent to Conversation API and returned to app developer.",
        "required": false,
        "type": "String"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldStorefrontVisibilityCreatePayload",
    "description": "Return type for `metafieldStorefrontVisibilityCreate` mutation.",
    "fields": [
      {
        "name": "metafieldStorefrontVisibility",
        "description": "The metafield storefront visibility that was created.",
        "required": false,
        "type": "MetafieldStorefrontVisibility"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MetafieldStorefrontVisibilityDeletePayload",
    "description": "Return type for `metafieldStorefrontVisibilityDelete` mutation.",
    "fields": [
      {
        "name": "deletedMetafieldStorefrontVisibilityId",
        "description": "The ID of the deleted metafield storefront visibility.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderCapturePayload",
    "description": "Return type for `orderCapture` mutation.",
    "fields": [
      {
        "name": "transaction",
        "description": "The transaction of the capture.",
        "required": false,
        "type": "OrderTransaction"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderClosePayload",
    "description": "Return type for `orderClose` mutation.",
    "fields": [
      {
        "name": "order",
        "description": "The closed order.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderMarkAsPaidPayload",
    "description": "Return type for `orderMarkAsPaid` mutation.",
    "fields": [
      {
        "name": "order",
        "description": "The order marked as paid.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderOpenPayload",
    "description": "Return type for `orderOpen` mutation.",
    "fields": [
      {
        "name": "order",
        "description": "The opened order.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "OrderUpdatePayload",
    "description": "Return type for `orderUpdate` mutation.",
    "fields": [
      {
        "name": "order",
        "description": "The updated order.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleActivatePayload",
    "description": "Return type for `priceRuleActivate` mutation.",
    "fields": [
      {
        "name": "priceRule",
        "description": "The activated price rule.",
        "required": false,
        "type": "PriceRule"
      },
      {
        "name": "priceRuleUserErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleUserError",
    "description": "Represents an error that happens during execution of a price rule mutation.",
    "fields": [
      {
        "name": "code",
        "description": "Error code to uniquely identify the error.",
        "required": false,
        "type": "PriceRuleErrorCode"
      },
      {
        "name": "field",
        "description": "Path to the input field which caused the error.",
        "required": false,
        "type": null
      },
      {
        "name": "message",
        "description": "The error message.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleCreatePayload",
    "description": "Return type for `priceRuleCreate` mutation.",
    "fields": [
      {
        "name": "priceRule",
        "description": "The newly created price rule.",
        "required": false,
        "type": "PriceRule"
      },
      {
        "name": "priceRuleDiscountCode",
        "description": "The newly created discount code.",
        "required": false,
        "type": "PriceRuleDiscountCode"
      },
      {
        "name": "priceRuleUserErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleDeactivatePayload",
    "description": "Return type for `priceRuleDeactivate` mutation.",
    "fields": [
      {
        "name": "priceRule",
        "description": "The deactivated price rule.",
        "required": false,
        "type": "PriceRule"
      },
      {
        "name": "priceRuleUserErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleDeletePayload",
    "description": "Return type for `priceRuleDelete` mutation.",
    "fields": [
      {
        "name": "deletedPriceRuleId",
        "description": "The id price of the deleted price rule.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "priceRuleUserErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "shop",
        "description": "The shop of the deleted price rule.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleDiscountCodeCreatePayload",
    "description": "Return type for `priceRuleDiscountCodeCreate` mutation.",
    "fields": [
      {
        "name": "priceRule",
        "description": "The updated price rule.",
        "required": false,
        "type": "PriceRule"
      },
      {
        "name": "priceRuleDiscountCode",
        "description": "The newly created discount code.",
        "required": false,
        "type": "PriceRuleDiscountCode"
      },
      {
        "name": "priceRuleUserErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleDiscountCodeUpdatePayload",
    "description": "Return type for `priceRuleDiscountCodeUpdate` mutation.",
    "fields": [
      {
        "name": "priceRule",
        "description": "The updated price rule.",
        "required": false,
        "type": "PriceRule"
      },
      {
        "name": "priceRuleDiscountCode",
        "description": "The updated discount code.",
        "required": false,
        "type": "PriceRuleDiscountCode"
      },
      {
        "name": "priceRuleUserErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PriceRuleUpdatePayload",
    "description": "Return type for `priceRuleUpdate` mutation.",
    "fields": [
      {
        "name": "priceRule",
        "description": "The updated price rule.",
        "required": false,
        "type": "PriceRule"
      },
      {
        "name": "priceRuleDiscountCode",
        "description": "The updated discount code.",
        "required": false,
        "type": "PriceRuleDiscountCode"
      },
      {
        "name": "priceRuleUserErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductAppendImagesPayload",
    "description": "Return type for `productAppendImages` mutation.",
    "fields": [
      {
        "name": "newImages",
        "description": "List of new images appended to the product.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "The product object.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductCreatePayload",
    "description": "Return type for `productCreate` mutation.",
    "fields": [
      {
        "name": "product",
        "description": "The product object.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "shop",
        "description": "The shop associated with the product.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductDeleteImagesPayload",
    "description": "Return type for `productDeleteImages` mutation.",
    "fields": [
      {
        "name": "deletedImageIds",
        "description": "This is an array of IDs of images to delete.",
        "required": false,
        "type": null
      },
      {
        "name": "product",
        "description": "This is the product object.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductImageUpdatePayload",
    "description": "Return type for `productImageUpdate` mutation.",
    "fields": [
      {
        "name": "image",
        "description": "Image updated.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductReorderImagesPayload",
    "description": "Return type for `productReorderImages` mutation.",
    "fields": [
      {
        "name": "job",
        "description": "The asynchronous job reordering the images.",
        "required": false,
        "type": "Job"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductDeletePayload",
    "description": "Return type for `productDelete` mutation.",
    "fields": [
      {
        "name": "deletedProductId",
        "description": "The ID of the deleted product.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "shop",
        "description": "The shop associated with the product.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductDuplicatePayload",
    "description": "Return type for `productDuplicate` mutation.",
    "fields": [
      {
        "name": "imageJob",
        "description": "The asynchronous job duplicating the product images.",
        "required": false,
        "type": "Job"
      },
      {
        "name": "newProduct",
        "description": "The duplicated product.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "shop",
        "description": "The user's shop.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductPublishPayload",
    "description": "Return type for `productPublish` mutation.",
    "fields": [
      {
        "name": "product",
        "description": "The product that has been published.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "productPublications",
        "description": "The channels where the product is published.",
        "required": false,
        "type": null
      },
      {
        "name": "shop",
        "description": "The user's shop.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PublishablePublishPayload",
    "description": "Return type for `publishablePublish` mutation.",
    "fields": [
      {
        "name": "publishable",
        "description": "Resource that has been published.",
        "required": false,
        "type": "Publishable"
      },
      {
        "name": "shop",
        "description": "The user's shop.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PublishablePublishToCurrentChannelPayload",
    "description": "Return type for `publishablePublishToCurrentChannel` mutation.",
    "fields": [
      {
        "name": "publishable",
        "description": "Resource that has been published.",
        "required": false,
        "type": "Publishable"
      },
      {
        "name": "shop",
        "description": "The user's shop.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductUpdatePayload",
    "description": "Return type for `productUpdate` mutation.",
    "fields": [
      {
        "name": "product",
        "description": "The updated product.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SavedSearchCreatePayload",
    "description": "Return type for `savedSearchCreate` mutation.",
    "fields": [
      {
        "name": "savedSearch",
        "description": "The saved search that was created.",
        "required": false,
        "type": "SavedSearch"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SavedSearchDeletePayload",
    "description": "Return type for `savedSearchDelete` mutation.",
    "fields": [
      {
        "name": "deletedSavedSearchId",
        "description": "The id of the saved search that was deleted.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "shop",
        "description": "The shop of the saved search that was deleted.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "SavedSearchUpdatePayload",
    "description": "Return type for `savedSearchUpdate` mutation.",
    "fields": [
      {
        "name": "savedSearch",
        "description": "The saved search that was updated.",
        "required": false,
        "type": "SavedSearch"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductUnpublishPayload",
    "description": "Return type for `productUnpublish` mutation.",
    "fields": [
      {
        "name": "product",
        "description": "The product that has been unpublished.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "shop",
        "description": "The user's shop.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PublishableUnpublishPayload",
    "description": "Return type for `publishableUnpublish` mutation.",
    "fields": [
      {
        "name": "publishable",
        "description": "Resource that has been unpublished.",
        "required": false,
        "type": "Publishable"
      },
      {
        "name": "shop",
        "description": "The user's shop.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PublishableUnpublishToCurrentChannelPayload",
    "description": "Return type for `publishableUnpublishToCurrentChannel` mutation.",
    "fields": [
      {
        "name": "publishable",
        "description": "Resource that has been published.",
        "required": false,
        "type": "Publishable"
      },
      {
        "name": "shop",
        "description": "The user's shop.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantCreatePayload",
    "description": "Return type for `productVariantCreate` mutation.",
    "fields": [
      {
        "name": "product",
        "description": "The product associated with the variant.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "productVariant",
        "description": "The successfully created variant.",
        "required": false,
        "type": "ProductVariant"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantDeletePayload",
    "description": "Return type for `productVariantDelete` mutation.",
    "fields": [
      {
        "name": "deletedProductVariantId",
        "description": "ID of the deleted product variant.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "product",
        "description": "Product of the deleted product variant.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ProductVariantUpdatePayload",
    "description": "Return type for `productVariantUpdate` mutation.",
    "fields": [
      {
        "name": "product",
        "description": "The product associated with the variant.",
        "required": false,
        "type": "Product"
      },
      {
        "name": "productVariant",
        "description": "The updated variant.",
        "required": false,
        "type": "ProductVariant"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PrivateMetafieldUpsertPayload",
    "description": "Return type for `privateMetafieldUpsert` mutation.",
    "fields": [
      {
        "name": "privateMetafield",
        "description": "The private metafield that was created or updated.",
        "required": false,
        "type": "PrivateMetafield"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "PrivateMetafieldDeletePayload",
    "description": "Return type for `privateMetafieldDelete` mutation.",
    "fields": [
      {
        "name": "deletedPrivateMetafieldId",
        "description": "The ID of private metafield that was deleted.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "RefundCreatePayload",
    "description": "Return type for `refundCreate` mutation.",
    "fields": [
      {
        "name": "order",
        "description": "The order associated with the created refund.",
        "required": false,
        "type": "Order"
      },
      {
        "name": "refund",
        "description": "The created refund.",
        "required": false,
        "type": "Refund"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ScriptTagCreatePayload",
    "description": "Return type for `scriptTagCreate` mutation.",
    "fields": [
      {
        "name": "scriptTag",
        "description": "The script tag that was created.",
        "required": false,
        "type": "ScriptTag"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ScriptTagDeletePayload",
    "description": "Return type for `scriptTagDelete` mutation.",
    "fields": [
      {
        "name": "deletedScriptTagId",
        "description": "The ID of the deleted script tag.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ScriptTagUpdatePayload",
    "description": "Return type for `scriptTagUpdate` mutation.",
    "fields": [
      {
        "name": "scriptTag",
        "description": "The script tag that was updated.",
        "required": false,
        "type": "ScriptTag"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShippingPackageDeletePayload",
    "description": "Return type for `shippingPackageDelete` mutation.",
    "fields": [
      {
        "name": "deletedId",
        "description": "The ID of the deleted shipping package.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShippingPackageMakeDefaultPayload",
    "description": "Return type for `shippingPackageMakeDefault` mutation.",
    "fields": [
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShippingPackageUpdatePayload",
    "description": "Return type for `shippingPackageUpdate` mutation.",
    "fields": [
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopLocaleDisablePayload",
    "description": "Return type for `shopLocaleDisable` mutation.",
    "fields": [
      {
        "name": "locale",
        "description": "The locale identifier that was disabled.",
        "required": false,
        "type": "String"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopLocaleEnablePayload",
    "description": "Return type for `shopLocaleEnable` mutation.",
    "fields": [
      {
        "name": "shopLocale",
        "description": "The locale that was enabled.",
        "required": false,
        "type": "ShopLocale"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopLocaleUpdatePayload",
    "description": "Return type for `shopLocaleUpdate` mutation.",
    "fields": [
      {
        "name": "shopLocale",
        "description": "The locale that was updated.",
        "required": false,
        "type": "ShopLocale"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StagedUploadTargetGeneratePayload",
    "description": "Return type for `stagedUploadTargetGenerate` mutation.",
    "fields": [
      {
        "name": "parameters",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "MutationsStagedUploadTargetGenerateUploadParameter",
    "description": null,
    "fields": [
      {
        "name": "name",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": null,
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StagedUploadTargetsGeneratePayload",
    "description": "Return type for `stagedUploadTargetsGenerate` mutation.",
    "fields": [
      {
        "name": "urls",
        "description": "The staged upload targets that were generated.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StagedUploadTarget",
    "description": "Staged target information.",
    "fields": [
      {
        "name": "parameters",
        "description": "Parameters of an image to be uploaded.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "Image URL.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ImageUploadParameter",
    "description": "Upload parameter of an image.",
    "fields": [
      {
        "name": "name",
        "description": "Parameter name.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "Parameter value.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StorefrontAccessTokenCreatePayload",
    "description": "Return type for `storefrontAccessTokenCreate` mutation.",
    "fields": [
      {
        "name": "shop",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "storefrontAccessToken",
        "description": null,
        "required": false,
        "type": "StorefrontAccessToken"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "StorefrontAccessTokenDeletePayload",
    "description": "Return type for `storefrontAccessTokenDelete` mutation.",
    "fields": [
      {
        "name": "deletedStorefrontAccessTokenId",
        "description": null,
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TagsAddPayload",
    "description": "Return type for `tagsAdd` mutation.",
    "fields": [
      {
        "name": "node",
        "description": "The object that was updated.",
        "required": false,
        "type": "Node"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TagsRemovePayload",
    "description": "Return type for `tagsRemove` mutation.",
    "fields": [
      {
        "name": "node",
        "description": "The object that was updated.",
        "required": false,
        "type": "Node"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CommentEvent",
    "description": "Comment events are generated by staff members of a shop.\nThey are created when a staff member adds a comment to the timeline of an order, draft order, customer, or transfer.\n",
    "fields": [
      {
        "name": "appTitle",
        "description": "The name of the app that created the event. Returns null when the event originates from the Shopify admin.",
        "required": false,
        "type": "String"
      },
      {
        "name": "attachments",
        "description": "The attachments associated with the comment event.",
        "required": false,
        "type": null
      },
      {
        "name": "attributeToApp",
        "description": "Whether the event was created by an app.",
        "required": false,
        "type": null
      },
      {
        "name": "attributeToUser",
        "description": "Whether the event was caused by an admin user.",
        "required": false,
        "type": null
      },
      {
        "name": "canDelete",
        "description": "Whether the comment event can be deleted. If true, then the comment event can be deleted.",
        "required": false,
        "type": null
      },
      {
        "name": "canEdit",
        "description": "Whether the comment event can be edited. If true, then the comment event can be edited.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the event was created.",
        "required": false,
        "type": null
      },
      {
        "name": "criticalAlert",
        "description": "Whether the event is critical.",
        "required": false,
        "type": null
      },
      {
        "name": "edited",
        "description": "Whether the comment event has been edited. If true, then the comment event has been edited.",
        "required": false,
        "type": null
      },
      {
        "name": "embed",
        "description": "The references associated with the comment event.",
        "required": false,
        "type": "CommentEventEmbed"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "message",
        "description": "Human readable text that describes the event.",
        "required": false,
        "type": null
      },
      {
        "name": "rawMessage",
        "description": "The raw body of the comment event.",
        "required": false,
        "type": null
      },
      {
        "name": "subject",
        "description": "The subject of the comment event.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "CommentEventAttachment",
    "description": "A file attachment associated to a comment event.",
    "fields": [
      {
        "name": "fileExtension",
        "description": "The file extension of the comment event attachment, indicating the file format.",
        "required": false,
        "type": "String"
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "image",
        "description": "The image attached to the comment event.",
        "required": false,
        "type": "Image"
      },
      {
        "name": "name",
        "description": "The filename of the comment event attachment.",
        "required": false,
        "type": null
      },
      {
        "name": "size",
        "description": "The size of the attachment.",
        "required": false,
        "type": null
      },
      {
        "name": "url",
        "description": "The URL of the attachment.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TranslationsRegisterPayload",
    "description": "Return type for `translationsRegister` mutation.",
    "fields": [
      {
        "name": "translations",
        "description": "The translations that were created or updated.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TranslationUserError",
    "description": "Represents an error that happens during the execution of a translation mutation.",
    "fields": [
      {
        "name": "code",
        "description": "Error code to uniquely identify the error.",
        "required": false,
        "type": "TranslationErrorCode"
      },
      {
        "name": "field",
        "description": "Path to the input field which caused the error.",
        "required": false,
        "type": null
      },
      {
        "name": "message",
        "description": "The error message.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "TranslationsRemovePayload",
    "description": "Return type for `translationsRemove` mutation.",
    "fields": [
      {
        "name": "translations",
        "description": "The translations that were deleted.",
        "required": false,
        "type": null
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "WebhookSubscriptionCreatePayload",
    "description": "Return type for `webhookSubscriptionCreate` mutation.",
    "fields": [
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "webhookSubscription",
        "description": "The webhook subscription that was created.",
        "required": false,
        "type": "WebhookSubscription"
      }
    ]
  },
  {
    "name": "WebhookSubscriptionDeletePayload",
    "description": "Return type for `webhookSubscriptionDelete` mutation.",
    "fields": [
      {
        "name": "deletedWebhookSubscriptionId",
        "description": "The ID of the deleted webhook subscription.",
        "required": false,
        "type": "ID"
      },
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "WebhookSubscriptionUpdatePayload",
    "description": "Return type for `webhookSubscriptionUpdate` mutation.",
    "fields": [
      {
        "name": "userErrors",
        "description": "List of errors that occurred executing the mutation.",
        "required": false,
        "type": null
      },
      {
        "name": "webhookSubscription",
        "description": "The webhook subscription that was updated.",
        "required": false,
        "type": "WebhookSubscription"
      }
    ]
  },
  {
    "name": "__Schema",
    "description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
    "fields": [
      {
        "name": "directives",
        "description": "A list of all directives supported by this server.",
        "required": false,
        "type": null
      },
      {
        "name": "mutationType",
        "description": "If this server supports mutation, the type that mutation operations will be rooted at.",
        "required": false,
        "type": "__Type"
      },
      {
        "name": "queryType",
        "description": "The type that query operations will be rooted at.",
        "required": false,
        "type": null
      },
      {
        "name": "subscriptionType",
        "description": "If this server support subscription, the type that subscription operations will be rooted at.",
        "required": false,
        "type": "__Type"
      },
      {
        "name": "types",
        "description": "A list of all types supported by this server.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "__Type",
    "description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
    "fields": [
      {
        "name": "accessRestricted",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "accessRestrictedReason",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "description",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "enumValues",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "fields",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "inputFields",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "interfaces",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "kind",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "ofType",
        "description": null,
        "required": false,
        "type": "__Type"
      },
      {
        "name": "possibleTypes",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "requiredAccess",
        "description": null,
        "required": false,
        "type": "String"
      }
    ]
  },
  {
    "name": "__Field",
    "description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
    "fields": [
      {
        "name": "accessRestricted",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "accessRestrictedReason",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "args",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "deprecationReason",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "description",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "isDeprecated",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "requiredAccess",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "type",
        "description": null,
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "__Directive",
    "description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
    "fields": [
      {
        "name": "args",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "locations",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "onField",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "onFragment",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "onOperation",
        "description": null,
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "__EnumValue",
    "description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
    "fields": [
      {
        "name": "deprecationReason",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "description",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "isDeprecated",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "name",
        "description": null,
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "__InputValue",
    "description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
    "fields": [
      {
        "name": "defaultValue",
        "description": "A GraphQL-formatted string representing the default value for this input value.",
        "required": false,
        "type": "String"
      },
      {
        "name": "description",
        "description": null,
        "required": false,
        "type": "String"
      },
      {
        "name": "name",
        "description": null,
        "required": false,
        "type": null
      },
      {
        "name": "type",
        "description": null,
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "BasicEvent",
    "description": "Basic events chronicle resource activities such as the creation of an article, the fulfillment of an order, or\nthe addition of a product.\n",
    "fields": [
      {
        "name": "appTitle",
        "description": "The name of the app that created the event. Returns null when the event originates from the Shopify admin.",
        "required": false,
        "type": "String"
      },
      {
        "name": "attributeToApp",
        "description": "Whether the event was created by an app.",
        "required": false,
        "type": null
      },
      {
        "name": "attributeToUser",
        "description": "Whether the event was caused by an admin user.",
        "required": false,
        "type": null
      },
      {
        "name": "createdAt",
        "description": "The date and time when the event was created.",
        "required": false,
        "type": null
      },
      {
        "name": "criticalAlert",
        "description": "Whether the event is critical.",
        "required": false,
        "type": null
      },
      {
        "name": "id",
        "description": "Globally unique identifier.",
        "required": false,
        "type": null
      },
      {
        "name": "message",
        "description": "Human readable text that describes the event.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "DiscountCodeApplication",
    "description": "Discount code applications capture the intentions of a discount code at\nthe time that it is applied onto an order.\n",
    "fields": [
      {
        "name": "allocationMethod",
        "description": "The method by which the discount's value is allocated to its entitled items.",
        "required": false,
        "type": null
      },
      {
        "name": "code",
        "description": "The string identifying the discount code that was used at the time of application.",
        "required": false,
        "type": null
      },
      {
        "name": "index",
        "description": "An ordered index that can be used to identify the discount application and indicate the precedence\nof the discount application for calculations.\n",
        "required": false,
        "type": null
      },
      {
        "name": "targetSelection",
        "description": "How the discount amount is distributed on the discounted lines.",
        "required": false,
        "type": null
      },
      {
        "name": "targetType",
        "description": "Whether the discount is applied on line items or shipping lines.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of the discount application.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ManualDiscountApplication",
    "description": "Manual discount applications capture the intentions of a discount that was manually created for an order.\n",
    "fields": [
      {
        "name": "allocationMethod",
        "description": "The method by which the discount's value is allocated to its entitled items.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "The description of the discount application.",
        "required": false,
        "type": "String"
      },
      {
        "name": "index",
        "description": "An ordered index that can be used to identify the discount application and indicate the precedence\nof the discount application for calculations.\n",
        "required": false,
        "type": null
      },
      {
        "name": "targetSelection",
        "description": "How the discount amount is distributed on the discounted lines.",
        "required": false,
        "type": null
      },
      {
        "name": "targetType",
        "description": "Whether the discount is applied on line items or shipping lines.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the discount application.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of the discount application.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ScriptDiscountApplication",
    "description": "Script discount applications capture the intentions of a discount that\nwas created by a Shopify Script for an order's line item or shipping line.\n",
    "fields": [
      {
        "name": "allocationMethod",
        "description": "The method by which the discount's value is allocated to its entitled items.",
        "required": false,
        "type": null
      },
      {
        "name": "description",
        "description": "The description of the application as defined by the Script.",
        "required": false,
        "type": null
      },
      {
        "name": "index",
        "description": "An ordered index that can be used to identify the discount application and indicate the precedence\nof the discount application for calculations.\n",
        "required": false,
        "type": null
      },
      {
        "name": "targetSelection",
        "description": "How the discount amount is distributed on the discounted lines.",
        "required": false,
        "type": null
      },
      {
        "name": "targetType",
        "description": "Whether the discount is applied on line items or shipping lines.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the application as defined by the Script.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of the discount application.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "AutomaticDiscountApplication",
    "description": "Automatic discount applications capture the intentions of a discount that was automatically applied.\n",
    "fields": [
      {
        "name": "allocationMethod",
        "description": "The method by which the discount's value is allocated to its entitled items.",
        "required": false,
        "type": null
      },
      {
        "name": "index",
        "description": "An ordered index that can be used to identify the discount application and indicate the precedence\nof the discount application for calculations.\n",
        "required": false,
        "type": null
      },
      {
        "name": "targetSelection",
        "description": "How the discount amount is distributed on the discounted lines.",
        "required": false,
        "type": null
      },
      {
        "name": "targetType",
        "description": "Whether the discount is applied on line items or shipping lines.",
        "required": false,
        "type": null
      },
      {
        "name": "title",
        "description": "The title of the discount application.",
        "required": false,
        "type": null
      },
      {
        "name": "value",
        "description": "The value of the discount application.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsDefaultChargeStatementDescriptor",
    "description": "The charge descriptors for a payments account.",
    "fields": [
      {
        "name": "default",
        "description": "The default charge statement descriptor.",
        "required": false,
        "type": "String"
      },
      {
        "name": "prefix",
        "description": "The prefix of the statement descriptor.",
        "required": false,
        "type": null
      }
    ]
  },
  {
    "name": "ShopifyPaymentsJpChargeStatementDescriptor",
    "description": "The charge descriptors for a Japanese payments account.",
    "fields": [
      {
        "name": "default",
        "description": "The default charge statement descriptor.",
        "required": false,
        "type": "String"
      },
      {
        "name": "kana",
        "description": "The charge statement descriptor in kana.",
        "required": false,
        "type": "String"
      },
      {
        "name": "kanji",
        "description": "The charge statement descriptor in kanji.",
        "required": false,
        "type": "String"
      },
      {
        "name": "prefix",
        "description": "The prefix of the statement descriptor.",
        "required": false,
        "type": null
      }
    ]
  }
]